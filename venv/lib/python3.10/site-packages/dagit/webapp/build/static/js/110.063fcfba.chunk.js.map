{"version":3,"file":"static/js/110.063fcfba.chunk.js","mappings":"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","sources":["../../core/src/assets/AssetDefinedInMultipleReposNotice.tsx","../../core/src/assets/AssetNodeList.tsx","../../core/src/assets/AssetNodeDefinition.tsx","../../core/src/assets/AssetNodeInstigatorTag.tsx","../../core/src/assets/AssetNodeLineageGraph.tsx","../../core/src/assets/AssetNodeLineage.tsx","../../core/src/assets/AssetView.tsx","../../core/src/runs/LogsToolbar.tsx","../../core/src/assets/AssetsCatalogRoot.tsx","../../core/src/instance/RepoFilterButton.tsx","../../core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","../../core/src/runs/ComputeLogContent.tsx","../../core/src/runs/useComputeLogs.tsx","../../core/src/runs/ComputeLogPanel.tsx","../../core/src/runs/LogsProvider.tsx","../../core/src/ui/formatters.tsx","../../core/src/runs/ExecutionStateDot.tsx","../../core/src/runs/LogsFilterInput.tsx","../../ui/src/components/useSuggestionsForString.tsx","../../core/src/runs/useJobReExecution.tsx","../../core/src/runs/useQueryPersistedLogFilter.ts","../../core/src/runs/Run.tsx","../../core/src/hooks/useFavicon.tsx","../../core/src/runs/RunRoot.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/runs/AllScheduledTicks.tsx","../../core/src/runs/RunsRoot.tsx","../../core/src/snapshots/SnapshotNav.tsx","../../core/src/snapshots/SnapshotRoot.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/InstanceBackfills.tsx","../../core/src/instance/InstanceConfig.tsx","../../core/src/instance/InstanceHealthPage.tsx","../../core/src/runs/RunStatusPez.tsx","../../core/src/instance/NextTick.tsx","../../core/src/runs/batchRunsForTimeline.tsx","../../core/src/runs/RunTimeline.tsx","../../core/src/instance/JobMenu.tsx","../../core/src/instance/InstanceOverviewPage.tsx","../../core/src/instance/InstanceSchedules.tsx","../../core/src/instance/InstanceSensors.tsx","../../core/src/instance/InstanceStatusRoot.tsx","../../core/src/instance/InstanceRoot.tsx","../../../node_modules/anser/lib/index.js","../../../node_modules/ansi-to-react/lib/index.js","../../../node_modules/escape-carriage/index.js","../../../node_modules/lodash/throttle.js"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\nimport {Alert, Box, Colors} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {buildRepoPath} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\n\nimport {AssetIdScanQuery} from './types/AssetIdScanQuery';\n\nexport const AssetDefinedInMultipleReposNotice: React.FC<{\n  assetId: string;\n  loadedFromRepo: RepoAddress;\n}> = ({assetId, loadedFromRepo}) => {\n  const {data} = useQuery<AssetIdScanQuery>(ASSET_ID_SCAN_QUERY);\n  const otherRepos =\n    data?.repositoriesOrError.__typename === 'RepositoryConnection'\n      ? data.repositoriesOrError.nodes.filter(\n          (r) => r.name !== loadedFromRepo.name || r.location.name !== loadedFromRepo.location,\n        )\n      : [];\n\n  const otherReposWithAsset = otherRepos.filter((r) =>\n    r.assetNodes.some((a) => a.id === assetId && a.opNames.length),\n  );\n\n  if (otherReposWithAsset.length === 0) {\n    return <span />;\n  }\n\n  return (\n    <Box\n      padding={{vertical: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Alert\n        intent=\"info\"\n        title={`Multiple repositories in your workspace include assets with this name. Showing the definition from ${buildRepoPath(\n          loadedFromRepo.name,\n          loadedFromRepo.location,\n        )} below. (Also found in ${otherReposWithAsset\n          .map((o) => buildRepoPath(o.name, o.location.name))\n          .join(', ')}). You may want to consider renaming to avoid collisions.`}\n      />\n    </Box>\n  );\n};\n\nconst ASSET_ID_SCAN_QUERY = gql`\n  query AssetIdScanQuery {\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          location {\n            id\n            name\n          }\n          assetNodes {\n            id\n            opNames\n          }\n        }\n      }\n    }\n  }\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AssetNode} from '../asset-graph/AssetNode';\nimport {LiveData, toGraphId} from '../asset-graph/Utils';\nimport {AssetGraphQuery_assetNodes} from '../asset-graph/types/AssetGraphQuery';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\nexport const AssetNodeList: React.FC<{\n  items: AssetGraphQuery_assetNodes[] | null;\n  liveDataByNode: LiveData;\n}> = ({items, liveDataByNode}) => {\n  const history = useHistory();\n\n  if (items === null) {\n    return (\n      <Container flex={{alignItems: 'center', justifyContent: 'center'}}>\n        <Spinner purpose=\"section\" />\n      </Container>\n    );\n  }\n\n  return (\n    <Container flex={{gap: 4}} padding={{horizontal: 12}}>\n      {items.map((asset) => (\n        <AssetNodeWrapper\n          key={asset.id}\n          onClick={(e) => {\n            e.stopPropagation();\n            history.push(assetDetailsPathForKey(asset.assetKey, {view: 'definition'}));\n          }}\n        >\n          <AssetNode\n            definition={asset}\n            inAssetCatalog\n            selected={false}\n            liveData={liveDataByNode[toGraphId(asset.assetKey)]}\n          />\n        </AssetNodeWrapper>\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled(Box)`\n  height: 144px;\n  overflow-x: auto;\n  width: 100%;\n  white-space: nowrap;\n`;\n\nconst AssetNodeWrapper = styled.div`\n  cursor: pointer;\n  width: 240px;\n  flex-shrink: 0;\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors, Icon, Caption, Subheading, Mono, ConfigTypeSchema} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {ASSET_NODE_FRAGMENT} from '../asset-graph/AssetNode';\nimport {\n  displayNameForAssetKey,\n  isSourceAsset,\n  LiveData,\n  isHiddenAssetGroupJob,\n  __ASSET_JOB_PREFIX,\n} from '../asset-graph/Utils';\nimport {AssetGraphQuery_assetNodes} from '../asset-graph/types/AssetGraphQuery';\nimport {DagsterTypeSummary} from '../dagstertype/DagsterType';\nimport {Description} from '../pipelines/Description';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ASSET_NODE_CONFIG_FRAGMENT, configSchemaForAssetNode} from './AssetConfig';\nimport {AssetDefinedInMultipleReposNotice} from './AssetDefinedInMultipleReposNotice';\nimport {\n  AssetMetadataTable,\n  ASSET_NODE_OP_METADATA_FRAGMENT,\n  metadataForAssetNode,\n} from './AssetMetadata';\nimport {AssetNodeList} from './AssetNodeList';\nimport {PartitionHealthSummary, usePartitionHealthData} from './PartitionHealthSummary';\nimport {AssetNodeDefinitionFragment} from './types/AssetNodeDefinitionFragment';\n\nexport const AssetNodeDefinition: React.FC<{\n  assetNode: AssetNodeDefinitionFragment;\n  upstream: AssetGraphQuery_assetNodes[] | null;\n  downstream: AssetGraphQuery_assetNodes[] | null;\n  liveDataByNode: LiveData;\n}> = ({assetNode, upstream, downstream, liveDataByNode}) => {\n  const partitionHealthData = usePartitionHealthData([assetNode.assetKey]);\n  const {assetMetadata, assetType} = metadataForAssetNode(assetNode);\n\n  const assetConfigSchema = configSchemaForAssetNode(assetNode);\n  const repoAddress = buildRepoAddress(\n    assetNode.repository.name,\n    assetNode.repository.location.name,\n  );\n\n  return (\n    <>\n      <AssetDefinedInMultipleReposNotice assetId={assetNode.id} loadedFromRepo={repoAddress} />\n      <Box flex={{direction: 'row'}} style={{flex: 1}}>\n        <Box\n          style={{flex: 1, minWidth: 0}}\n          flex={{direction: 'column'}}\n          border={{side: 'right', width: 1, color: Colors.KeylineGray}}\n        >\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            flex={{justifyContent: 'space-between', gap: 8}}\n          >\n            <Subheading>Description</Subheading>\n            <DefinitionLocation assetNode={assetNode} repoAddress={repoAddress} />\n          </Box>\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            style={{flex: 1, flexBasis: 'content', flexGrow: 0, minHeight: 120}}\n          >\n            <Description\n              description={assetNode.description || 'No description provided.'}\n              maxHeight={260}\n            />\n          </Box>\n          {assetNode.partitionDefinition && (\n            <>\n              <Box\n                padding={{vertical: 16, horizontal: 24}}\n                border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n                flex={{justifyContent: 'space-between', gap: 8}}\n              >\n                <Subheading>Partitions</Subheading>\n              </Box>\n              <Box\n                padding={{top: 16, horizontal: 24, bottom: 24}}\n                flex={{direction: 'column', gap: 16}}\n              >\n                <p>{assetNode.partitionDefinition}</p>\n                <PartitionHealthSummary assetKey={assetNode.assetKey} data={partitionHealthData} />\n              </Box>\n            </>\n          )}\n\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n            flex={{justifyContent: 'space-between', gap: 8}}\n          >\n            <Subheading>\n              Upstream Assets{upstream?.length ? ` (${upstream.length})` : ''}\n            </Subheading>\n            <Link to=\"?view=lineage&lineageScope=upstream\">\n              <Box flex={{gap: 4, alignItems: 'center'}}>\n                View upstream graph\n                <Icon name=\"open_in_new\" color={Colors.Link} />\n              </Box>\n            </Link>\n          </Box>\n          <AssetNodeList items={upstream} liveDataByNode={liveDataByNode} />\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n            flex={{justifyContent: 'space-between', gap: 8}}\n          >\n            <Subheading>\n              Downstream Assets{downstream?.length ? ` (${downstream.length})` : ''}\n            </Subheading>\n            <Link to=\"?view=lineage&lineageScope=downstream\">\n              <Box flex={{gap: 4, alignItems: 'center'}}>\n                View downstream graph\n                <Icon name=\"open_in_new\" color={Colors.Link} />\n              </Box>\n            </Link>\n          </Box>\n          <AssetNodeList items={downstream} liveDataByNode={liveDataByNode} />\n          {/** Ensures the line between the left and right columns goes to the bottom of the page */}\n          <div style={{flex: 1}} />\n        </Box>\n        {assetConfigSchema ? (\n          <Box\n            border={{side: 'vertical', width: 1, color: Colors.KeylineGray}}\n            style={{flex: 0.5, minWidth: 0}}\n            flex={{direction: 'column'}}\n          >\n            <Box\n              padding={{vertical: 16, horizontal: 24}}\n              border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            >\n              <Subheading>Config</Subheading>\n            </Box>\n            <Box padding={{vertical: 16, horizontal: 24}}>\n              <ConfigTypeSchema\n                type={assetConfigSchema}\n                typesInScope={assetConfigSchema.recursiveConfigTypes}\n              />\n            </Box>\n          </Box>\n        ) : null}\n\n        <Box style={{flex: 0.5, minWidth: 0}} flex={{direction: 'column'}}>\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n          >\n            <Subheading>Type</Subheading>\n          </Box>\n          {assetType ? (\n            <DagsterTypeSummary type={assetType} />\n          ) : (\n            <Box padding={{vertical: 16, horizontal: 24}}>\n              <Description description=\"No type data provided.\" />\n            </Box>\n          )}\n          {assetMetadata.length > 0 && (\n            <>\n              <Box\n                padding={{vertical: 16, horizontal: 24}}\n                border={{side: 'horizontal', width: 1, color: Colors.KeylineGray}}\n                flex={{justifyContent: 'space-between', gap: 8}}\n              >\n                <Subheading>Metadata</Subheading>\n              </Box>\n              <Box style={{flex: 1}}>\n                <AssetMetadataTable assetMetadata={assetMetadata} />\n              </Box>\n            </>\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst DefinitionLocation: React.FC<{\n  assetNode: AssetNodeDefinitionFragment;\n  repoAddress: RepoAddress;\n}> = ({assetNode, repoAddress}) => (\n  <Box flex={{alignItems: 'baseline', gap: 16, wrap: 'wrap'}} style={{lineHeight: 0}}>\n    {assetNode.jobNames\n      .filter((jobName) => !isHiddenAssetGroupJob(jobName))\n      .map((jobName) => (\n        <Mono key={jobName}>\n          <PipelineReference\n            isJob\n            showIcon\n            pipelineName={jobName}\n            pipelineHrefContext={repoAddress}\n          />\n        </Mono>\n      ))}\n    <OpNamesDisplay assetNode={assetNode} repoAddress={repoAddress} />\n    {isSourceAsset(assetNode) && (\n      <Caption style={{lineHeight: '16px', marginTop: 2}}>Source Asset</Caption>\n    )}\n  </Box>\n);\n\nconst OpNamesDisplay = (props: {\n  assetNode: AssetNodeDefinitionFragment;\n  repoAddress: RepoAddress;\n}) => {\n  const {assetNode, repoAddress} = props;\n  const {assetKey, graphName, opNames, jobNames} = assetNode;\n  const opCount = opNames.length;\n\n  if (!opCount) {\n    return null;\n  }\n\n  if (!graphName) {\n    const firstOp = opNames[0];\n    if (displayNameForAssetKey(assetKey) === firstOp) {\n      return null;\n    }\n    const opPath = workspacePathFromAddress(repoAddress, `/ops/${firstOp}`);\n    return (\n      <Box flex={{gap: 4, alignItems: 'center'}}>\n        <Icon name=\"op\" size={16} />\n        <Mono>\n          <Link to={opPath}>{firstOp}</Link>\n        </Mono>\n      </Box>\n    );\n  }\n\n  if (!jobNames.length) {\n    return null;\n  }\n\n  return (\n    <Box flex={{gap: 4, alignItems: 'center'}}>\n      <Icon name=\"schema\" size={16} />\n      <Mono>\n        <Link to={workspacePathFromAddress(repoAddress, `/graphs/${jobNames[0]}/${graphName}/`)}>\n          {graphName}\n        </Link>\n        {` (${opCount === 1 ? '1 op' : `${opCount} ops`})`}\n      </Mono>\n    </Box>\n  );\n};\n\nexport const ASSET_NODE_DEFINITION_FRAGMENT = gql`\n  fragment AssetNodeDefinitionFragment on AssetNode {\n    id\n    ...AssetNodeConfigFragment\n    description\n    graphName\n    opNames\n    jobNames\n    partitionDefinition\n    repository {\n      id\n      name\n      location {\n        id\n        name\n      }\n    }\n    ...AssetNodeFragment\n    ...AssetNodeOpMetadataFragment\n  }\n  ${ASSET_NODE_CONFIG_FRAGMENT}\n  ${ASSET_NODE_FRAGMENT}\n  ${ASSET_NODE_OP_METADATA_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport flatMap from 'lodash/flatMap';\nimport React from 'react';\n\nimport {ScheduleOrSensorTag} from '../nav/ScheduleOrSensorTag';\nimport {SCHEDULE_SWITCH_FRAGMENT} from '../schedules/ScheduleSwitch';\nimport {SENSOR_SWITCH_FRAGMENT} from '../sensors/SensorSwitch';\nimport {RepoAddress} from '../workspace/types';\n\nimport {AssetNodeInstigatorsFragment} from './types/AssetNodeInstigatorsFragment';\n\nexport const AssetNodeInstigatorTag: React.FC<{\n  assetNode: AssetNodeInstigatorsFragment;\n  repoAddress: RepoAddress;\n}> = ({assetNode, repoAddress}) => {\n  const schedules = flatMap(assetNode.jobs, (j) => j.schedules);\n  const sensors = flatMap(assetNode.jobs, (j) => j.sensors);\n\n  return (\n    <ScheduleOrSensorTag\n      repoAddress={repoAddress}\n      schedules={schedules}\n      sensors={sensors}\n      showSwitch={false}\n    />\n  );\n};\n\nexport const ASSET_NODE_INSTIGATORS_FRAGMENT = gql`\n  fragment AssetNodeInstigatorsFragment on AssetNode {\n    id\n    jobs {\n      id\n      name\n      schedules {\n        id\n        __typename\n        ...ScheduleSwitchFragment\n      }\n      sensors {\n        id\n        __typename\n        ...SensorSwitchFragment\n      }\n    }\n  }\n  ${SCHEDULE_SWITCH_FRAGMENT}\n  ${SENSOR_SWITCH_FRAGMENT}\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AssetConnectedEdges} from '../asset-graph/AssetEdges';\nimport {MINIMAL_SCALE} from '../asset-graph/AssetGraphExplorer';\nimport {AssetNodeMinimal, AssetNode} from '../asset-graph/AssetNode';\nimport {ForeignNode} from '../asset-graph/ForeignNode';\nimport {GraphData, LiveData, toGraphId} from '../asset-graph/Utils';\nimport {SVGViewport} from '../graph/SVGViewport';\nimport {useAssetLayout} from '../graph/asyncGraphLayout';\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nimport {AssetViewParams} from './AssetView';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {AssetKey} from './types';\nimport {AssetNodeDefinitionFragment} from './types/AssetNodeDefinitionFragment';\n\nconst LINEAGE_GRAPH_ZOOM_LEVEL = 'lineageGraphZoomLevel';\n\nexport type AssetLineageScope = 'neighbors' | 'upstream' | 'downstream';\n\nexport const AssetNodeLineageGraph: React.FC<{\n  assetNode: AssetNodeDefinitionFragment;\n  assetGraphData: GraphData;\n  liveDataByNode: LiveData;\n  params: AssetViewParams;\n}> = ({assetNode, assetGraphData, liveDataByNode, params}) => {\n  const assetGraphId = toGraphId(assetNode.assetKey);\n\n  const [highlighted, setHighlighted] = React.useState<string | null>(null);\n\n  const {layout, loading} = useAssetLayout(assetGraphData);\n  const viewportEl = React.useRef<SVGViewport>();\n  const history = useHistory();\n\n  const onClickAsset = (key: AssetKey) => {\n    history.push(assetDetailsPathForKey(key, {...params, lineageScope: 'neighbors'}));\n  };\n\n  React.useEffect(() => {\n    if (viewportEl.current && layout) {\n      const lastZoomLevel = Number(getJSONForKey(LINEAGE_GRAPH_ZOOM_LEVEL));\n      viewportEl.current.autocenter(false, lastZoomLevel);\n      viewportEl.current.focus();\n    }\n  }, [viewportEl, layout, assetGraphId]);\n\n  if (!layout || loading) {\n    return (\n      <Box style={{flex: 1}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n        <Spinner purpose=\"page\" />\n      </Box>\n    );\n  }\n\n  return (\n    <SVGViewport\n      ref={(r) => (viewportEl.current = r || undefined)}\n      interactor={SVGViewport.Interactors.PanAndZoom}\n      graphWidth={layout.width}\n      graphHeight={layout.height}\n      onDoubleClick={(e) => {\n        viewportEl.current?.autocenter(true);\n        e.stopPropagation();\n      }}\n      maxZoom={1.2}\n      maxAutocenterZoom={1.2}\n    >\n      {({scale}) => (\n        <SVGContainer width={layout.width} height={layout.height}>\n          {viewportEl.current && <SVGSaveZoomLevel scale={scale} />}\n          <AssetConnectedEdges highlighted={highlighted} edges={layout.edges} />\n\n          {Object.values(layout.nodes).map(({id, bounds}) => {\n            const graphNode = assetGraphData.nodes[id];\n            const path = JSON.parse(id);\n\n            return (\n              <foreignObject\n                {...bounds}\n                key={id}\n                style={{overflow: 'visible'}}\n                onMouseEnter={() => setHighlighted(id)}\n                onMouseLeave={() => setHighlighted(null)}\n                onClick={() => onClickAsset({path})}\n                onDoubleClick={(e) => {\n                  viewportEl.current?.zoomToSVGBox(bounds, true, 1.2);\n                  e.stopPropagation();\n                }}\n              >\n                {!graphNode || !graphNode.definition.opNames.length ? (\n                  <ForeignNode assetKey={{path}} />\n                ) : scale < MINIMAL_SCALE ? (\n                  <AssetNodeMinimal\n                    definition={graphNode.definition}\n                    selected={graphNode.id === assetGraphId}\n                  />\n                ) : (\n                  <AssetNode\n                    definition={graphNode.definition}\n                    liveData={liveDataByNode[graphNode.id]}\n                    selected={graphNode.id === assetGraphId}\n                  />\n                )}\n              </foreignObject>\n            );\n          })}\n        </SVGContainer>\n      )}\n    </SVGViewport>\n  );\n};\n\nconst SVGSaveZoomLevel = ({scale}: {scale: number}) => {\n  React.useEffect(() => {\n    try {\n      window.localStorage.setItem(LINEAGE_GRAPH_ZOOM_LEVEL, JSON.stringify(scale));\n    } catch (err) {\n      // no-op\n    }\n  }, [scale]);\n  return <></>;\n};\n\nconst SVGContainer = styled.svg`\n  overflow: visible;\n  border-radius: 0;\n`;\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Colors,\n  Icon,\n  JoinedButtons,\n  TextInput,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {GraphData, LiveData} from '../asset-graph/Utils';\nimport {AssetGraphQueryItem, calculateGraphDistances} from '../asset-graph/useAssetGraphData';\n\nimport {AssetLineageScope, AssetNodeLineageGraph} from './AssetNodeLineageGraph';\nimport {AssetViewParams} from './AssetView';\nimport {LaunchAssetExecutionButton} from './LaunchAssetExecutionButton';\nimport {AssetNodeDefinitionFragment} from './types/AssetNodeDefinitionFragment';\n\nexport const AssetNodeLineage: React.FC<{\n  params: AssetViewParams;\n  setParams: (params: AssetViewParams) => void;\n  assetNode: AssetNodeDefinitionFragment;\n  assetGraphData: GraphData;\n  liveDataByNode: LiveData;\n  requestedDepth: number;\n  graphQueryItems: AssetGraphQueryItem[];\n}> = ({\n  params,\n  setParams,\n  assetNode,\n  liveDataByNode,\n  assetGraphData,\n  graphQueryItems,\n  requestedDepth,\n}) => {\n  const maxDistances = React.useMemo(\n    () => calculateGraphDistances(graphQueryItems, assetNode.assetKey),\n    [graphQueryItems, assetNode],\n  );\n  const maxDepth =\n    params.lineageScope === 'upstream'\n      ? maxDistances.upstream\n      : params.lineageScope === 'downstream'\n      ? maxDistances.downstream\n      : Math.max(maxDistances.upstream, maxDistances.downstream);\n\n  return (\n    <>\n      <Box\n        flex={{justifyContent: 'space-between', alignItems: 'center', gap: 12}}\n        padding={{left: 24, right: 12, vertical: 12}}\n        border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n      >\n        <ButtonGroup<AssetLineageScope>\n          activeItems={new Set([params.lineageScope || 'neighbors'])}\n          buttons={[\n            {id: 'neighbors', label: 'Nearest Neighbors', icon: 'graph_neighbors'},\n            {id: 'upstream', label: 'Upstream', icon: 'graph_upstream'},\n            {id: 'downstream', label: 'Downstream', icon: 'graph_downstream'},\n          ]}\n          onClick={(lineageScope) => setParams({...params, lineageScope, lineageDepth: undefined})}\n        />\n        <LineageDepthControl\n          value={Math.max(1, Math.min(maxDepth, requestedDepth))}\n          onChange={(depth) => setParams({...params, lineageDepth: depth})}\n          max={maxDepth}\n        />\n        <Checkbox\n          format=\"switch\"\n          label=\"Include secondary edges\"\n          checked={!!params.lineageShowSecondaryEdges}\n          onChange={() =>\n            setParams({\n              ...params,\n              lineageShowSecondaryEdges: params.lineageShowSecondaryEdges ? undefined : true,\n            })\n          }\n        />\n        <div style={{flex: 1}} />\n        {Object.values(assetGraphData.nodes).length > 1 ? (\n          <LaunchAssetExecutionButton\n            assetKeys={Object.values(assetGraphData.nodes).map((n) => n.assetKey)}\n            liveDataByNode={liveDataByNode}\n            intent=\"none\"\n            context=\"all\"\n          />\n        ) : (\n          <Button icon={<Icon name=\"materialization\" />} disabled>\n            Materialize all\n          </Button>\n        )}\n      </Box>\n      <AssetNodeLineageGraph\n        assetNode={assetNode}\n        liveDataByNode={liveDataByNode}\n        assetGraphData={assetGraphData}\n        params={params}\n      />\n    </>\n  );\n};\n\nconst LineageDepthControl: React.FC<{\n  value: number;\n  max: number;\n  onChange: (v: number) => void;\n}> = ({value, max, onChange}) => {\n  const [text, setText] = React.useState(`${value}`);\n  React.useEffect(() => {\n    setText(`${value}`);\n  }, [value]);\n\n  // We maintain the value in a separate piece of state so the user can clear it\n  // or briefly have an invalid value, and also so that the graph doesn't re-render\n  // on each keystroke which could be expensive.\n  const commitText = () => {\n    const next = Number(text) ? Math.min(max, Number(text)) : value;\n    onChange(next);\n  };\n\n  return (\n    <Box flex={{gap: 8, alignItems: 'center'}}>\n      <JoinedButtons>\n        <Button\n          disabled={value <= 1}\n          onClick={() => onChange(value - 1)}\n          icon={<Icon name=\"arrow_back\" />}\n        />\n        <TextInput\n          min={1}\n          max={max}\n          disabled={max <= 1}\n          inputMode=\"numeric\"\n          style={{\n            width: 40,\n            marginLeft: 2,\n            textAlign: 'center',\n            height: 32,\n            padding: 6,\n            borderRadius: 0,\n            boxShadow: 'none',\n            border: `1px solid ${Colors.Gray300}`,\n          }}\n          key={value}\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyDown={(e) => (e.key === 'Enter' || e.key === 'Return' ? commitText() : undefined)}\n          onBlur={() => commitText()}\n        />\n        <Button\n          disabled={value >= max}\n          onClick={() => onChange(value + 1)}\n          icon={<Icon name=\"arrow_forward\" />}\n        />\n        <Button disabled={value >= max} onClick={() => onChange(max)}>\n          All\n        </Button>\n      </JoinedButtons>\n      Layers shown\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  BaseTag,\n  Box,\n  ButtonLink,\n  Colors,\n  NonIdealState,\n  Spinner,\n  Tab,\n  Tabs,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {GraphData, toGraphId, tokenForAssetKey} from '../asset-graph/Utils';\nimport {useAssetGraphData} from '../asset-graph/useAssetGraphData';\nimport {useLiveDataForAssetKeys} from '../asset-graph/useLiveDataForAssetKeys';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {useDidLaunchEvent} from '../runs/RunUtils';\nimport {AssetComputeStatus} from '../types/globalTypes';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {AssetEvents} from './AssetEvents';\nimport {AssetNodeDefinition, ASSET_NODE_DEFINITION_FRAGMENT} from './AssetNodeDefinition';\nimport {AssetNodeInstigatorTag, ASSET_NODE_INSTIGATORS_FRAGMENT} from './AssetNodeInstigatorTag';\nimport {AssetNodeLineage} from './AssetNodeLineage';\nimport {AssetLineageScope} from './AssetNodeLineageGraph';\nimport {AssetPageHeader} from './AssetPageHeader';\nimport {LaunchAssetExecutionButton} from './LaunchAssetExecutionButton';\nimport {AssetKey} from './types';\nimport {AssetQuery, AssetQueryVariables} from './types/AssetQuery';\n\ninterface Props {\n  assetKey: AssetKey;\n}\n\nexport interface AssetViewParams {\n  view?: 'activity' | 'definition' | 'lineage';\n  lineageScope?: AssetLineageScope;\n  lineageShowSecondaryEdges?: boolean;\n  lineageDepth?: number;\n  partition?: string;\n  time?: string;\n  asOf?: string;\n}\n\nexport const AssetView: React.FC<Props> = ({assetKey}) => {\n  const [params, setParams] = useQueryPersistedState<AssetViewParams>({});\n\n  const queryResult = useQuery<AssetQuery, AssetQueryVariables>(ASSET_QUERY, {\n    variables: {assetKey: {path: assetKey.path}},\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const {assetOrError} = queryResult.data || queryResult.previousData || {};\n  const asset = assetOrError && assetOrError.__typename === 'Asset' ? assetOrError : null;\n  const lastMaterializedAt = asset?.assetMaterializations[0]?.timestamp;\n  const viewingMostRecent = !params.asOf || Number(lastMaterializedAt) <= Number(params.asOf);\n\n  const definition = asset?.definition;\n  const repoAddress = definition\n    ? buildRepoAddress(definition.repository.name, definition.repository.location.name)\n    : null;\n\n  const token = tokenForAssetKey(assetKey);\n\n  const defaultDepth = params.lineageScope === 'neighbors' ? 2 : 5;\n  const requestedDepth = Number(params.lineageDepth) || defaultDepth;\n  const depthStr = '+'.repeat(requestedDepth);\n\n  const {assetGraphData, graphAssetKeys, graphQueryItems} = useAssetGraphData(\n    params.view === 'lineage' && params.lineageScope === 'upstream'\n      ? `${depthStr}\"${token}\"`\n      : params.view === 'lineage' && params.lineageScope === 'downstream'\n      ? `\"${token}\"${depthStr}`\n      : `${depthStr}\"${token}\"${depthStr}`,\n    {hideEdgesToNodesOutsideQuery: !params.lineageShowSecondaryEdges},\n  );\n\n  const {upstream, downstream} = useNeighborsFromGraph(assetGraphData, assetKey);\n  const {liveResult, liveDataByNode} = useLiveDataForAssetKeys(graphAssetKeys);\n\n  const refreshState = useMergedRefresh(\n    useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS),\n    useQueryRefreshAtInterval(liveResult, FIFTEEN_SECONDS),\n  );\n\n  // Refresh immediately when a run is launched from this page\n  useDidLaunchEvent(queryResult.refetch);\n  useDidLaunchEvent(liveResult.refetch);\n\n  // Avoid thrashing the materializations UI (which chooses a different default query based on whether\n  // data is partitioned) by waiting for the definition to be loaded. (null OR a valid definition)\n  const isDefinitionLoaded = definition !== undefined;\n  const isUpstreamChanged =\n    liveDataByNode[toGraphId(assetKey)]?.computeStatus === AssetComputeStatus.OUT_OF_DATE;\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', width: '100%', overflowY: 'auto'}}>\n      <AssetPageHeader\n        assetKey={assetKey}\n        tags={\n          <>\n            {repoAddress ? (\n              <Tag icon=\"asset\">\n                Asset in <RepositoryLink repoAddress={repoAddress} />\n              </Tag>\n            ) : (\n              <Tag icon=\"asset_non_sda\">Asset</Tag>\n            )}\n            {definition && repoAddress && (\n              <AssetNodeInstigatorTag assetNode={definition} repoAddress={repoAddress} />\n            )}\n            {definition && repoAddress && definition.groupName && (\n              <Tag icon=\"asset_group\">\n                <Link\n                  to={workspacePathFromAddress(\n                    repoAddress,\n                    `/asset-groups/${definition.groupName}`,\n                  )}\n                >\n                  {definition.groupName}\n                </Link>\n              </Tag>\n            )}\n            {isUpstreamChanged ? (\n              <Box\n                onClick={() => setParams({...params, view: 'lineage', lineageScope: 'upstream'})}\n              >\n                <BaseTag\n                  fillColor={Colors.Yellow50}\n                  textColor={Colors.Yellow700}\n                  label=\"Upstream changed\"\n                  interactive\n                />\n              </Box>\n            ) : undefined}\n          </>\n        }\n        tabs={\n          <Tabs size=\"large\" selectedTabId={params.view || 'activity'}>\n            <Tab\n              id=\"activity\"\n              title=\"Activity\"\n              onClick={() => setParams({...params, view: 'activity'})}\n            />\n            <Tab\n              id=\"definition\"\n              title=\"Definition\"\n              onClick={() => setParams({...params, view: 'definition'})}\n              disabled={!definition}\n            />\n            <Tab\n              id=\"lineage\"\n              title=\"Lineage\"\n              onClick={() => setParams({...params, view: 'lineage'})}\n              disabled={!definition}\n            />\n          </Tabs>\n        }\n        right={\n          <Box style={{margin: '-4px 0'}} flex={{gap: 12, alignItems: 'baseline'}}>\n            <Box margin={{top: 4}}>\n              <QueryRefreshCountdown refreshState={refreshState} />\n            </Box>\n            {definition && definition.jobNames.length > 0 && repoAddress && upstream && (\n              <LaunchAssetExecutionButton\n                assetKeys={[definition.assetKey]}\n                liveDataByNode={liveDataByNode}\n              />\n            )}\n          </Box>\n        }\n      />\n\n      <div>\n        {queryResult.loading && !queryResult.previousData ? (\n          <Box\n            style={{height: 390}}\n            flex={{direction: 'row', justifyContent: 'center', alignItems: 'center'}}\n          >\n            <Spinner purpose=\"page\" />\n          </Box>\n        ) : viewingMostRecent ? null : (\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n          >\n            <HistoricalViewAlert\n              asOf={params.asOf}\n              onClick={() => setParams({asOf: undefined, time: params.asOf})}\n              hasDefinition={!!definition}\n            />\n          </Box>\n        )}\n      </div>\n      {isDefinitionLoaded &&\n        (params.view === 'definition' ? (\n          definition ? (\n            <AssetNodeDefinition\n              assetNode={definition}\n              upstream={upstream}\n              downstream={downstream}\n              liveDataByNode={liveDataByNode}\n            />\n          ) : (\n            <AssetNoDefinitionState />\n          )\n        ) : params.view === 'lineage' ? (\n          definition ? (\n            assetGraphData ? (\n              <AssetNodeLineage\n                params={params}\n                setParams={setParams}\n                assetNode={definition}\n                liveDataByNode={liveDataByNode}\n                assetGraphData={assetGraphData}\n                requestedDepth={requestedDepth}\n                graphQueryItems={graphQueryItems}\n              />\n            ) : (\n              <Box style={{flex: 1}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n                <Spinner purpose=\"page\" />\n              </Box>\n            )\n          ) : (\n            <AssetNoDefinitionState />\n          )\n        ) : (\n          <AssetEvents\n            assetKey={assetKey}\n            assetLastMaterializedAt={lastMaterializedAt}\n            assetHasDefinedPartitions={!!definition?.partitionDefinition}\n            params={params}\n            paramsTimeWindowOnly={!!params.asOf}\n            setParams={setParams}\n            liveData={definition ? liveDataByNode[toGraphId(definition.assetKey)] : undefined}\n          />\n        ))}\n    </Box>\n  );\n};\n\nconst AssetNoDefinitionState = () => (\n  <Box padding={{vertical: 32}}>\n    <NonIdealState\n      title=\"No definition\"\n      description=\"This asset doesn't have a software definition in any of your loaded repositories.\"\n      icon=\"materialization\"\n    />\n  </Box>\n);\n\nfunction useNeighborsFromGraph(graphData: GraphData | null, assetKey: AssetKey) {\n  const graphId = toGraphId(assetKey);\n\n  return React.useMemo(() => {\n    if (!graphData) {\n      return {upstream: null, downstream: null};\n    }\n    return {\n      upstream: Object.values(graphData.nodes)\n        .filter((n) => graphData.upstream[graphId]?.[toGraphId(n.assetKey)])\n        .map((n) => n.definition),\n      downstream: Object.values(graphData.nodes)\n        .filter((n) => graphData.downstream[graphId]?.[toGraphId(n.assetKey)])\n        .map((n) => n.definition),\n    };\n  }, [graphData, graphId]);\n}\n\nconst ASSET_QUERY = gql`\n  query AssetQuery($assetKey: AssetKeyInput!) {\n    assetOrError(assetKey: $assetKey) {\n      ... on Asset {\n        id\n        key {\n          path\n        }\n\n        assetMaterializations(limit: 1) {\n          timestamp\n        }\n\n        definition {\n          id\n          groupName\n          partitionDefinition\n          repository {\n            id\n            name\n            location {\n              id\n              name\n            }\n          }\n\n          ...AssetNodeInstigatorsFragment\n          ...AssetNodeDefinitionFragment\n        }\n      }\n    }\n  }\n  ${ASSET_NODE_INSTIGATORS_FRAGMENT}\n  ${ASSET_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst HistoricalViewAlert: React.FC<{\n  asOf: string | undefined;\n  onClick: () => void;\n  hasDefinition: boolean;\n}> = ({asOf, onClick, hasDefinition}) => (\n  <Alert\n    intent=\"info\"\n    title={\n      <span>\n        This is a historical view of materializations as of{' '}\n        <span style={{fontWeight: 600}}>\n          <Timestamp\n            timestamp={{ms: Number(asOf)}}\n            timeFormat={{showSeconds: true, showTimezone: true}}\n          />\n        </span>\n        .\n      </span>\n    }\n    description={\n      <ButtonLink onClick={onClick} underline=\"always\">\n        {hasDefinition\n          ? 'Show definition and latest materializations'\n          : 'Show latest materializations'}\n      </ButtonLink>\n    }\n  />\n);\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Group,\n  IconName,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  Tab,\n  Tabs,\n  IconWrapper,\n  Colors,\n  Tooltip,\n  FontFamily,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useCopyToClipboard} from '../app/browser';\nimport {OptionsContainer, OptionsDivider} from '../gantt/VizComponents';\nimport {compactNumber} from '../ui/formatters';\n\nimport {ExecutionStateDot} from './ExecutionStateDot';\nimport {LogLevel} from './LogLevel';\nimport {LogsFilterInput} from './LogsFilterInput';\nimport {LogFilter, LogFilterValue} from './LogsProvider';\nimport {\n  extractLogCaptureStepsFromLegacySteps,\n  ILogCaptureInfo,\n  IRunMetadataDict,\n  IStepState,\n} from './RunMetadataProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nexport enum LogType {\n  structured = 'structured',\n  stdout = 'stdout',\n  stderr = 'stderr',\n}\n\ninterface ILogsToolbarProps {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  counts: LogLevelCounts;\n\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  logType: LogType;\n  onSetLogType: (logType: LogType) => void;\n  computeLogKey?: string;\n  onSetComputeLogKey: (key: string) => void;\n  computeLogUrl: string | null;\n}\n\nconst logQueryToString = (logQuery: LogFilterValue[]) =>\n  logQuery.map(({token, value}) => (token ? `${token}:${value}` : value)).join(' ');\n\nexport const LogsToolbar: React.FC<ILogsToolbarProps> = (props) => {\n  const {\n    steps,\n    metadata,\n    counts,\n    filter,\n    onSetFilter,\n    logType,\n    onSetLogType,\n    computeLogKey,\n    onSetComputeLogKey,\n    computeLogUrl,\n  } = props;\n\n  const activeItems = React.useMemo(\n    () => new Set([logType === LogType.structured ? logType : LogType.stdout]),\n    [logType],\n  );\n\n  return (\n    <OptionsContainer>\n      <ButtonGroup\n        activeItems={activeItems}\n        buttons={[\n          {id: LogType.structured, icon: 'list', tooltip: 'Structured event logs'},\n          {id: LogType.stdout, icon: 'wysiwyg', tooltip: 'Raw compute logs'},\n        ]}\n        onClick={(id) => onSetLogType(id)}\n      />\n      <OptionsDivider />\n      {logType === 'structured' ? (\n        <StructuredLogToolbar\n          counts={counts}\n          filter={filter}\n          onSetFilter={onSetFilter}\n          steps={steps}\n        />\n      ) : (\n        <ComputeLogToolbar\n          steps={steps}\n          metadata={metadata}\n          logType={logType}\n          onSetLogType={onSetLogType}\n          computeLogKey={computeLogKey}\n          onSetComputeLogKey={onSetComputeLogKey}\n          computeLogUrl={computeLogUrl}\n        />\n      )}\n    </OptionsContainer>\n  );\n};\n\nconst resolveState = (metadata: IRunMetadataDict, logCapture: ILogCaptureInfo) => {\n  // resolves the state of potentially many steps into a single state so that we can show the\n  // execution dot representing the status of this log capture group (potentially at the process\n  // level)\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.RUNNING)) {\n    return IStepState.RUNNING;\n  }\n  if (logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey].state === IStepState.SKIPPED)) {\n    return IStepState.SKIPPED;\n  }\n  if (\n    logCapture.stepKeys.every((stepKey) => metadata.steps[stepKey].state === IStepState.SUCCEEDED)\n  ) {\n    return IStepState.SUCCEEDED;\n  }\n  return IStepState.FAILED;\n};\n\nconst ComputeLogToolbar = ({\n  steps,\n  metadata,\n  computeLogKey,\n  onSetComputeLogKey,\n  logType,\n  onSetLogType,\n  computeLogUrl,\n}: {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  computeLogKey?: string;\n  onSetComputeLogKey: (step: string) => void;\n  logType: LogType;\n  onSetLogType: (type: LogType) => void;\n  computeLogUrl: string | null;\n}) => {\n  const logCaptureSteps =\n    metadata.logCaptureSteps || extractLogCaptureStepsFromLegacySteps(Object.keys(metadata.steps));\n  const isValidStepSelection = computeLogKey && logCaptureSteps[computeLogKey];\n  const logKeyText = (logKey?: string) => {\n    if (!logKey || !logCaptureSteps[logKey]) {\n      return null;\n    }\n    const captureInfo = logCaptureSteps[logKey];\n    if (captureInfo.stepKeys.length === 1 && logKey === captureInfo.stepKeys[0]) {\n      return logKey;\n    }\n    if (captureInfo.pid) {\n      return `pid: ${captureInfo.pid} (${captureInfo.stepKeys.length} steps)`;\n    }\n    return `${logKey} (${captureInfo.stepKeys.length} steps)`;\n  };\n\n  return (\n    <Box\n      flex={{justifyContent: 'space-between', alignItems: 'center', direction: 'row'}}\n      style={{flex: 1}}\n    >\n      <Group direction=\"row\" spacing={24} alignItems=\"center\">\n        <Select\n          disabled={!steps.length}\n          items={Object.keys(logCaptureSteps)}\n          itemRenderer={(item: string, options: {handleClick: any; modifiers: any}) => (\n            <MenuItem\n              key={item}\n              onClick={options.handleClick}\n              text={logKeyText(item)}\n              active={options.modifiers.active}\n            />\n          )}\n          activeItem={computeLogKey}\n          filterable={false}\n          onItemSelect={(logKey) => {\n            onSetComputeLogKey(logKey);\n          }}\n        >\n          <Button disabled={!steps.length} rightIcon={<Icon name=\"expand_more\" />}>\n            {logKeyText(computeLogKey) || 'Select a step...'}\n          </Button>\n        </Select>\n        {isValidStepSelection ? (\n          <Tabs selectedTabId={logType} onChange={onSetLogType} size=\"small\">\n            <Tab id={LogType.stdout} title=\"stdout\" />\n            <Tab id={LogType.stderr} title=\"stderr\" />\n          </Tabs>\n        ) : null}\n      </Group>\n      {isValidStepSelection ? (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          {computeLogKey && logCaptureSteps[computeLogKey] ? (\n            resolveState(metadata, logCaptureSteps[computeLogKey]) === IStepState.RUNNING ? (\n              <Spinner purpose=\"body-text\" />\n            ) : (\n              <ExecutionStateDot state={resolveState(metadata, logCaptureSteps[computeLogKey])} />\n            )\n          ) : null}\n          {computeLogUrl ? (\n            <Tooltip\n              placement=\"top-end\"\n              content={\n                computeLogKey && logCaptureSteps[computeLogKey]?.stepKeys.length === 1\n                  ? `Download ${logCaptureSteps[computeLogKey]?.stepKeys[0]} compute logs`\n                  : `Download compute logs`\n              }\n            >\n              <DownloadLink aria-label=\"Download link\" href={computeLogUrl} download>\n                <Icon name=\"download_for_offline\" color={Colors.Gray600} />\n              </DownloadLink>\n            </Tooltip>\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DownloadLink = styled.a`\n  border-radius: 4px;\n  display: block;\n  text-decoration: none;\n\n  ${IconWrapper} {\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper} {\n    background-color: ${Colors.Gray800};\n  }\n\n  :active ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport type LogLevelCounts = Record<LogLevel, number>;\n\nconst StructuredLogToolbar = ({\n  filter,\n  counts,\n  onSetFilter,\n  steps,\n}: {\n  filter: LogFilter;\n  counts: LogLevelCounts;\n  onSetFilter: (filter: LogFilter) => void;\n  steps: string[];\n}) => {\n  const [copyIcon, setCopyIcon] = React.useState<IconName>('assignment');\n  const logQueryString = logQueryToString(filter.logQuery);\n  const [queryString, setQueryString] = React.useState<string>(() => logQueryString);\n  const copyToClipboard = useCopyToClipboard();\n\n  const selectedStep = filter.logQuery.find((v) => v.token === 'step')?.value || null;\n  const filterText = filter.logQuery.reduce((accum, value) => accum + value.value, '');\n\n  // Reset the query string if the filter is updated, allowing external behavior\n  // (e.g. clicking a Gantt step) to set the input.\n  React.useEffect(() => {\n    setQueryString(logQueryString);\n  }, [logQueryString]);\n\n  const onChange = (value: string) => {\n    const tokens = value.split(/\\s+/);\n    const logQuery = tokens.map((item) => {\n      const segments = item.split(':');\n      if (segments.length > 1) {\n        return {token: segments[0], value: segments[1]};\n      }\n      return {value: segments[0]};\n    });\n    onSetFilter({...filter, logQuery: logQuery as LogFilterValue[]});\n    setQueryString(value);\n  };\n\n  // Restore the clipboard icon after a delay.\n  React.useEffect(() => {\n    let token: any;\n    if (copyIcon === 'assignment_turned_in') {\n      token = setTimeout(() => {\n        setCopyIcon('assignment');\n      }, 2000);\n    }\n    return () => {\n      token && clearTimeout(token);\n    };\n  }, [copyIcon]);\n\n  return (\n    <>\n      <LogsFilterInput\n        value={queryString}\n        suggestionProviders={getRunFilterProviders(steps)}\n        onChange={onChange}\n      />\n      {filterText ? (\n        <NonMatchCheckbox\n          checked={filter.hideNonMatches}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSetFilter({...filter, hideNonMatches: event.currentTarget.checked})\n          }\n          label=\"Hide non-matches\"\n        />\n      ) : null}\n      <OptionsDivider />\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        {Object.keys(LogLevel).map((level) => {\n          const enabled = filter.levels[level];\n          return (\n            <FilterLabel key={level} $enabled={enabled}>\n              <Checkbox\n                format=\"switch\"\n                size=\"small\"\n                checked={!!enabled}\n                fillColor={enabled ? Colors.Blue500 : Colors.Gray200}\n                onChange={() =>\n                  onSetFilter({\n                    ...filter,\n                    levels: {\n                      ...filter.levels,\n                      [level]: !enabled,\n                    },\n                  })\n                }\n              />\n              <LogLabel $enabled={enabled}>{level.toLowerCase()}</LogLabel>\n              <LogCount $enabled={enabled}>{compactNumber(counts[level])}</LogCount>\n            </FilterLabel>\n          );\n        })}\n      </Box>\n      {selectedStep && <OptionsDivider />}\n      <div style={{minWidth: 15, flex: 1}} />\n      <Button\n        icon={<Icon name={copyIcon} />}\n        onClick={() => {\n          copyToClipboard(window.location.href);\n          setCopyIcon('assignment_turned_in');\n        }}\n      >\n        Copy URL\n      </Button>\n    </>\n  );\n};\n\nconst NonMatchCheckbox = styled(Checkbox)`\n  &&& {\n    margin: 0 4px 0 12px;\n  }\n\n  white-space: nowrap;\n`;\n\nconst FilterLabel = styled.label<{$enabled: boolean}>`\n  background-color: ${({$enabled}) => ($enabled ? Colors.Blue50 : Colors.Gray100)};\n  border: none;\n  border-radius: 8px;\n  margin: 0;\n  padding: 4px 6px;\n  overflow: hidden;\n  cursor: pointer;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 500;\n  gap: 6px;\n\n  box-shadow: transparent inset 0px 0px 0px 1px;\n  transition: background 50ms linear;\n\n  :focus {\n    box-shadow: rgba(58, 151, 212, 0.6) 0 0 0 3px;\n    outline: none;\n  }\n\n  :focus:not(:focus-visible) {\n    box-shadow: transparent inset 0px 0px 0px 1px, rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n  }\n`;\n\nconst LogLabel = styled.span<{$enabled: boolean}>`\n  color: ${({$enabled}) => ($enabled ? Colors.Blue500 : Colors.Gray700)};\n  line-height: 16px;\n  transition: background 50ms linear;\n`;\n\nconst LogCount = styled.span<{$enabled: boolean}>`\n  background-color: ${({$enabled}) => ($enabled ? Colors.Blue100 : Colors.Gray200)};\n  border-radius: 6px;\n  color: ${({$enabled}) => ($enabled ? Colors.Blue500 : Colors.Gray700)};\n  font-weight: 600;\n  font-family: ${FontFamily.monospace};\n  line-height: 16px;\n  padding: 1px 4px;\n  transition: background 50ms linear;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Page, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\nimport {useParams} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\nimport {AssetGlobalLineageLink, AssetPageHeader} from './AssetPageHeader';\nimport {AssetView} from './AssetView';\nimport {AssetsCatalogTable} from './AssetsCatalogTable';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  AssetsCatalogRootQuery,\n  AssetsCatalogRootQueryVariables,\n} from './types/AssetsCatalogRootQuery';\n\nexport const AssetsCatalogRoot = () => {\n  useTrackPageView();\n\n  const params = useParams();\n  const history = useHistory();\n  const currentPath: string[] = (params['0'] || '')\n    .split('/')\n    .filter((x: string) => x)\n    .map(decodeURIComponent);\n\n  const queryResult = useQuery<AssetsCatalogRootQuery, AssetsCatalogRootQueryVariables>(\n    ASSETS_CATALOG_ROOT_QUERY,\n    {\n      skip: currentPath.length === 0,\n      variables: {assetKey: {path: currentPath}},\n    },\n  );\n\n  useDocumentTitle(\n    currentPath && currentPath.length\n      ? `Assets: ${displayNameForAssetKey({path: currentPath})}`\n      : 'Assets',\n  );\n\n  return queryResult.loading ? (\n    <Page>\n      <AssetPageHeader assetKey={{path: currentPath}} />\n      <Box padding={64}>\n        <Spinner purpose=\"page\" />\n      </Box>\n    </Page>\n  ) : currentPath.length === 0 ||\n    queryResult.data?.assetOrError.__typename === 'AssetNotFoundError' ? (\n    <Page>\n      <AssetPageHeader\n        assetKey={{path: currentPath}}\n        right={\n          <Box flex={{gap: 12, alignItems: 'center'}}>\n            <AssetGlobalLineageLink />\n            <ReloadAllButton label=\"Reload definitions\" />\n          </Box>\n        }\n      />\n      <AssetsCatalogTable\n        prefixPath={currentPath}\n        setPrefixPath={(prefixPath) => history.push(assetDetailsPathForKey({path: prefixPath}))}\n      />\n    </Page>\n  ) : (\n    <AssetView assetKey={{path: currentPath}} />\n  );\n};\n\nconst ASSETS_CATALOG_ROOT_QUERY = gql`\n  query AssetsCatalogRootQuery($assetKey: AssetKeyInput!) {\n    assetOrError(assetKey: $assetKey) {\n      __typename\n      ... on Asset {\n        id\n        key {\n          path\n        }\n      }\n    }\n  }\n`;\n","import {Box, Button, DialogFooter, DialogHeader, Dialog, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {RepoSelector} from '../nav/RepoSelector';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nexport const RepoFilterButton: React.FC = () => {\n  const {allRepos, visibleRepos, toggleVisible} = React.useContext(WorkspaceContext);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Dialog\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        style={{width: 'auto'}}\n        onClose={() => setOpen(false)}\n      >\n        <DialogHeader icon=\"repo\" label=\"Repositories\" />\n        <RepoSelector\n          options={allRepos}\n          onBrowse={() => setOpen(false)}\n          onToggle={toggleVisible}\n          selected={visibleRepos}\n        />\n        <DialogFooter>\n          <Box padding={{top: 8}}>\n            <Button intent=\"none\" onClick={() => setOpen(false)}>\n              Done\n            </Button>\n          </Box>\n        </DialogFooter>\n      </Dialog>\n\n      <Button\n        intent=\"none\"\n        icon={<Icon name=\"folder\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n        onClick={() => setOpen(true)}\n      >\n        {`${visibleRepos.length} of ${allRepos.length} Repositories`}\n      </Button>\n    </>\n  );\n};\n","import {Page, PageHeader, Heading} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {RepoFilterButton} from '../instance/RepoFilterButton';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport const AssetsGroupsGlobalGraphRoot: React.FC = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const history = useHistory();\n\n  useDocumentTitle(`Global Asset Lineage`);\n\n  const onChangeExplorerPath = React.useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode](\n        `/instance/asset-groups${explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(\n          __GLOBAL__,\n          '',\n        )}`,\n      );\n    },\n    [history],\n  );\n\n  const onNavigateToForeignNode = React.useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = React.useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        return !visibleRepos.some(\n          (repo) =>\n            repo.repositoryLocation.name === node.repository.location.name &&\n            repo.repository.name === node.repository.name,\n        );\n      },\n    };\n    return options;\n  }, [visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={\n          <div style={{marginBottom: -8}}>\n            <ReloadAllButton label=\"Reload definitions\" />\n          </div>\n        }\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        fetchOptionFilters={<>{allRepos.length > 1 && <RepoFilterButton />}</>}\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={explorerPathFromString(__GLOBAL__ + path || '/')}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToForeignNode={onNavigateToForeignNode}\n      />\n    </Page>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Colors, Group, Icon, Spinner, FontFamily} from '@dagster-io/ui';\nimport Ansi from 'ansi-to-react';\nimport * as React from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\n\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\n\nconst TRUNCATE_PREFIX = '\\u001b[33m...logs truncated...\\u001b[39m\\n';\nconst SCROLLER_LINK_TIMEOUT_MS = 3000;\nexport const MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst shouldTruncate = (content: string | null | undefined) => {\n  if (!content) {\n    return false;\n  }\n  const encoder = new TextEncoder();\n  return encoder.encode(content).length >= MAX_STREAMING_LOG_BYTES;\n};\n\nexport class ComputeLogContent extends React.Component<{\n  logData?: ComputeLogContentFileFragment | null;\n  downloadUrl?: string | null;\n  isLoading?: boolean;\n  isVisible: boolean;\n}> {\n  private timeout: number | null = null;\n  private contentContainer = React.createRef<ScrollContainer>();\n\n  state = {\n    showScrollToTop: false,\n  };\n\n  hideWarning = () => {\n    this.setState({showScrollToTop: false});\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = 0;\n    }\n  };\n\n  scheduleHideWarning = () => {\n    this.timeout = window.setTimeout(this.hideWarning, SCROLLER_LINK_TIMEOUT_MS);\n  };\n\n  cancelHideWarning = () => {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = 0;\n    }\n  };\n\n  onScrollUp = (position: number) => {\n    this.cancelHideWarning();\n\n    if (!position) {\n      this.hideWarning();\n    } else {\n      this.setState({showScrollToTop: true});\n      this.scheduleHideWarning();\n    }\n  };\n\n  onScrollDown = (_position: number) => {\n    this.hideWarning();\n  };\n\n  scrollToTop = () => {\n    this.contentContainer.current && this.contentContainer.current.scrollToTop();\n  };\n\n  renderScrollToTop() {\n    const {showScrollToTop} = this.state;\n\n    if (!showScrollToTop) {\n      return null;\n    }\n\n    return (\n      <ScrollToast>\n        <ScrollToTop\n          onClick={() => this.scrollToTop()}\n          onMouseOver={this.cancelHideWarning}\n          onMouseOut={this.scheduleHideWarning}\n        >\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"arrow_upward\" color={Colors.White} />\n            Scroll to top\n          </Group>\n        </ScrollToTop>\n      </ScrollToast>\n    );\n  }\n\n  render() {\n    const {logData, isLoading, isVisible, downloadUrl} = this.props;\n    let content = logData?.data;\n    const isTruncated = shouldTruncate(content);\n\n    if (content && isTruncated) {\n      const nextLine = content.indexOf('\\n') + 1;\n      const truncated = nextLine < content.length ? content.slice(nextLine) : content;\n      content = TRUNCATE_PREFIX + truncated;\n    }\n    const warning = isTruncated ? (\n      <FileWarning>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          <Icon name=\"warning\" color={Colors.Yellow500} />\n          <div>\n            This log has exceeded the 5MB limit.{' '}\n            {downloadUrl ? (\n              <a href={downloadUrl} download>\n                Download the full log file\n              </a>\n            ) : null}\n            .\n          </div>\n        </Group>\n      </FileWarning>\n    ) : null;\n\n    return (\n      <>\n        <FileContainer isVisible={isVisible}>\n          {this.renderScrollToTop()}\n          <FileContent>\n            {warning}\n            <RelativeContainer>\n              <LogContent\n                isSelected={true}\n                content={content}\n                onScrollUp={this.onScrollUp}\n                onScrollDown={this.onScrollDown}\n                ref={this.contentContainer}\n              />\n            </RelativeContainer>\n          </FileContent>\n          {isLoading ? (\n            <LoadingContainer>\n              <Spinner purpose=\"page\" />\n            </LoadingContainer>\n          ) : null}\n        </FileContainer>\n        <FileFooter isVisible={isVisible}>{logData?.path}</FileFooter>\n      </>\n    );\n  }\n}\n\nexport const COMPUTE_LOG_CONTENT_FRAGMENT = gql`\n  fragment ComputeLogContentFileFragment on ComputeLogFile {\n    path\n    cursor\n    data\n    downloadUrl\n  }\n`;\n\ninterface IScrollContainerProps {\n  content: string | null | undefined;\n  isSelected?: boolean;\n  className?: string;\n  onScrollUp?: (position: number) => void;\n  onScrollDown?: (position: number) => void;\n}\n\nclass ScrollContainer extends React.Component<IScrollContainerProps> {\n  private container = React.createRef<HTMLDivElement>();\n  private lastScroll = 0;\n\n  componentDidMount() {\n    this.scrollToBottom();\n    if (this.container.current) {\n      this.container.current.focus();\n      this.container.current.addEventListener('scroll', this.onScroll);\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    if (!this.container.current) {\n      return false;\n    }\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const shouldScroll = offsetHeight + scrollTop >= scrollHeight;\n    return shouldScroll;\n  }\n\n  componentDidUpdate(_props: any, _state: any, shouldScroll: boolean) {\n    if (shouldScroll) {\n      this.scrollToBottom();\n    }\n    if (this.props.isSelected && !_props.isSelected) {\n      this.container.current && this.container.current.focus();\n    }\n  }\n\n  onScroll = () => {\n    if (!this.container.current || !this.props.isSelected) {\n      return;\n    }\n    const {onScrollUp, onScrollDown} = this.props;\n\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const position = scrollTop / (scrollHeight - offsetHeight);\n    if (this.container.current.scrollTop < this.lastScroll) {\n      onScrollUp && onScrollUp(position);\n    } else {\n      onScrollDown && onScrollDown(position);\n    }\n    this.lastScroll = this.container.current.scrollTop;\n  };\n\n  focus() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.focus();\n  }\n\n  scrollToBottom() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = node.scrollHeight - node.offsetHeight;\n  }\n\n  scrollToTop() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = 0;\n    node.focus();\n  }\n\n  render() {\n    const {content, className} = this.props;\n    if (!content) {\n      return (\n        <div className={className} ref={this.container}>\n          <ContentContainer style={{justifyContent: 'center', alignItems: 'center'}}>\n            {content == null ? 'No log file available' : 'No output'}\n          </ContentContainer>\n        </div>\n      );\n    }\n\n    return (\n      <div className={className} style={{outline: 'none'}} ref={this.container} tabIndex={0}>\n        <ContentContainer>\n          <LineNumbers content={content} />\n          <Content>\n            <SolarizedColors />\n            <Ansi linkify={false} useClasses>\n              {content}\n            </Ansi>\n          </Content>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nconst LineNumbers = (props: IScrollContainerProps) => {\n  const {content} = props;\n  if (!content) {\n    return null;\n  }\n  const matches = content.match(/\\n/g);\n  const count = matches ? matches.length : 0;\n  return (\n    <LineNumberContainer>\n      {Array.from(Array(count), (_, i) => (\n        <div key={i}>{String(i + 1)}</div>\n      ))}\n    </LineNumberContainer>\n  );\n};\n\nconst FileContainer = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n  &:first-child {\n    border-right: 0.5px solid #5c7080;\n  }\n  display: flex;\n  flex-direction: column;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst FileFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 30px;\n  background-color: ${Colors.Gray900};\n  border-top: 0.5px solid #5c7080;\n  color: #aaaaaa;\n  padding: 2px 5px;\n  font-size: 0.85em;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100%;\n  background-color: ${Colors.Gray900};\n`;\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${Colors.Gray900};\n`;\nconst LineNumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-right: 1px solid #5c7080;\n  padding: 10px 10px 10px 20px;\n  margin-right: 5px;\n  background-color: ${Colors.Gray900};\n  opacity: 0.8;\n  color: #858585;\n  min-height: 100%;\n`;\nconst SolarizedColors = createGlobalStyle`\n  .ansi-black {\n    color: #586e75;\n  }\n  .ansi-red {\n    color: #dc322f;\n  }\n  .ansi-green {\n    color: #859900;\n  }\n  .ansi-yellow {\n    color: #b58900;\n  }\n  .ansi-blue {\n    color: #268bd2;\n  }\n  .ansi-magenta {\n    color: #d33682;\n  }\n  .ansi-cyan {\n    color: #2aa198;\n  }\n  .ansi-white {\n    color: #eee8d5;\n  }\n`;\nconst FileContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nconst RelativeContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\nconst LogContent = styled(ScrollContainer)`\n  color: #eeeeee;\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  white-space: pre;\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst FileWarning = styled.div`\n  background-color: #fffae3;\n  padding: 10px 20px;\n  margin: 20px 70px;\n  border-radius: 5px;\n`;\nconst ScrollToast = styled.div`\n  position: absolute;\n  height: 30px;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1;\n`;\nconst ScrollToTop = styled.div`\n  background-color: black;\n  padding: 10px 20px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  color: white;\n  border-bottom: 0.5px solid #5c7080;\n  border-left: 0.5px solid #5c7080;\n  border-right: 0.5px solid #5c7080;\n  cursor: pointer;\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justifycontent: center;\n  alignitems: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  backgroundcolor: ${Colors.Gray800};\n  opacity: 0.3;\n`;\n","import {gql, useSubscription} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ComputeIOType} from '../types/globalTypes';\n\nimport {COMPUTE_LOG_CONTENT_FRAGMENT, MAX_STREAMING_LOG_BYTES} from './ComputeLogContent';\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\nimport {\n  ComputeLogsSubscription,\n  ComputeLogsSubscriptionVariables,\n} from './types/ComputeLogsSubscription';\nimport {ComputeLogsSubscriptionFragment} from './types/ComputeLogsSubscriptionFragment';\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (\n  a: ComputeLogContentFileFragment | null,\n  b: ComputeLogContentFileFragment | null,\n): ComputeLogContentFileFragment | null => {\n  if (!b) {\n    return a;\n  }\n  let data = a?.data;\n  if (a?.data && b?.data) {\n    data = slice(a.data + b.data);\n  } else if (b?.data) {\n    data = slice(b.data);\n  }\n  return {\n    __typename: b.__typename,\n    path: b.path,\n    downloadUrl: b.downloadUrl,\n    data: typeof data === 'string' ? data : null,\n    cursor: b.cursor,\n  };\n};\n\ninterface State {\n  stepKey: string;\n  stdout: ComputeLogsSubscriptionFragment | null;\n  stderr: ComputeLogsSubscriptionFragment | null;\n  isLoading: boolean;\n}\n\ntype Action =\n  | {type: 'stdout'; stepKey: string; log: ComputeLogsSubscriptionFragment | null}\n  | {type: 'stderr'; stepKey: string; log: ComputeLogsSubscriptionFragment | null};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'stdout':\n      const stdout =\n        action.stepKey === state.stepKey ? merge(state.stdout, action.log) : action.log;\n      return {...state, isLoading: false, stdout};\n    case 'stderr':\n      const stderr =\n        action.stepKey === state.stepKey ? merge(state.stderr, action.log) : action.log;\n      return {...state, isLoading: false, stderr};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stepKey: '',\n  stdout: null,\n  stderr: null,\n  isLoading: true,\n};\n\nexport const useComputeLogs = (runId: string, stepKey?: string) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey: stepKey!, ioType: ComputeIOType.STDOUT, cursor: null},\n      skip: !stepKey,\n      onSubscriptionData: ({subscriptionData}) => {\n        if (stepKey) {\n          dispatch({type: 'stdout', stepKey, log: subscriptionData.data?.computeLogs || null});\n        }\n      },\n    },\n  );\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey: stepKey!, ioType: ComputeIOType.STDERR, cursor: null},\n      skip: !stepKey,\n      onSubscriptionData: ({subscriptionData}) => {\n        if (stepKey) {\n          dispatch({type: 'stderr', stepKey, log: subscriptionData.data?.computeLogs || null});\n        }\n      },\n    },\n  );\n\n  return state;\n};\n\nconst COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT = gql`\n  fragment ComputeLogsSubscriptionFragment on ComputeLogFile {\n    data\n    cursor\n    ...ComputeLogContentFileFragment\n  }\n  ${COMPUTE_LOG_CONTENT_FRAGMENT}\n`;\n\nconst COMPUTE_LOGS_SUBSCRIPTION = gql`\n  subscription ComputeLogsSubscription(\n    $runId: ID!\n    $stepKey: String!\n    $ioType: ComputeIOType!\n    $cursor: String\n  ) {\n    computeLogs(runId: $runId, stepKey: $stepKey, ioType: $ioType, cursor: $cursor) {\n      ...ComputeLogsSubscriptionFragment\n    }\n  }\n  ${COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT}\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\n\nimport {ComputeLogContent} from './ComputeLogContent';\nimport {ComputeLogContentFileFragment} from './types/ComputeLogContentFileFragment';\nimport {useComputeLogs} from './useComputeLogs';\ninterface RunComputeLogs {\n  runId: string;\n  stepKeys: string[];\n  computeLogKey?: string;\n  ioType: string;\n  setComputeLogUrl: (url: string | null) => void;\n}\n\nconst resolveDownloadUrl = (\n  rootServerURI: string,\n  logData: ComputeLogContentFileFragment | null,\n) => {\n  const downloadUrl = logData?.downloadUrl;\n  if (!downloadUrl) {\n    return null;\n  }\n  const isRelativeUrl = (x?: string) => x && x.startsWith('/');\n  return isRelativeUrl(downloadUrl) ? rootServerURI + downloadUrl : downloadUrl;\n};\n\nexport const ComputeLogPanel: React.FC<RunComputeLogs> = React.memo(\n  ({runId, stepKeys, computeLogKey, ioType, setComputeLogUrl}) => {\n    const {rootServerURI} = React.useContext(AppContext);\n    const {isLoading, stdout, stderr} = useComputeLogs(runId, computeLogKey);\n\n    if (!stepKeys.length || !computeLogKey) {\n      return (\n        <Box\n          flex={{justifyContent: 'center', alignItems: 'center'}}\n          style={{flex: 1, height: '100%'}}\n        >\n          <Spinner purpose=\"section\" />\n        </Box>\n      );\n    }\n\n    const logData = ioType === 'stdout' ? stdout : stderr;\n    const downloadUrl = resolveDownloadUrl(rootServerURI, logData);\n\n    return (\n      <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n        <ContentWrapper\n          logData={stdout}\n          isLoading={isLoading}\n          isVisible={ioType === 'stdout'}\n          downloadUrl={downloadUrl}\n          setComputeLogUrl={setComputeLogUrl}\n        />\n        <ContentWrapper\n          logData={stderr}\n          isLoading={isLoading}\n          isVisible={ioType === 'stderr'}\n          downloadUrl={downloadUrl}\n          setComputeLogUrl={setComputeLogUrl}\n        />\n      </div>\n    );\n  },\n);\n\nconst ContentWrapper = ({\n  isLoading,\n  isVisible,\n  logData,\n  downloadUrl,\n  setComputeLogUrl,\n}: {\n  isVisible: boolean;\n  isLoading: boolean;\n  logData: ComputeLogContentFileFragment | null;\n  downloadUrl: string | null;\n  setComputeLogUrl: (url: string | null) => void;\n}) => {\n  React.useEffect(() => {\n    setComputeLogUrl(downloadUrl);\n  }, [setComputeLogUrl, downloadUrl]);\n  return (\n    <ComputeLogContent\n      logData={logData}\n      isLoading={isLoading}\n      isVisible={isVisible}\n      downloadUrl={downloadUrl}\n    />\n  );\n};\n","import {gql, useApolloClient, useQuery, useSubscription} from '@apollo/client';\nimport {TokenizingFieldValue} from '@dagster-io/ui';\nimport throttle from 'lodash/throttle';\nimport * as React from 'react';\n\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {LogLevelCounts} from './LogsToolbar';\nimport {RunFragments} from './RunFragments';\nimport {logNodeLevel} from './logNodeLevel';\nimport {LogNode} from './types';\nimport {\n  PipelineRunLogsSubscription,\n  PipelineRunLogsSubscriptionVariables,\n  PipelineRunLogsSubscription_pipelineRunLogs_PipelineRunLogsSubscriptionSuccess,\n} from './types/PipelineRunLogsSubscription';\nimport {PipelineRunLogsSubscriptionStatusFragment} from './types/PipelineRunLogsSubscriptionStatusFragment';\nimport {RunDagsterRunEventFragment} from './types/RunDagsterRunEventFragment';\nimport {RunLogsQuery, RunLogsQueryVariables} from './types/RunLogsQuery';\n\nexport interface LogFilterValue extends TokenizingFieldValue {\n  token?: 'step' | 'type' | 'query';\n}\n\nexport interface LogFilter {\n  logQuery: LogFilterValue[];\n  levels: {[key: string]: boolean};\n  focusedTime: number;\n  sinceTime: number;\n  hideNonMatches: boolean;\n}\n\nexport interface LogsProviderLogs {\n  allNodes: LogNode[];\n  counts: LogLevelCounts;\n  loading: boolean;\n}\n\nconst pipelineStatusFromMessages = (messages: RunDagsterRunEventFragment[]) => {\n  const reversed = [...messages].reverse();\n  for (const message of reversed) {\n    const {__typename} = message;\n    switch (__typename) {\n      case 'RunStartEvent':\n        return RunStatus.STARTED;\n      case 'RunEnqueuedEvent':\n        return RunStatus.QUEUED;\n      case 'RunStartingEvent':\n        return RunStatus.STARTING;\n      case 'RunCancelingEvent':\n        return RunStatus.CANCELING;\n      case 'RunCanceledEvent':\n        return RunStatus.CANCELED;\n      case 'RunSuccessEvent':\n        return RunStatus.SUCCESS;\n      case 'RunFailureEvent':\n        return RunStatus.FAILURE;\n    }\n  }\n  return null;\n};\n\nconst BATCH_INTERVAL = 100;\nconst QUERY_LOG_LIMIT = 10000;\n\ntype State = {\n  nodes: LogNode[];\n  cursor: string | null;\n  counts: LogLevelCounts;\n  loading: boolean;\n};\n\ntype Action =\n  | {type: 'append'; queued: RunDagsterRunEventFragment[]; hasMore: boolean; cursor: string}\n  | {type: 'set-cursor'; cursor: string}\n  | {type: 'reset'};\n\nconst emptyCounts = {\n  DEBUG: 0,\n  INFO: 0,\n  WARNING: 0,\n  ERROR: 0,\n  CRITICAL: 0,\n  EVENT: 0,\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'append': {\n      const queuedNodes = action.queued.map((node, ii) => ({\n        ...node,\n        clientsideKey: `csk${node.timestamp}-${ii}`,\n      }));\n      const nodes = [...state.nodes, ...queuedNodes];\n      const counts = {...state.counts};\n      queuedNodes.forEach((node) => {\n        const level = logNodeLevel(node);\n        counts[level]++;\n      });\n      return {nodes, counts, loading: action.hasMore, cursor: action.cursor};\n    }\n    case 'set-cursor':\n      return {...state, cursor: action.cursor};\n    case 'reset':\n      return {nodes: [], counts: emptyCounts, cursor: null, loading: true};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  nodes: [],\n  counts: emptyCounts,\n  cursor: null,\n  loading: true,\n};\n\nconst useLogsProviderWithSubscription = (runId: string) => {\n  const client = useApolloClient();\n  const queue = React.useRef<\n    PipelineRunLogsSubscription_pipelineRunLogs_PipelineRunLogsSubscriptionSuccess[]\n  >([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const syncPipelineStatusToApolloCache = React.useCallback(\n    (status: RunStatus) => {\n      const local = client.readFragment<PipelineRunLogsSubscriptionStatusFragment>({\n        fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n        fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n        id: `Run:${runId}`,\n      });\n\n      if (local) {\n        const toWrite = {...local, status};\n        if (\n          status === RunStatus.FAILURE ||\n          status === RunStatus.SUCCESS ||\n          status === RunStatus.STARTING ||\n          status === RunStatus.CANCELING ||\n          status === RunStatus.CANCELED\n        ) {\n          toWrite.canTerminate = false;\n        }\n\n        client.writeFragment({\n          fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n          fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n          id: `Run:${runId}`,\n          data: toWrite,\n        });\n      }\n    },\n    [client, runId],\n  );\n\n  React.useEffect(() => {\n    queue.current = [];\n    dispatch({type: 'reset'});\n  }, [runId]);\n\n  // Batch the nodes together so they don't overwhelm the animation of the Gantt,\n  // which depends on a bit of a timing delay to maintain smoothness.\n  const throttledSetNodes = React.useMemo(() => {\n    return throttle(() => {\n      if (!queue.current.length) {\n        return;\n      }\n      const queuedLogs = [...queue.current];\n      queue.current = [];\n      const queuedMessages = queuedLogs.flatMap((log) => log.messages);\n      const lastLog = queuedLogs[queuedLogs.length - 1];\n      const hasMore = lastLog.hasMorePastEvents;\n      const cursor = lastLog.cursor;\n\n      dispatch({type: 'append', queued: queuedMessages, hasMore, cursor});\n      const nextPipelineStatus = pipelineStatusFromMessages(queuedMessages);\n\n      // If we're still loading past events, don't sync to the cache -- event chunks could\n      // give us `status` values that don't match the actual state of the run.\n      if (nextPipelineStatus && !hasMore) {\n        syncPipelineStatusToApolloCache(nextPipelineStatus);\n      }\n    }, BATCH_INTERVAL);\n  }, [syncPipelineStatusToApolloCache]);\n\n  const {nodes, counts, cursor, loading} = state;\n\n  useSubscription<PipelineRunLogsSubscription, PipelineRunLogsSubscriptionVariables>(\n    PIPELINE_RUN_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, cursor},\n      onSubscriptionData: ({subscriptionData}) => {\n        const logs = subscriptionData.data?.pipelineRunLogs;\n        if (!logs || logs.__typename === 'PipelineRunLogsSubscriptionFailure') {\n          return;\n        }\n        // Maintain a queue of messages as they arrive, and call the throttled setter.\n        queue.current = [...queue.current, logs];\n        // Wait until end of animation frame to call throttled set nodes\n        // otherwise we wont end up batching anything if rendering takes\n        // longer than the BATCH_INTERVAL\n        requestAnimationFrame(throttledSetNodes);\n      },\n    },\n  );\n\n  return React.useMemo(\n    () => (nodes !== null ? {allNodes: nodes, counts, loading} : {allNodes: [], counts, loading}),\n    [counts, loading, nodes],\n  );\n};\n\ninterface LogsProviderProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst LogsProviderWithSubscription: React.FC<LogsProviderProps> = (props) => {\n  const state = useLogsProviderWithSubscription(props.runId);\n  return <>{props.children(state)}</>;\n};\n\ninterface LogsProviderWithQueryProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst POLL_INTERVAL = 5000;\n\nconst LogsProviderWithQuery = (props: LogsProviderWithQueryProps) => {\n  const {children, runId} = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {counts, cursor, nodes} = state;\n\n  const {stopPolling, startPolling} = useQuery<RunLogsQuery, RunLogsQueryVariables>(\n    RUN_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {runId, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: RunLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n\n        if (\n          data?.pipelineRunOrError.__typename !== 'Run' ||\n          data?.logsForRun.__typename !== 'EventConnection'\n        ) {\n          return;\n        }\n\n        const run = data.pipelineRunOrError;\n        const queued = data.logsForRun.events;\n        const status = run.status;\n        const cursor = data.logsForRun.cursor;\n\n        const hasMore =\n          !!status &&\n          status !== RunStatus.FAILURE &&\n          status !== RunStatus.SUCCESS &&\n          status !== RunStatus.CANCELED;\n\n        dispatch({type: 'append', queued, hasMore, cursor});\n\n        if (hasMore) {\n          startPolling(POLL_INTERVAL);\n        }\n      },\n    },\n  );\n\n  return (\n    <>\n      {children(\n        nodes !== null && nodes.length > 0\n          ? {allNodes: nodes, counts, loading: false}\n          : {allNodes: [], counts, loading: true},\n      )}\n    </>\n  );\n};\n\nexport const LogsProvider: React.FC<LogsProviderProps> = (props) => {\n  const {children, runId} = props;\n  const {availability, disabled} = React.useContext(WebSocketContext);\n\n  // if disabled, drop to query variant immediately\n  if (availability === 'unavailable' || disabled) {\n    return <LogsProviderWithQuery runId={runId}>{children}</LogsProviderWithQuery>;\n  }\n\n  if (availability === 'attempting-to-connect') {\n    return <>{children({allNodes: [], counts: emptyCounts, loading: true})}</>;\n  }\n\n  return <LogsProviderWithSubscription runId={runId}>{children}</LogsProviderWithSubscription>;\n};\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION = gql`\n  subscription PipelineRunLogsSubscription($runId: ID!, $cursor: String) {\n    pipelineRunLogs(runId: $runId, cursor: $cursor) {\n      __typename\n      ... on PipelineRunLogsSubscriptionSuccess {\n        messages {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        hasMorePastEvents\n        cursor\n      }\n      ... on PipelineRunLogsSubscriptionFailure {\n        missingRunId\n        message\n      }\n    }\n  }\n\n  ${RunFragments.RunDagsterRunEventFragment}\n`;\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT = gql`\n  fragment PipelineRunLogsSubscriptionStatusFragment on Run {\n    id\n    runId\n    status\n    canTerminate\n  }\n`;\n\nconst RUN_LOGS_QUERY = gql`\n  query RunLogsQuery($runId: ID!, $cursor: String, $limit: Int) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        runId\n        status\n        canTerminate\n      }\n    }\n    logsForRun(runId: $runId, afterCursor: $cursor, limit: $limit) {\n      ... on EventConnection {\n        events {\n          __typename\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        cursor\n      }\n      ... on PythonError {\n        message\n        stack\n      }\n    }\n  }\n  ${RunFragments.RunDagsterRunEventFragment}\n`;\n","import memoize from 'lodash/memoize';\n\nconst compactFormatter = memoize(\n  () =>\n    new Intl.NumberFormat(navigator.language, {\n      compactDisplay: 'short',\n      notation: 'compact',\n    }),\n);\n\nexport const compactNumber = (num: number | bigint): string => compactFormatter().format(num);\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nimport {IStepState} from './RunMetadataProvider';\n\nexport const ExecutionStateDot = styled.div<{state: IStepState}>`\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  border-radius: 5.5px;\n  transition: background 200ms linear;\n  background: ${({state}) =>\n    ({\n      [IStepState.RUNNING]: Colors.Gray400,\n      [IStepState.SUCCEEDED]: Colors.Green700,\n      [IStepState.SKIPPED]: Colors.Yellow500,\n      [IStepState.FAILED]: Colors.Red500,\n      [IStepState.PREPARING]: Colors.Red500,\n      [IStepState.RETRY_REQUESTED]: Colors.Red500,\n      [IStepState.UNKNOWN]: Colors.Red500,\n    }[state])};\n  &:hover {\n    background: ${({state}) =>\n      ({\n        [IStepState.RUNNING]: Colors.Gray400,\n        [IStepState.SUCCEEDED]: Colors.Green700,\n        [IStepState.SKIPPED]: Colors.Yellow500,\n        [IStepState.FAILED]: Colors.Red200,\n        [IStepState.PREPARING]: Colors.Red500,\n        [IStepState.RETRY_REQUESTED]: Colors.Red500,\n        [IStepState.UNKNOWN]: Colors.Red500,\n      }[state])};\n  }\n`;\n","import {\n  Colors,\n  Popover,\n  TextInput,\n  SuggestionProvider,\n  useSuggestionsForString,\n  Icon,\n} from '@dagster-io/ui';\nimport Fuse from 'fuse.js';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ClearButton} from '../ui/ClearButton';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n  suggestionProviders: SuggestionProvider[];\n}\n\ntype Action =\n  | {type: 'show-popover'}\n  | {type: 'hide-popover'}\n  | {type: 'highlight'; highlight: number}\n  | {type: 'change-query'}\n  | {type: 'select-suggestion'};\n\ntype State = {\n  shown: boolean;\n  highlight: number;\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'show-popover':\n      return {...state, shown: true};\n    case 'hide-popover':\n      return {...state, shown: false};\n    case 'highlight':\n      return {...state, highlight: action.highlight};\n    case 'change-query':\n      return {...state, shown: true, highlight: 0};\n    case 'select-suggestion':\n      return {...state, highlight: 0};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  shown: false,\n  highlight: 0,\n};\n\nconst fuseOptions = {\n  threshold: 0.3,\n};\n\nexport const LogsFilterInput: React.FC<Props> = (props) => {\n  const {value, onChange, suggestionProviders} = props;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {shown, highlight} = state;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return provider.token\n        ? {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}}\n        : accum;\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders\n      .map((provider) => provider.token)\n      .filter((token) => token) as string[];\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token in perProvider) {\n        const {fuse, all} = perProvider[token];\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, value);\n\n  const numResults = suggestions.length;\n  const highlightedResult = suggestions[highlight] || null;\n\n  const onInputChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({type: 'change-query'});\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      dispatch({type: 'select-suggestion'});\n      onChange(onSelectSuggestion(suggestion));\n    },\n    [onChange, onSelectSuggestion],\n  );\n\n  const onClear = React.useCallback(() => {\n    dispatch({type: 'change-query'});\n    onChange('');\n    inputRef.current?.focus();\n  }, [onChange]);\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const {key} = e;\n    if (key === 'Escape') {\n      dispatch({type: 'hide-popover'});\n      return;\n    }\n\n    if (!numResults) {\n      return;\n    }\n\n    const lastResult = numResults - 1;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === 0 ? lastResult : highlight - 1});\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === lastResult ? 0 : highlight + 1});\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedResult) {\n          onSelect(highlightedResult);\n        }\n    }\n  };\n  return (\n    <Popover\n      isOpen={shown && suggestions.length > 0}\n      position=\"bottom-left\"\n      content={\n        <Results>\n          {suggestions.map((suggestion, ii) => (\n            <ResultItem\n              key={suggestion}\n              suggestion={suggestion}\n              isHighlight={highlight === ii}\n              onSelect={onSelect}\n            />\n          ))}\n        </Results>\n      }\n    >\n      <FilterInput\n        placeholder=\"Filter…\"\n        spellCheck={false}\n        autoCorrect=\"off\"\n        value={value}\n        ref={inputRef}\n        onChange={onInputChange}\n        onFocus={() => dispatch({type: 'show-popover'})}\n        onBlur={() => dispatch({type: 'hide-popover'})}\n        onKeyDown={onKeyDown}\n        rightElement={\n          <ClearButton onClick={onClear}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst ResultItem: React.FC<{\n  suggestion: string;\n  isHighlight: boolean;\n  onSelect: (suggestion: string) => void;\n}> = (props) => {\n  const {suggestion, isHighlight, onSelect} = props;\n  const element = React.useRef<HTMLLIElement>(null);\n\n  React.useEffect(() => {\n    if (element.current && isHighlight) {\n      element.current.scrollIntoView({block: 'nearest'});\n    }\n  }, [isHighlight]);\n\n  return (\n    <Item\n      ref={element}\n      isHighlight={isHighlight}\n      onMouseDown={(e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        onSelect(suggestion);\n      }}\n    >\n      {suggestion}\n    </Item>\n  );\n};\n\nconst FilterInput = styled(TextInput)`\n  width: 300px;\n`;\n\nconst Results = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 300px;\n  overflow-y: auto;\n  padding: 4px 0;\n`;\n\ninterface HighlightableTextProps {\n  readonly isHighlight: boolean;\n}\n\nconst Item = styled.li<HighlightableTextProps>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.White)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.White : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.Gray100)};\n  }\n`;\n","import * as React from 'react';\n\nexport const useSuggestionsForString = (\n  buildSuggestions: (value: string) => string[],\n  value: string,\n) => {\n  const tokens = value.toLocaleLowerCase().trim().split(/\\s+/);\n  const queryString = tokens[tokens.length - 1] || '';\n\n  const suggestions = React.useMemo(() => buildSuggestions(queryString), [\n    buildSuggestions,\n    queryString,\n  ]);\n\n  const onSelectSuggestion = React.useCallback(\n    (suggestion: string) => {\n      const lastIndex = value.toLocaleLowerCase().lastIndexOf(queryString);\n      if (lastIndex !== -1) {\n        const keep = value.slice(0, lastIndex);\n        return `${keep}${suggestion}`;\n      }\n\n      // Shouldn't really ever fall through to this, since `queryString` should definitely\n      // be the last token in `value`. No-op just in case.\n      return value;\n    },\n    [queryString, value],\n  );\n\n  return React.useMemo(\n    () => ({\n      suggestions,\n      onSelectSuggestion,\n    }),\n    [onSelectSuggestion, suggestions],\n  );\n};\n","import {useMutation} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\n\nimport {showLaunchError} from '../launchpad/showLaunchError';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {\n  getReexecutionVariables,\n  handleLaunchResult,\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  ReExecutionStyle,\n} from './RunUtils';\nimport {\n  LaunchPipelineReexecution,\n  LaunchPipelineReexecutionVariables,\n} from './types/LaunchPipelineReexecution';\nimport {RunFragment} from './types/RunFragment';\n\nexport const useJobReExecution = (run: RunFragment | undefined | null) => {\n  const history = useHistory();\n  const [launchPipelineReexecution] = useMutation<\n    LaunchPipelineReexecution,\n    LaunchPipelineReexecutionVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n  const repoMatch = useRepositoryForRun(run);\n\n  return React.useCallback(\n    async (style: ReExecutionStyle) => {\n      if (!run || !run.pipelineSnapshotId || !repoMatch) {\n        return;\n      }\n\n      const variables = getReexecutionVariables({\n        run,\n        style,\n        repositoryLocationName: repoMatch.match.repositoryLocation.name,\n        repositoryName: repoMatch.match.repository.name,\n      });\n\n      try {\n        const result = await launchPipelineReexecution({variables});\n        handleLaunchResult(run.pipelineName, result, history, {\n          preserveQuerystring: true,\n          behavior: 'open',\n        });\n      } catch (error) {\n        showLaunchError(error as Error);\n      }\n    },\n    [history, launchPipelineReexecution, repoMatch, run],\n  );\n};\n","import {tokenizedValueFromString} from '@dagster-io/ui';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\nimport {DefaultLogLevels, LogLevel} from './LogLevel';\nimport {LogFilter} from './LogsProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nconst DELIMITER = '|';\n\nfunction levelsToQuery(levels: string[]): string {\n  return levels\n    .sort()\n    .map((key) => key.toLowerCase())\n    .join(DELIMITER);\n}\n\nexport const DefaultQuerystring: {[key: string]: string} = {\n  steps: '*',\n  logs: '',\n  levels: levelsToQuery(DefaultLogLevels),\n  hideNonMatches: 'true',\n  focusedTime: '',\n};\n\n/**\n * Query parameter structure, all optional:\n *\n * `steps`\n *   - string (selection syntax)\n *   - Initializes step selection in Gantt chart\n * `logs`\n *   - string (comma-separated foo:bar tokens or free text)\n *   - Initializes log filter input\n * `levels`\n *   - string (comma-separated values)\n *   - Initializes levels in log filter\n * `focusedTime`\n *   - string (unix timestamp with msec)\n *   - Scrolls directly to log with specified time, if no `logs` filter\n */\nexport const decodeRunPageFilters = (qs: {[key: string]: string}) => {\n  const logValues = qs['logs'].split(DELIMITER);\n  const focusedTime = qs['focusedTime'] && !qs['logs'] ? Number(qs['focusedTime']) : null;\n  const hideNonMatches = qs['hideNonMatches'] === 'true' ? true : false;\n\n  const providers = getRunFilterProviders();\n  const logQuery = logValues.map((token) => tokenizedValueFromString(token, providers));\n\n  const levelsValues = qs['levels'].split(DELIMITER);\n\n  return {\n    sinceTime: 0,\n    focusedTime,\n    hideNonMatches,\n    logQuery,\n    levels: levelsValues\n      .map((level) => level.toUpperCase())\n      .filter((level) => LogLevel.hasOwnProperty(level))\n      .reduce((accum, level) => ({...accum, [level]: true}), {}),\n  } as LogFilter;\n};\n\nexport function encodeRunPageFilters(filter: LogFilter) {\n  const logQueryTokenStrings = filter.logQuery.map((v) =>\n    v.token ? `${v.token}:${v.value}` : v.value,\n  );\n\n  return {\n    hideNonMatches: filter.hideNonMatches ? 'true' : 'false',\n    focusedTime: filter.focusedTime || '',\n    logs: logQueryTokenStrings.join(DELIMITER),\n    levels: levelsToQuery(Object.keys(filter.levels).filter((key) => !!filter.levels[key])),\n  };\n}\n\nexport function useQueryPersistedLogFilter() {\n  return useQueryPersistedState<LogFilter>({\n    encode: encodeRunPageFilters,\n    decode: decodeRunPageFilters,\n    defaults: DefaultQuerystring,\n  });\n}\n","import {Box, NonIdealState, FirstOrSecondPanelToggle, SplitPanelContainer} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {GanttChart, GanttChartLoadingState, GanttChartMode, QueuedState} from '../gantt/GanttChart';\nimport {toGraphQueryItems} from '../gantt/toGraphQueryItems';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useFavicon} from '../hooks/useFavicon';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {ComputeLogPanel} from './ComputeLogPanel';\nimport {LogFilter, LogsProvider, LogsProviderLogs} from './LogsProvider';\nimport {LogsScrollingTable} from './LogsScrollingTable';\nimport {LogsToolbar, LogType} from './LogsToolbar';\nimport {RunActionButtons} from './RunActionButtons';\nimport {RunContext} from './RunContext';\nimport {IRunMetadataDict, RunMetadataProvider} from './RunMetadataProvider';\nimport {\n  RunDagsterRunEventFragment,\n  RunDagsterRunEventFragment_ExecutionStepFailureEvent,\n} from './types/RunDagsterRunEventFragment';\nimport {RunFragment} from './types/RunFragment';\nimport {useJobReExecution} from './useJobReExecution';\nimport {useQueryPersistedLogFilter} from './useQueryPersistedLogFilter';\n\ninterface RunProps {\n  runId: string;\n  run?: RunFragment;\n}\n\nconst runStatusFavicon = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return '/favicon-run-failed.svg';\n    case RunStatus.SUCCESS:\n      return '/favicon-run-success.svg';\n    default:\n      return '/favicon-run-pending.svg';\n  }\n};\n\nexport const Run: React.FC<RunProps> = (props) => {\n  const {run, runId} = props;\n  const [logsFilter, setLogsFilter] = useQueryPersistedLogFilter();\n  const [selectionQuery, setSelectionQuery] = useQueryPersistedState<string>({\n    queryKey: 'selection',\n    defaults: {selection: ''},\n  });\n\n  useFavicon(run ? runStatusFavicon(run.status) : '/favicon.svg');\n  useDocumentTitle(\n    run\n      ? `${!isHiddenAssetGroupJob(run.pipelineName) ? run.pipelineName : ''} ${runId.slice(\n          0,\n          8,\n        )} [${run.status}]`\n      : `Run: ${runId}`,\n  );\n\n  const onShowStateDetails = (stepKey: string, logs: RunDagsterRunEventFragment[]) => {\n    const errorNode = logs.find(\n      (node) => node.__typename === 'ExecutionStepFailureEvent' && node.stepKey === stepKey,\n    ) as RunDagsterRunEventFragment_ExecutionStepFailureEvent;\n\n    if (errorNode) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={errorNode} />,\n      });\n    }\n  };\n\n  const onSetSelectionQuery = (query: string) => {\n    setSelectionQuery(query);\n    setLogsFilter({\n      ...logsFilter,\n      logQuery: query !== '*' ? [{token: 'query', value: query}] : [],\n    });\n  };\n\n  return (\n    <RunContext.Provider value={run}>\n      <LogsProvider key={runId} runId={runId}>\n        {(logs) => (\n          <RunMetadataProvider logs={logs}>\n            {(metadata) => (\n              <RunWithData\n                run={run}\n                runId={runId}\n                logs={logs}\n                logsFilter={logsFilter}\n                metadata={metadata}\n                selectionQuery={selectionQuery}\n                onSetLogsFilter={setLogsFilter}\n                onSetSelectionQuery={onSetSelectionQuery}\n                onShowStateDetails={onShowStateDetails}\n              />\n            )}\n          </RunMetadataProvider>\n        )}\n      </LogsProvider>\n    </RunContext.Provider>\n  );\n};\n\ninterface RunWithDataProps {\n  run?: RunFragment;\n  runId: string;\n  selectionQuery: string;\n  logs: LogsProviderLogs;\n  logsFilter: LogFilter;\n  metadata: IRunMetadataDict;\n  onSetLogsFilter: (v: LogFilter) => void;\n  onSetSelectionQuery: (query: string) => void;\n  onShowStateDetails: (stepKey: string, logs: RunDagsterRunEventFragment[]) => void;\n}\n\nconst logTypeFromQuery = (queryLogType: string) => {\n  switch (queryLogType) {\n    case 'stdout':\n      return LogType.stdout;\n    case 'stderr':\n      return LogType.stderr;\n    default:\n      return LogType.structured;\n  }\n};\n\n/**\n * Note: There are two places we keep a \"step query string\" in the Run view:\n * selectionQuery and logsFilter.logsQuery.\n *\n * - selectionQuery is set when you click around in the Gannt view and is the\n *   selection used for re-execution, etc. When set, we autofill logsFilter.logsQuery.\n *\n * - logsFilter.logsQuery is used for filtering the logs. It can be cleared separately\n *   from the selectionQuery, so you can select a step but navigate elsewhere in the logs.\n *\n * We could revisit this in the future but I believe we iterated quite a bit to get to this\n * solution and we should avoid locking the two filter inputs together completely.\n */\nconst RunWithData: React.FC<RunWithDataProps> = ({\n  run,\n  runId,\n  logs,\n  logsFilter,\n  metadata,\n  selectionQuery,\n  onSetLogsFilter,\n  onSetSelectionQuery,\n}) => {\n  const onLaunch = useJobReExecution(run);\n  const splitPanelContainer = React.createRef<SplitPanelContainer>();\n\n  const [queryLogType, setQueryLogType] = useQueryPersistedState<string>({\n    queryKey: 'logType',\n    defaults: {logType: 'structured'},\n  });\n\n  const [computeLogKey, setComputeLogKey] = useQueryPersistedState<string>({\n    queryKey: 'logKey',\n  });\n\n  const logType = logTypeFromQuery(queryLogType);\n  const setLogType = (lt: LogType) => setQueryLogType(LogType[lt]);\n  const [computeLogUrl, setComputeLogUrl] = React.useState<string | null>(null);\n\n  const stepKeysJSON = JSON.stringify(Object.keys(metadata.steps).sort());\n  const stepKeys = React.useMemo(() => JSON.parse(stepKeysJSON), [stepKeysJSON]);\n\n  const runtimeGraph = run?.executionPlan && toGraphQueryItems(run?.executionPlan, metadata.steps);\n\n  const selectionStepKeys = React.useMemo(() => {\n    return runtimeGraph && selectionQuery && selectionQuery !== '*'\n      ? filterByQuery(runtimeGraph, selectionQuery).all.map((n) => n.name)\n      : [];\n  }, [runtimeGraph, selectionQuery]);\n\n  React.useEffect(() => {\n    if (!stepKeys?.length || computeLogKey) {\n      return;\n    }\n\n    if (metadata.logCaptureSteps) {\n      const logKeys = Object.keys(metadata.logCaptureSteps);\n      const selectedLogKey = logKeys.find((logKey) => {\n        return selectionStepKeys.every(\n          (stepKey) =>\n            metadata.logCaptureSteps && metadata.logCaptureSteps[logKey].stepKeys.includes(stepKey),\n        );\n      });\n      setComputeLogKey(selectedLogKey || logKeys[0]);\n    } else if (!stepKeys.includes(computeLogKey)) {\n      setComputeLogKey(selectionStepKeys.length === 1 ? selectionStepKeys[0] : stepKeys[0]);\n    } else if (selectionStepKeys.length === 1 && computeLogKey !== selectionStepKeys[0]) {\n      setComputeLogKey(selectionStepKeys[0]);\n    }\n  }, [stepKeys, computeLogKey, selectionStepKeys, metadata.logCaptureSteps, setComputeLogKey]);\n\n  const onSetComputeLogKey = (logKey: string) => {\n    setComputeLogKey(logKey);\n  };\n\n  const logsFilterStepKeys = runtimeGraph\n    ? logsFilter.logQuery\n        .filter((v) => v.token && v.token === 'query')\n        .reduce((accum, v) => {\n          return [...accum, ...filterByQuery(runtimeGraph, v.value).all.map((n) => n.name)];\n        }, [] as string[])\n    : [];\n\n  const onClickStep = (stepKey: string, evt: React.MouseEvent<any>) => {\n    const index = selectionStepKeys.indexOf(stepKey);\n    let newSelected: string[];\n    const filterForExactStep = `\"${stepKey}\"`;\n    if (evt.shiftKey) {\n      // shift-click to multi select steps, preserving quotations if present\n      newSelected = [\n        ...selectionStepKeys.map((k) => (selectionQuery.includes(`\"${k}\"`) ? `\"${k}\"` : k)),\n      ];\n\n      if (index !== -1) {\n        // deselect the step if already selected\n        newSelected.splice(index, 1);\n      } else {\n        // select the step otherwise\n        newSelected.push(filterForExactStep);\n      }\n    } else {\n      if (selectionStepKeys.length === 1 && index !== -1) {\n        // deselect the step if already selected\n        newSelected = [];\n      } else {\n        // select the step otherwise\n        newSelected = [filterForExactStep];\n\n        // When only one step is selected, set the compute log key as well.\n        setComputeLogKey(stepKey);\n      }\n    }\n\n    onSetSelectionQuery(newSelected.join(', ') || '*');\n  };\n\n  const gantt = (metadata: IRunMetadataDict) => {\n    if (!run) {\n      return <GanttChartLoadingState runId={runId} />;\n    }\n\n    if (run.status === 'QUEUED') {\n      return <QueuedState run={run} />;\n    }\n\n    if (run.executionPlan && runtimeGraph) {\n      return (\n        <GanttChart\n          options={{\n            mode: GanttChartMode.WATERFALL_TIMED,\n          }}\n          toolbarActions={\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n              <FirstOrSecondPanelToggle axis=\"vertical\" container={splitPanelContainer} />\n              <RunActionButtons\n                run={run}\n                onLaunch={onLaunch}\n                graph={runtimeGraph}\n                metadata={metadata}\n                selection={{query: selectionQuery, keys: selectionStepKeys}}\n              />\n            </Box>\n          }\n          runId={runId}\n          graph={runtimeGraph}\n          metadata={metadata}\n          selection={{query: selectionQuery, keys: selectionStepKeys}}\n          onClickStep={onClickStep}\n          onSetSelection={onSetSelectionQuery}\n          focusedTime={logsFilter.focusedTime}\n        />\n      );\n    }\n\n    return <NonIdealState icon=\"error\" title=\"Unable to build execution plan\" />;\n  };\n\n  return (\n    <>\n      <SplitPanelContainer\n        ref={splitPanelContainer}\n        axis=\"vertical\"\n        identifier=\"run-gantt\"\n        firstInitialPercent={35}\n        firstMinSize={56}\n        first={gantt(metadata)}\n        second={\n          <LogsContainer>\n            <LogsToolbar\n              logType={logType}\n              onSetLogType={setLogType}\n              filter={logsFilter}\n              onSetFilter={onSetLogsFilter}\n              steps={stepKeys}\n              metadata={metadata}\n              computeLogKey={computeLogKey}\n              onSetComputeLogKey={onSetComputeLogKey}\n              computeLogUrl={computeLogUrl}\n              counts={logs.counts}\n            />\n            {logType !== LogType.structured ? (\n              <ComputeLogPanel\n                runId={runId}\n                stepKeys={stepKeys}\n                computeLogKey={computeLogKey}\n                ioType={LogType[logType]}\n                setComputeLogUrl={setComputeLogUrl}\n              />\n            ) : (\n              <LogsScrollingTable\n                logs={logs}\n                filter={logsFilter}\n                filterStepKeys={logsFilterStepKeys}\n                filterKey={`${JSON.stringify(logsFilter)}`}\n                metadata={metadata}\n              />\n            )}\n          </LogsContainer>\n        }\n      />\n    </>\n  );\n};\n\nconst LogsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n","import * as React from 'react';\n\nexport const useFavicon = (href: string) => {\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"][type=\"image/svg+xml\"]');\n    if (!el) {\n      return;\n    }\n    const previousHref = el.getAttribute('href');\n    el.setAttribute('href', href);\n    return () => {\n      if (previousHref) {\n        el.setAttribute('href', previousHref);\n      }\n    };\n  }, [href]);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, NonIdealState, PageHeader, Popover, Tag, Heading, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {Run} from './Run';\nimport {RunAssetKeyTags} from './RunAssetKeyTags';\nimport {RunConfigDialog, RunDetails} from './RunDetails';\nimport {RunFragments} from './RunFragments';\nimport {RunStatusTag} from './RunStatusTag';\nimport {assetKeysForRun} from './RunUtils';\nimport {RunRootQuery, RunRootQueryVariables} from './types/RunRootQuery';\n\nexport const RunRoot = () => {\n  useTrackPageView();\n\n  const {runId} = useParams<{runId: string}>();\n\n  const {data, loading} = useQuery<RunRootQuery, RunRootQueryVariables>(RUN_ROOT_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    variables: {runId},\n  });\n\n  const run = data?.pipelineRunOrError.__typename === 'Run' ? data.pipelineRunOrError : null;\n  const snapshotID = run?.pipelineSnapshotId;\n\n  const repoMatch = useRepositoryForRun(run);\n  const repoAddress = repoMatch?.match\n    ? buildRepoAddress(repoMatch.match.repository.name, repoMatch.match.repositoryLocation.name)\n    : null;\n\n  const isJob = React.useMemo(\n    () => !!(run && repoMatch && isThisThingAJob(repoMatch.match, run.pipelineName)),\n    [run, repoMatch],\n  );\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        flex={{direction: 'row', alignItems: 'flex-start'}}\n        style={{\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <PageHeader\n          title={\n            <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n              {runId.slice(0, 8)}\n            </Heading>\n          }\n          tags={\n            run ? (\n              <>\n                <RunStatusTag status={run.status} />\n                {isHiddenAssetGroupJob(run.pipelineName) ? (\n                  <RunAssetKeyTags assetKeys={assetKeysForRun(run)} clickableTags />\n                ) : (\n                  <>\n                    <Tag icon=\"run\">\n                      Run of{' '}\n                      <PipelineReference\n                        pipelineName={run?.pipelineName}\n                        pipelineHrefContext={repoAddress || 'repo-unknown'}\n                        snapshotId={snapshotID}\n                        size=\"small\"\n                        isJob={isJob}\n                      />\n                    </Tag>\n                    <RunAssetKeyTags assetKeys={run.assets.map((a) => a.key)} clickableTags />\n                  </>\n                )}\n                <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n                  {run?.startTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"schedule\">\n                        <TimestampDisplay\n                          timestamp={run.startTime}\n                          timeFormat={{showSeconds: true, showTimezone: false}}\n                        />\n                      </Tag>\n                    </Popover>\n                  ) : run.updateTime ? (\n                    <Tag icon=\"schedule\">\n                      <TimestampDisplay\n                        timestamp={run.updateTime}\n                        timeFormat={{showSeconds: true, showTimezone: false}}\n                      />\n                    </Tag>\n                  ) : undefined}\n                  {run?.startTime && run?.endTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"timer\">\n                        <span style={{fontVariantNumeric: 'tabular-nums'}}>\n                          {run?.startTime\n                            ? formatElapsedTime(\n                                (run?.endTime * 1000 || Date.now()) - run?.startTime * 1000,\n                              )\n                            : '–'}\n                        </span>\n                      </Tag>\n                    </Popover>\n                  ) : null}\n                </Box>\n              </>\n            ) : null\n          }\n          right={run ? <RunConfigDialog run={run} isJob={isJob} /> : null}\n        />\n      </Box>\n      <RunById data={data} runId={runId} />\n    </div>\n  );\n};\n\nconst RunById: React.FC<{data: RunRootQuery | undefined; runId: string}> = (props) => {\n  const {data, runId} = props;\n\n  if (!data || !data.pipelineRunOrError) {\n    return <Run run={undefined} runId={runId} />;\n  }\n\n  if (data.pipelineRunOrError.__typename !== 'Run') {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No run found\"\n          description=\"The run with this ID does not exist or has been cleaned up.\"\n        />\n      </Box>\n    );\n  }\n\n  return <Run run={data.pipelineRunOrError} runId={runId} />;\n};\n\nconst RUN_ROOT_QUERY = gql`\n  query RunRootQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on Run {\n        id\n        ...RunFragment\n      }\n    }\n  }\n\n  ${RunFragments.RunFragment}\n`;\n","import {gql, useQuery} from '@apollo/client';\n\nimport {InstanceConfigHasInfo} from './types/InstanceConfigHasInfo';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfo>(INSTANCE_CONFIG_HAS_INFO);\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      hasInfo\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Alert, Box, ButtonLink, Colors, Group} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {REPOSITORY_SCHEDULES_FRAGMENT} from '../schedules/ScheduleUtils';\nimport {SchedulerInfo} from '../schedules/SchedulerInfo';\nimport {SchedulesNextTicks} from '../schedules/SchedulesNextTicks';\nimport {Loading} from '../ui/Loading';\n\nimport {SchedulerInfoQuery} from './types/SchedulerInfoQuery';\n\nexport const AllScheduledTicks = () => {\n  const queryResult = useQuery<SchedulerInfoQuery>(SCHEDULER_INFO_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  return (\n    <Loading queryResult={queryResult}>\n      {(result) => {\n        const {repositoriesOrError, instance} = result;\n        if (repositoriesOrError.__typename === 'PythonError') {\n          const message = repositoriesOrError.message;\n          return (\n            <Alert\n              intent=\"warning\"\n              title={\n                <Group direction=\"row\" spacing={4}>\n                  <div>Could not load scheduled ticks.</div>\n                  <ButtonLink\n                    color={Colors.Link}\n                    underline=\"always\"\n                    onClick={() => {\n                      showCustomAlert({\n                        title: 'Python error',\n                        body: message,\n                      });\n                    }}\n                  >\n                    View error\n                  </ButtonLink>\n                </Group>\n              }\n            />\n          );\n        }\n        return (\n          <div>\n            <Box\n              padding={{horizontal: 24, vertical: 16}}\n              border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            >\n              <SchedulerInfo daemonHealth={instance.daemonHealth} />\n            </Box>\n            <SchedulesNextTicks repos={repositoriesOrError.nodes} />\n          </div>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst SCHEDULER_INFO_QUERY = gql`\n  query SchedulerInfoQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      ... on RepositoryConnection {\n        nodes {\n          __typename\n          id\n          ... on Repository {\n            ...RepositorySchedulesFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_SCHEDULES_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {ApolloError, gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  Colors,\n  CursorHistoryControls,\n  NonIdealState,\n  Page,\n  PageHeader,\n  Tab,\n  Tabs,\n  Tag,\n  Heading,\n  TokenizingFieldValue,\n  tokenToString,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useCanSeeConfig} from '../instance/useCanSeeConfig';\nimport {RunStatus} from '../types/globalTypes';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\n\nimport {AllScheduledTicks} from './AllScheduledTicks';\nimport {doneStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from './RunTable';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {\n  RunFilterTokenType,\n  RunsFilterInput,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  RunFilterToken,\n} from './RunsFilterInput';\nimport {QueueDaemonStatusQuery} from './types/QueueDaemonStatusQuery';\nimport {RunsRootQuery, RunsRootQueryVariables} from './types/RunsRootQuery';\nimport {useCursorPaginatedQuery} from './useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 25;\n\nconst selectedTabId = (filterTokens: TokenizingFieldValue[]) => {\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(doneStatuses, statusTokens)) {\n    return 'done';\n  }\n  return 'all';\n};\n\nexport const RunsRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Runs');\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n  const [showScheduled, setShowScheduled] = React.useState(false);\n  const canSeeConfig = useCanSeeConfig();\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    RunsRootQuery,\n    RunsRootQueryVariables\n  >({\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.runId;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n    variables: {\n      filter,\n      queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n      inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n    },\n    query: RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const selectedTab = showScheduled ? 'scheduled' : selectedTabId(filterTokens);\n  const staticStatusTags = selectedTab !== 'all';\n\n  const setStatusFilter = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    setFilterTokens([...statusTokens, ...tokensMinusStatus]);\n    setShowScheduled(false);\n  };\n\n  const setFilterTokensWithStatus = React.useCallback(\n    (tokens) => {\n      if (staticStatusTags) {\n        const statusTokens = filterTokens.filter((token) => token.token === 'status');\n        setFilterTokens([...statusTokens, ...tokens]);\n      } else {\n        setFilterTokens(tokens);\n      }\n    },\n    [filterTokens, setFilterTokens, staticStatusTags],\n  );\n\n  const onAddTag = React.useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!filterTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokensWithStatus([...filterTokens, token]);\n      }\n    },\n    [filterTokens, setFilterTokensWithStatus],\n  );\n\n  const enabledFilters = React.useMemo(() => {\n    const filters: RunFilterTokenType[] = ['tag', 'snapshotId', 'id', 'job', 'pipeline'];\n\n    if (!staticStatusTags) {\n      filters.push('status');\n    }\n\n    return filters;\n  }, [staticStatusTags]);\n\n  const mutableTokens = React.useMemo(() => {\n    if (staticStatusTags) {\n      return filterTokens.filter((token) => token.token !== 'status');\n    }\n    return filterTokens;\n  }, [filterTokens, staticStatusTags]);\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>Runs</Heading>}\n        tabs={\n          <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n            <Tabs selectedTabId={selectedTab} id=\"run-tabs\">\n              <Tab title=\"All runs\" onClick={() => setStatusFilter([])} id=\"all\" />\n              <Tab\n                title=\"Queued\"\n                count={\n                  queryResult.data?.queuedCount?.__typename === 'Runs'\n                    ? queryResult.data?.queuedCount.count\n                    : 'indeterminate'\n                }\n                onClick={() => setStatusFilter(Array.from(queuedStatuses))}\n                id=\"queued\"\n              />\n              <Tab\n                title=\"In progress\"\n                count={\n                  queryResult.data?.inProgressCount?.__typename === 'Runs'\n                    ? queryResult.data?.inProgressCount.count\n                    : 'indeterminate'\n                }\n                onClick={() => setStatusFilter(Array.from(inProgressStatuses))}\n                id=\"in-progress\"\n              />\n              <Tab\n                title=\"Done\"\n                onClick={() => setStatusFilter(Array.from(doneStatuses))}\n                id=\"done\"\n              />\n              <Tab title=\"Scheduled\" onClick={() => setShowScheduled(true)} id=\"scheduled\" />\n            </Tabs>\n            <Box padding={{bottom: 8}}>\n              <QueryRefreshCountdown refreshState={refreshState} />\n            </Box>\n          </Box>\n        }\n      />\n      {selectedTab === 'queued' && canSeeConfig ? (\n        <Box\n          flex={{direction: 'column', gap: 8}}\n          padding={{horizontal: 24, vertical: 16}}\n          border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n        >\n          <Alert\n            intent=\"info\"\n            title={<Link to=\"/instance/config#run_coordinator\">View queue configuration</Link>}\n          />\n          <QueueDaemonAlert />\n        </Box>\n      ) : null}\n      <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n        <Loading\n          queryResult={queryResult}\n          allowStaleData\n          renderError={(error: ApolloError) => {\n            // In this case, a 400 is most likely due to invalid run filters, which are a GraphQL\n            // validation error but surfaced as a 400.\n            const badRequest = !!(\n              error?.networkError &&\n              'statusCode' in error.networkError &&\n              error.networkError.statusCode === 400\n            );\n            return (\n              <Box\n                flex={{direction: 'column', gap: 32}}\n                padding={{vertical: 8, left: 24, right: 12}}\n              >\n                <RunsFilterInput\n                  tokens={mutableTokens}\n                  onChange={setFilterTokensWithStatus}\n                  loading={queryResult.loading}\n                  enabledFilters={enabledFilters}\n                />\n                <NonIdealState\n                  icon=\"warning\"\n                  title={badRequest ? 'Invalid run filters' : 'Unexpected error'}\n                  description={\n                    badRequest\n                      ? 'The specified run filters are not valid. Please check the filters and try again.'\n                      : 'An unexpected error occurred. Check the console for details.'\n                  }\n                />\n              </Box>\n            );\n          }}\n        >\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n\n            if (showScheduled) {\n              return <AllScheduledTicks />;\n            }\n\n            return (\n              <>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={pipelineRunsOrError.results.slice(0, PAGE_SIZE)}\n                    onAddTag={onAddTag}\n                    filter={filter}\n                    actionBarComponents={\n                      showScheduled ? null : (\n                        <Box flex={{direction: 'column', gap: 8}}>\n                          {selectedTab !== 'all' ? (\n                            <Box flex={{direction: 'row', gap: 8}}>\n                              {filterTokens\n                                .filter((token) => token.token === 'status')\n                                .map(({token, value}) => (\n                                  <Tag key={token}>{`${token}:${value}`}</Tag>\n                                ))}\n                            </Box>\n                          ) : null}\n                          <RunsFilterInput\n                            tokens={mutableTokens}\n                            onChange={setFilterTokensWithStatus}\n                            loading={queryResult.loading}\n                            enabledFilters={enabledFilters}\n                          />\n                        </Box>\n                      )\n                    }\n                  />\n                </StickyTableContainer>\n                {pipelineRunsOrError.results.length > 0 ? (\n                  <div style={{marginTop: '16px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </RunsQueryRefetchContext.Provider>\n    </Page>\n  );\n};\n\nconst COUNT_FRAGMENT = gql`\n  fragment CountFragment on Runs {\n    count\n  }\n`;\n\nconst RUNS_ROOT_QUERY = gql`\n  query RunsRootQuery(\n    $limit: Int\n    $cursor: String\n    $filter: RunsFilter!\n    $queuedFilter: RunsFilter!\n    $inProgressFilter: RunsFilter!\n  ) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ...CountFragment\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ...CountFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${COUNT_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst QueueDaemonAlert = () => {\n  const {data} = useQuery<QueueDaemonStatusQuery>(QUEUE_DAEMON_STATUS_QUERY);\n  const status = data?.instance.daemonHealth.daemonStatus;\n  if (status?.required && !status?.healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The queued run coordinator is not healthy.\"\n        description={\n          <div>\n            View <Link to=\"/instance/health\">Instance status</Link> for details.\n          </div>\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst QUEUE_DAEMON_STATUS_QUERY = gql`\n  query QueueDaemonStatusQuery {\n    instance {\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"QUEUED_RUN_COORDINATOR\") {\n          id\n          daemonType\n          healthy\n          required\n        }\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {PageHeader, Tabs, Tag, Heading, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {explorerPathToString, ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {useActivePipelineForName} from '../workspace/WorkspaceContext';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {SnapshotQuery, SnapshotQueryVariables} from './types/SnapshotQuery';\n\nconst SNAPSHOT_PARENT_QUERY = gql`\n  query SnapshotQuery($snapshotId: String!) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId) {\n      ... on PipelineSnapshot {\n        id\n        parentSnapshotId\n      }\n    }\n  }\n`;\n\ninterface SnapshotNavProps {\n  activeTab?: string;\n  explorerPath: ExplorerPath;\n}\n\nexport const SnapshotNav = (props: SnapshotNavProps) => {\n  const {activeTab = '', explorerPath} = props;\n  const {pipelineName, snapshotId = ''} = explorerPath;\n  const explorerPathString = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const currentPipelineState = useActivePipelineForName(pipelineName);\n  const isJob = !!currentPipelineState?.isJob;\n  const currentSnapshotID = currentPipelineState?.pipelineSnapshotId;\n\n  const {data, loading} = useQuery<SnapshotQuery, SnapshotQueryVariables>(SNAPSHOT_PARENT_QUERY, {\n    variables: {snapshotId},\n  });\n\n  const tag = () => {\n    if (loading) {\n      return (\n        <Tag intent=\"none\" minimal>\n          ...\n        </Tag>\n      );\n    }\n\n    if (\n      !currentSnapshotID ||\n      (currentSnapshotID !== snapshotId &&\n        data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n        data?.pipelineSnapshotOrError?.parentSnapshotId !== currentSnapshotID)\n    ) {\n      return (\n        <Tag intent=\"warning\" minimal>\n          Snapshot\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag intent=\"success\" minimal>\n        Current\n      </Tag>\n    );\n  };\n\n  const tabs = [\n    {\n      text: 'Definition',\n      pathComponent: '',\n      href: `/instance/snapshots/${explorerPathString}`,\n    },\n    {\n      text: 'Runs',\n      pathComponent: 'runs',\n      href: `/instance/snapshots/${explorerPathString}runs`,\n    },\n  ];\n\n  return (\n    <PageHeader\n      title={\n        <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n          {explorerPath.snapshotId?.slice(0, 8)}\n        </Heading>\n      }\n      tags={\n        <>\n          <Tag icon=\"schema\">\n            Snapshot of{' '}\n            <Link to={workspacePipelinePathGuessRepo(explorerPath.pipelineName, isJob)}>\n              {explorerPath.pipelineName}\n            </Link>\n          </Tag>\n          {tag()}\n        </>\n      }\n      tabs={\n        <Tabs selectedTabId={activeTab}>\n          {tabs.map((tab) => {\n            const {href, text, pathComponent} = tab;\n            return <TabLink key={text} id={pathComponent} title={text} to={href} />;\n          })}\n        </Tabs>\n      }\n    />\n  );\n};\n","import * as React from 'react';\nimport {Route, Switch, useParams} from 'react-router-dom';\n\nimport {PipelineExplorerSnapshotRoot} from '../pipelines/PipelineExplorerRoot';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {PipelineRunsRoot} from '../pipelines/PipelineRunsRoot';\n\nimport {SnapshotNav} from './SnapshotNav';\n\nexport const SnapshotRoot = () => {\n  const {pipelinePath, tab} = useParams<{\n    pipelinePath: string;\n    tab?: string;\n  }>();\n  const explorerPath = explorerPathFromString(pipelinePath);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <SnapshotNav activeTab={tab} explorerPath={explorerPath} />\n      <Switch>\n        <Route path=\"/instance/snapshots/:pipelinePath/runs\">\n          <PipelineRunsRoot />\n        </Route>\n        <Route path=\"/instance/snapshots/(/?.*)\">\n          <PipelineExplorerSnapshotRoot />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {TabLink} from '../ui/TabLink';\n\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabContext = React.createContext({healthTitle: 'Daemons'});\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {healthTitle} = React.useContext(InstanceTabContext);\n  const {refreshState, tab} = props;\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink id=\"overview\" title=\"Overview\" to=\"/instance/overview\" />\n        <TabLink id=\"health\" title={healthTitle} to=\"/instance/health\" />\n        <TabLink id=\"schedules\" title=\"Schedules\" to=\"/instance/schedules\" />\n        <TabLink id=\"sensors\" title=\"Sensors\" to=\"/instance/sensors\" />\n        <TabLink id=\"backfills\" title=\"Backfills\" to=\"/instance/backfills\" />\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/instance/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  CursorPaginationControls,\n  NonIdealState,\n  PageHeader,\n  Heading,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useCursorPaginatedQuery} from '../runs/useCursorPaginatedQuery';\nimport {Loading} from '../ui/Loading';\n\nimport {BACKFILL_TABLE_FRAGMENT, BackfillTable} from './BackfillTable';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {\n  InstanceBackfillsQuery,\n  InstanceBackfillsQueryVariables,\n} from './types/InstanceBackfillsQuery';\nimport {InstanceHealthForBackfillsQuery} from './types/InstanceHealthForBackfillsQuery';\n\nconst PAGE_SIZE = 25;\n\nexport const InstanceBackfills = () => {\n  useTrackPageView();\n\n  const queryData = useQuery<InstanceHealthForBackfillsQuery>(INSTANCE_HEALTH_FOR_BACKFILLS_QUERY);\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    InstanceBackfillsQuery,\n    InstanceBackfillsQueryVariables\n  >({\n    query: BACKFILLS_QUERY,\n    variables: {},\n    pageSize: PAGE_SIZE,\n    nextCursorForResult: (result) =>\n      result.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n        ? result.partitionBackfillsOrError.results[PAGE_SIZE - 1]?.backfillId\n        : undefined,\n    getResultArray: (result) =>\n      result?.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n        ? result.partitionBackfillsOrError.results\n        : [],\n  });\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  useDocumentTitle('Backfills');\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>Instance status</Heading>}\n        tabs={<InstanceTabs tab=\"backfills\" refreshState={refreshState} />}\n      />\n      <Loading queryResult={queryResult} allowStaleData={true}>\n        {({partitionBackfillsOrError}) => {\n          if (partitionBackfillsOrError.__typename === 'PythonError') {\n            return <PythonErrorInfo error={partitionBackfillsOrError} />;\n          }\n\n          if (!partitionBackfillsOrError.results.length) {\n            return (\n              <Box padding={{vertical: 64}}>\n                <NonIdealState\n                  icon=\"no-results\"\n                  title=\"No backfills found\"\n                  description={<p>This instance does not have any backfill jobs.</p>}\n                />\n              </Box>\n            );\n          }\n\n          const daemonHealths = queryData.data?.instance.daemonHealth.allDaemonStatuses || [];\n          const backfillHealths = daemonHealths\n            .filter((daemon) => daemon.daemonType === 'BACKFILL')\n            .map((daemon) => daemon.required && daemon.healthy);\n          const isBackfillHealthy = backfillHealths.length && backfillHealths.every((x) => x);\n\n          return (\n            <div>\n              {isBackfillHealthy ? null : (\n                <Box padding={{horizontal: 24, vertical: 16}}>\n                  <Alert\n                    intent=\"warning\"\n                    title=\"The backfill daemon is not running.\"\n                    description={\n                      <div>\n                        See the{' '}\n                        <a\n                          href=\"https://docs.dagster.io/deployment/dagster-daemon\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          dagster-daemon documentation\n                        </a>{' '}\n                        for more information on how to deploy the dagster-daemon process.\n                      </div>\n                    }\n                  />\n                </Box>\n              )}\n              <BackfillTable\n                backfills={partitionBackfillsOrError.results.slice(0, PAGE_SIZE)}\n                refetch={queryResult.refetch}\n              />\n              {partitionBackfillsOrError.results.length > 0 ? (\n                <div style={{marginTop: '16px'}}>\n                  <CursorPaginationControls {...paginationProps} />\n                </div>\n              ) : null}\n            </div>\n          );\n        }}\n      </Loading>\n    </>\n  );\n};\n\nconst INSTANCE_HEALTH_FOR_BACKFILLS_QUERY = gql`\n  query InstanceHealthForBackfillsQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n\nconst BACKFILLS_QUERY = gql`\n  query InstanceBackfillsQuery($cursor: String, $limit: Int) {\n    partitionBackfillsOrError(cursor: $cursor, limit: $limit) {\n      ... on PartitionBackfills {\n        results {\n          backfillId\n          status\n          backfillStatus\n          numRequested\n          partitionNames\n          numPartitions\n          partitionRunStats {\n            numQueued\n            numInProgress\n            numSucceeded\n            numFailed\n            numPartitionsWithRuns\n            numTotalRuns\n          }\n          unfinishedRuns {\n            id\n            canTerminate\n          }\n          timestamp\n          partitionSetName\n          partitionSet {\n            id\n            name\n            mode\n            pipelineName\n            repositoryOrigin {\n              id\n              repositoryName\n              repositoryLocationName\n            }\n          }\n          error {\n            ...PythonErrorFragment\n          }\n\n          ...BackfillTableFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${BACKFILL_TABLE_FRAGMENT}\n`;\n","import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Colors,\n  PageHeader,\n  Spinner,\n  Code,\n  Heading,\n  StyledReadOnlyCodeMirror,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as codemirror from 'codemirror';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components/macro';\n\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\n\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery} from './types/InstanceConfigQuery';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    box-shadow: 0 1px 0 ${Colors.KeylineGray};\n    height: 100%;\n  }\n\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    .config-highlight {\n      background-color: ${Colors.Yellow200};\n    }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  useTrackPageView();\n\n  const queryResult = useQuery<InstanceConfigQuery>(INSTANCE_CONFIG_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const onEditorDidMount = (editor: codemirror.Editor) => {\n    const documentHash = document.location.hash;\n    if (documentHash) {\n      const target = new RegExp(`^${documentHash.slice(1)}:`);\n      const cursor = editor.getSearchCursor(target);\n      const found = cursor.findNext();\n      if (found) {\n        editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n        editor.scrollIntoView(cursor.from());\n      }\n    }\n  };\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <PageHeader\n        title={<Heading>Instance status</Heading>}\n        tabs={<InstanceTabs tab=\"config\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n      </Box>\n      <StyledReadOnlyCodeMirror\n        editorDidMount={onEditorDidMount}\n        value={config || ''}\n        options={{lineNumbers: true, mode: 'yaml'}}\n        theme={['instance-config']}\n      />\n    </>\n  );\n});\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      info\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery} from './types/InstanceHealthQuery';\n\nexport const InstanceHealthPage = () => {\n  useTrackPageView();\n\n  const queryData = useQuery<InstanceHealthQuery>(INSTANCE_HEALTH_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.Gray400}}>\n          Loading…\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>Instance status</Heading>}\n        tabs={<InstanceTabs tab=\"health\" refreshState={refreshState} />}\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Subheading>Daemon statuses</Subheading>\n      </Box>\n      {daemonContent()}\n    </>\n  );\n};\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Box, Colors, FontFamily, Mono, Popover} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {SectionHeader} from '../pipelines/SidebarComponents';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {RunStatusIndicator} from './RunStatusDots';\nimport {RunStateSummary, RunTime, titleForRun} from './RunUtils';\nimport {RunTimeFragment} from './types/RunTimeFragment';\n\nconst RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue500,\n  NOT_STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  MANAGED: Colors.Blue500,\n  STARTED: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n};\n\nconst MIN_OPACITY = 0.2;\nconst MAX_OPACITY = 1.0;\nconst MIN_OPACITY_STEPS = 3;\n\ninterface Props {\n  opacity?: number;\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusPez = (props: Props) => {\n  const {status, opacity = MAX_OPACITY} = props;\n  const color = RUN_STATUS_COLORS[status];\n\n  return <Pez $color={color} $opacity={opacity} />;\n};\n\ninterface ListProps {\n  fade: boolean;\n  repoAddress: string;\n  runs: RunTimeFragment[];\n}\n\nexport const RunStatusPezList = (props: ListProps) => {\n  const {fade, runs} = props;\n  const count = runs.length;\n  const countForStep = Math.max(MIN_OPACITY_STEPS, count);\n  const step = (MAX_OPACITY - MIN_OPACITY) / countForStep;\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 2}}>\n      {runs.map((run, ii) => (\n        <Popover\n          key={run.runId}\n          position=\"bottom\"\n          interactionKind=\"hover\"\n          content={\n            <div>\n              <RunStatusOverlay run={run} repoAddr={props.repoAddress} />\n            </div>\n          }\n          hoverOpenDelay={100}\n        >\n          <RunStatusPez\n            key={run.runId}\n            runId={run.runId}\n            status={run.status}\n            opacity={fade ? MAX_OPACITY - (count - ii - 1) * step : 1.0}\n          />\n        </Popover>\n      ))}\n    </Box>\n  );\n};\n\ninterface OverlayProps {\n  run: RunTimeFragment;\n  repoAddr: string;\n}\n\nconst RunStatusOverlay = (props: OverlayProps) => {\n  return (\n    <OverlayContainer>\n      <OverlayTitle>{props.repoAddr}</OverlayTitle>\n      <RunRow>\n        <RunStatusIndicator status={props.run.status} />\n        <Link to={`/instance/runs/${props.run.runId}`}>\n          <Mono>{titleForRun(props.run)}</Mono>\n        </Link>\n        <HorizontalSpace />\n        <Box flex={{direction: 'column'}}>\n          <RunTime run={props.run} />\n          <RunStateSummary run={props.run} />\n        </Box>\n      </RunRow>\n    </OverlayContainer>\n  );\n};\n\nconst OverlayContainer = styled.div`\n  padding: 4px;\n  font-size: 12px;\n  width: 280px;\n`;\n\nconst HorizontalSpace = styled.div`\n  flex: 1;\n`;\n\nconst OverlayTitle = styled(SectionHeader)`\n  padding: 8px;\n  box-shadow: inset 0 -1px ${Colors.KeylineGray};\n  max-width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  min-width: 0px;\n`;\n\nconst RunRow = styled.div`\n  align-items: baseline;\n  padding: 8px;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 20px;\n  display: flex;\n  gap: 8px;\n`;\n\nconst Pez = styled.div<{$color: string; $opacity: number}>`\n  background-color: ${({$color}) => $color};\n  border-radius: 2px;\n  height: 16px;\n  opacity: ${({$opacity}) => $opacity};\n  width: 8px;\n`;\n","import {gql} from '@apollo/client';\nimport {Colors, CaptionMono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {InstigationStatus} from '../types/globalTypes';\n\nimport {ScheduleFutureTicksFragment} from './types/ScheduleFutureTicksFragment';\n\nconst TIME_FORMAT = {\n  showTimezone: true,\n  showSeconds: true,\n};\n\ninterface Props {\n  schedules: ScheduleFutureTicksFragment[];\n}\n\nexport const NextTick = (props: Props) => {\n  const {schedules} = props;\n\n  const nextTick = React.useMemo(() => {\n    const timestamps = schedules.map((schedule) => {\n      const {executionTimezone, futureTicks, scheduleState} = schedule;\n      if (scheduleState.status === InstigationStatus.RUNNING) {\n        return {\n          executionTimezone,\n          earliest: Math.min(...futureTicks.results.map(({timestamp}) => timestamp)),\n        };\n      }\n      return null;\n    });\n\n    return timestamps.reduce((earliestOverall, timestamp) => {\n      if (\n        !earliestOverall ||\n        (timestamp?.earliest && timestamp.earliest < earliestOverall?.earliest)\n      ) {\n        return timestamp;\n      }\n      return earliestOverall;\n    }, null);\n  }, [schedules]);\n\n  if (nextTick) {\n    return (\n      <CaptionMono color={Colors.Gray500}>\n        Next tick:{' '}\n        <TimestampDisplay\n          timestamp={nextTick.earliest}\n          timezone={nextTick.executionTimezone}\n          timeFormat={TIME_FORMAT}\n        />\n      </CaptionMono>\n    );\n  }\n\n  return null;\n};\n\nexport const SCHEDULE_FUTURE_TICKS_FRAGMENT = gql`\n  fragment ScheduleFutureTicksFragment on Schedule {\n    id\n    executionTimezone\n    scheduleState {\n      id\n      status\n    }\n    futureTicks(limit: 10) {\n      results {\n        timestamp\n      }\n    }\n  }\n`;\n","export interface RunWithTime {\n  startTime: number;\n  endTime: number;\n}\n\nexport type RunBatch<R extends RunWithTime> = {\n  runs: R[];\n  startTime: number;\n  endTime: number;\n  left: number;\n  width: number;\n};\n\ntype Config<R extends RunWithTime> = {\n  runs: R[];\n  start: number;\n  end: number;\n  width: number;\n  minChunkWidth: number;\n  minMultipleWidth: number;\n};\n\nexport const overlap = (a: {start: number; end: number}, b: {start: number; end: number}) =>\n  !(a.end < b.start || b.end < a.start);\n\n/**\n * Given a list of runs, batch any that overlap. Calculate `left` and `width` values for rendering\n * purposes, using minimum widths for very brief runs and overlapping batches.\n */\nexport const batchRunsForTimeline = <R extends RunWithTime>(config: Config<R>) => {\n  const {runs, start, end, width, minChunkWidth, minMultipleWidth} = config;\n  const rangeLength = end - start;\n\n  const batches: RunBatch<R>[] = runs\n    .map((run) => {\n      const startTime = run.startTime;\n      const endTime = run.endTime || Date.now();\n      const left = Math.max(0, Math.floor(((startTime - start) / rangeLength) * width));\n      const runWidth = Math.max(\n        minChunkWidth,\n        Math.min(\n          Math.ceil(((endTime - startTime) / rangeLength) * width),\n          Math.ceil(((endTime - start) / rangeLength) * width),\n        ),\n      );\n\n      return {\n        runs: [run],\n        startTime,\n        endTime,\n        left,\n        width: runWidth,\n      };\n    })\n    .sort((a, b) => b.left - a.left);\n\n  const consolidated = [];\n  while (batches.length) {\n    const current = batches.shift();\n    const next = batches[0];\n    if (current) {\n      if (\n        next &&\n        overlap(\n          {\n            start: current.left,\n            end: current.left + Math.max(current.width, minMultipleWidth),\n          },\n          {start: next.left, end: next.left + Math.max(next.width, minMultipleWidth)},\n        )\n      ) {\n        // Remove `next`, consolidate it with `current`, and unshift it back on.\n        // This way, we keep looking for batches to consolidate with.\n        batches.shift();\n        current.runs = [...current.runs, ...next.runs];\n        current.startTime = Math.min(current.startTime, next.startTime);\n        current.endTime = Math.max(current.endTime, next.endTime);\n\n        // Identify the rightmost point for these two items.\n        const right = Math.max(\n          current.left + minMultipleWidth,\n          current.left + current.width,\n          next.left + next.width,\n        );\n\n        // Using the leftmost point, calculate the new width using the rightmost point\n        // determined above.\n        const minLeft = Math.min(current.left, next.left);\n        current.width = right - minLeft;\n        current.left = minLeft;\n\n        batches.unshift(current);\n      } else {\n        // If the next batch doesn't overlap, we've consolidated this batch\n        // all we can. Move on!\n        consolidated.push(current);\n      }\n    }\n  }\n\n  return consolidated;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Popover, Mono, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {TimezoneContext} from '../app/time/TimezoneContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\nimport {SCHEDULE_FUTURE_TICKS_FRAGMENT} from '../instance/NextTick';\nimport {RUN_TIME_FRAGMENT} from '../runs/RunUtils';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {InstigationStatus, RunStatus} from '../types/globalTypes';\nimport {LoadingSpinner} from '../ui/Loading';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {repoAddressAsString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {RunStatusDot} from './RunStatusDots';\nimport {\n  doneStatuses,\n  failedStatuses,\n  inProgressStatuses,\n  queuedStatuses,\n  successStatuses,\n} from './RunStatuses';\nimport {TimeElapsed} from './TimeElapsed';\nimport {batchRunsForTimeline, overlap, RunBatch} from './batchRunsForTimeline';\nimport {RunTimelineQuery, RunTimelineQueryVariables} from './types/RunTimelineQuery';\n\nconst ROW_HEIGHT = 24;\nconst TIME_HEADER_HEIGHT = 36;\nconst LABEL_WIDTH = 232;\n\nconst ONE_HOUR_MSEC = 60 * 60 * 1000;\n\nexport type TimelineRun = {\n  id: string;\n  status: RunStatus | 'SCHEDULED';\n  startTime: number;\n  endTime: number;\n};\n\nexport type TimelineJob = {\n  key: string;\n  jobName: string;\n  path: string;\n  runs: TimelineRun[];\n};\n\nexport type HourWindow = '1' | '6' | '12' | '24';\n\nexport const makeJobKey = (repoAddress: RepoAddress, jobName: string) => {\n  return `${jobName}-${repoAddressAsString(repoAddress)}`;\n};\n\nexport const RunTimelineContainer = ({\n  range,\n  jobs,\n  hourWindow,\n}: {\n  range: [number, number];\n  jobs: TimelineJob[];\n  hourWindow: HourWindow;\n}) => {\n  const [start, end] = range;\n  const [jobsWithRuns, setJobsWithRuns] = React.useState<TimelineJob[]>([]);\n  const [loadedWindow, setLoadedWindow] = React.useState<HourWindow>();\n\n  const {data, loading} = useQuery<RunTimelineQuery, RunTimelineQueryVariables>(\n    RUN_TIMELINE_QUERY,\n    {\n      fetchPolicy: 'network-only',\n      notifyOnNetworkStatusChange: true,\n      variables: {\n        inProgressFilter: {\n          statuses: [RunStatus.CANCELING, RunStatus.STARTED],\n          createdBefore: end / 1000.0,\n        },\n        terminatedFilter: {\n          statuses: Array.from(doneStatuses),\n          createdBefore: end / 1000.0,\n          updatedAfter: start / 1000.0,\n        },\n      },\n    },\n  );\n  const jobsByKey = React.useMemo(() => {\n    return jobs.reduce((accum, job: TimelineJob) => {\n      return {...accum, [job.key]: job};\n    }, {} as {[key: string]: TimelineJob});\n  }, [jobs]);\n\n  React.useEffect(() => {\n    if (loading) {\n      return;\n    }\n    const {unterminated, terminated, workspaceOrError} = data || {};\n\n    const runsByJob: {[jobName: string]: TimelineRun[]} = {};\n    const now = Date.now();\n\n    // fetch all the runs in the given range\n    [\n      ...(unterminated?.__typename === 'Runs' ? unterminated.results : []),\n      ...(terminated?.__typename === 'Runs' ? terminated.results : []),\n    ].forEach((run) => {\n      if (!run.startTime) {\n        return;\n      }\n      if (\n        !overlap(\n          {start, end},\n          {\n            start: run.startTime * 1000,\n            end: run.endTime ? run.endTime * 1000 : now,\n          },\n        )\n      ) {\n        return;\n      }\n      runsByJob[run.pipelineName] = [\n        ...(runsByJob[run.pipelineName] || []),\n        {\n          id: run.id,\n          status: run.status,\n          startTime: run.startTime * 1000,\n          endTime: run.endTime ? run.endTime * 1000 : now,\n        },\n      ];\n    });\n\n    const jobs = [];\n    if (workspaceOrError && workspaceOrError.__typename === 'Workspace') {\n      for (const locationEntry of workspaceOrError.locationEntries) {\n        if (\n          locationEntry.__typename === 'WorkspaceLocationEntry' &&\n          locationEntry.locationOrLoadError?.__typename === 'RepositoryLocation'\n        ) {\n          for (const repository of locationEntry.locationOrLoadError.repositories) {\n            const repoAddress = buildRepoAddress(\n              repository.name,\n              locationEntry.locationOrLoadError.name,\n            );\n            for (const pipeline of repository.pipelines) {\n              const jobKey = makeJobKey(repoAddress, pipeline.name);\n              if (!(jobKey in jobsByKey)) {\n                continue;\n              }\n\n              const schedules = (repository.schedules || []).filter(\n                (schedule) => schedule.pipelineName === pipeline.name,\n              );\n\n              const jobTicks: TimelineRun[] = [];\n              for (const schedule of schedules) {\n                if (schedule.scheduleState.status === InstigationStatus.RUNNING) {\n                  schedule.futureTicks.results.forEach(({timestamp}) => {\n                    const startTime = timestamp * 1000;\n                    if (overlap({start, end}, {start: startTime, end: startTime})) {\n                      jobTicks.push({\n                        id: `${schedule.pipelineName}-future-run-${timestamp}`,\n                        status: 'SCHEDULED',\n                        startTime,\n                        endTime: startTime + 10 * 1000,\n                      });\n                    }\n                  });\n                }\n              }\n\n              const jobRuns = runsByJob[pipeline.name] || [];\n              if (jobTicks.length || jobRuns.length) {\n                jobs.push({\n                  key: jobKey,\n                  jobName: pipeline.name,\n                  path: workspacePipelinePath({\n                    repoName: repoAddress.name,\n                    repoLocation: repoAddress.location,\n                    pipelineName: pipeline.name,\n                    isJob: pipeline.isJob,\n                  }),\n                  runs: [...jobRuns, ...jobTicks],\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    const earliest = jobs.reduce((accum, job) => {\n      const startTimes = job.runs.map((job) => job.startTime);\n      return {...accum, [job.key]: Math.min(...startTimes)};\n    }, {} as {[jobKey: string]: number});\n\n    setJobsWithRuns(jobs.sort((a, b) => earliest[a.key] - earliest[b.key]));\n    setLoadedWindow(hourWindow);\n  }, [data, start, end, loading, jobsByKey, hourWindow]);\n\n  if (loading && hourWindow !== loadedWindow) {\n    return <LoadingSpinner purpose=\"section\" />;\n  }\n  return <RunTimeline range={[start, end]} jobs={jobsWithRuns} />;\n};\n\nexport const RunTimeline = ({jobs, range}: {jobs: TimelineJob[]; range: [number, number]}) => {\n  const [width, setWidth] = React.useState<number | null>(null);\n  const observer = React.useRef<ResizeObserver | null>(null);\n\n  const containerRef = React.useCallback((node) => {\n    if (node) {\n      observer.current = new ResizeObserver((entries) => {\n        const entry = entries[0];\n        setWidth(entry.contentRect.width);\n      });\n      observer.current.observe(node);\n    } else {\n      observer.current?.disconnect();\n    }\n  }, []);\n\n  const height = ROW_HEIGHT * (jobs.length || 1);\n\n  return (\n    <Timeline $height={TIME_HEADER_HEIGHT + height} ref={containerRef}>\n      {width ? (\n        jobs.length ? (\n          <>\n            <TimeDividers interval={ONE_HOUR_MSEC} range={range} height={height} />\n            <div>\n              {jobs.map((job, ii) => (\n                <RunTimelineRow\n                  key={job.key}\n                  job={job}\n                  top={ii * ROW_HEIGHT + TIME_HEADER_HEIGHT}\n                  range={range}\n                  width={width}\n                />\n              ))}\n            </div>\n          </>\n        ) : (\n          <NoRunsTimeline />\n        )\n      ) : null}\n    </Timeline>\n  );\n};\n\ntype TimeMarker = {\n  key: string;\n  label: React.ReactNode;\n  left: number;\n};\n\ninterface TimeDividersProps {\n  height: number;\n  interval: number;\n  range: [number, number];\n}\n\nconst TimeDividers = (props: TimeDividersProps) => {\n  const {interval, range, height} = props;\n  const [start, end] = range;\n  const locale = navigator.language;\n  const [timezone] = React.useContext(TimezoneContext);\n\n  const timeMarkers: TimeMarker[] = React.useMemo(() => {\n    const totalTime = end - start;\n    const startGap = start % interval;\n    const firstMarker = start - startGap;\n    const markerCount = Math.ceil(totalTime / interval) + 1;\n    return [...new Array(markerCount)]\n      .map((_, ii) => {\n        const time = firstMarker + ii * interval;\n        const date = new Date(time);\n        const label = date.toLocaleString(locale, {\n          hour: '2-digit',\n          timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n        });\n        return {\n          label,\n          key: date.toString(),\n          left: ((time - start) / totalTime) * 100,\n        };\n      })\n      .filter((marker) => marker.left > 0);\n  }, [end, start, interval, locale, timezone]);\n\n  const now = Date.now();\n  const nowLeft = `${(((now - start) / (end - start)) * 100).toPrecision(3)}%`;\n\n  return (\n    <DividerContainer style={{height: `${height}px`}}>\n      <DividerLabels>\n        {timeMarkers.map((marker) => (\n          <DividerLabel key={marker.key} style={{left: `${marker.left.toPrecision(3)}%`}}>\n            {marker.label}\n          </DividerLabel>\n        ))}\n      </DividerLabels>\n      <DividerLines>\n        {timeMarkers.map((marker) => (\n          <DividerLine key={marker.key} style={{left: `${marker.left.toPrecision(3)}%`}} />\n        ))}\n        {now >= start && now <= end ? (\n          <DividerLine style={{left: nowLeft, backgroundColor: Colors.Blue500, zIndex: 1}} />\n        ) : null}\n      </DividerLines>\n    </DividerContainer>\n  );\n};\n\nconst DividerContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${LABEL_WIDTH}px;\n  right: 0;\n  font-family: ${FontFamily.monospace};\n  color: ${Colors.Gray400};\n`;\n\nconst DividerLabels = styled.div`\n  display: flex;\n  align-items: center;\n  height: ${TIME_HEADER_HEIGHT}px;\n  position: relative;\n  user-select: none;\n  width: 100%;\n`;\n\nconst DividerLabel = styled.div`\n  position: absolute;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nconst DividerLines = styled.div`\n  height: 100%;\n  position: relative;\n  width: 100%;\n  box-shadow: inset 1px 0 0 ${Colors.KeylineGray}, inset -1px 0 0 ${Colors.KeylineGray};\n`;\n\nconst DividerLine = styled.div`\n  background-color: ${Colors.KeylineGray};\n  height: 100%;\n  position: absolute;\n  top: 0;\n  width: 1px;\n`;\n\nconst mergeStatusToColor = (runs: TimelineRun[]) => {\n  let anyInProgress = false;\n  let anyQueued = false;\n  let anyFailed = false;\n  let anySucceeded = false;\n  let anyScheduled = false;\n\n  runs.forEach(({status}) => {\n    if (status === 'SCHEDULED') {\n      anyScheduled = true;\n    } else if (queuedStatuses.has(status)) {\n      anyQueued = true;\n    } else if (inProgressStatuses.has(status)) {\n      anyInProgress = true;\n    } else if (failedStatuses.has(status)) {\n      anyFailed = true;\n    } else if (successStatuses.has(status)) {\n      anySucceeded = true;\n    }\n  });\n\n  if (anyQueued) {\n    return Colors.Blue200;\n  }\n  if (anyInProgress) {\n    return Colors.Blue500;\n  }\n  if (anyFailed) {\n    return Colors.Red500;\n  }\n  if (anySucceeded) {\n    return Colors.Green500;\n  }\n  if (anyScheduled) {\n    return Colors.Blue200;\n  }\n\n  return Colors.Gray500;\n};\n\nconst MIN_CHUNK_WIDTH = 2;\nconst MIN_WIDTH_FOR_MULTIPLE = 16;\n\nconst RunTimelineRow = ({\n  job,\n  top,\n  range,\n  width: containerWidth,\n}: {\n  job: TimelineJob;\n  top: number;\n  range: [number, number];\n  width: number;\n}) => {\n  // const {jobKey, jobLabel, jobPath, runs, top, range, width: containerWidth} = props;\n  const [start, end] = range;\n  const width = containerWidth - LABEL_WIDTH;\n  const {runs} = job;\n\n  // Batch overlapping runs in this row.\n  const batched = React.useMemo(() => {\n    const batches: RunBatch<TimelineRun>[] = batchRunsForTimeline({\n      runs,\n      start,\n      end,\n      width,\n      minChunkWidth: MIN_CHUNK_WIDTH,\n      minMultipleWidth: MIN_WIDTH_FOR_MULTIPLE,\n    });\n\n    return batches;\n  }, [runs, start, end, width]);\n\n  if (!job.runs.length) {\n    return null;\n  }\n\n  return (\n    <Row $top={top}>\n      <JobName>\n        <Link to={job.path}>{job.jobName}</Link>\n      </JobName>\n      <RunChunks>\n        {batched.map((batch) => {\n          const {left, width, runs} = batch;\n          const runCount = runs.length;\n          return (\n            <RunChunk\n              key={batch.runs[0].id}\n              $color={mergeStatusToColor(batch.runs)}\n              $multiple={runCount > 1}\n              style={{\n                left: `${left}px`,\n                width: `${width}px`,\n              }}\n            >\n              <Popover\n                content={<RunHoverContent jobKey={job.key} batch={batch} />}\n                position=\"top\"\n                interactionKind=\"hover\"\n                className=\"chunk-popover-target\"\n              >\n                <Box\n                  flex={{direction: 'row', justifyContent: 'center', alignItems: 'center'}}\n                  style={{height: '100%'}}\n                >\n                  {runCount > 1 ? <BatchCount>{batch.runs.length}</BatchCount> : null}\n                </Box>\n              </Popover>\n            </RunChunk>\n          );\n        })}\n      </RunChunks>\n    </Row>\n  );\n};\n\nconst NoRunsTimeline = () => (\n  <Box flex={{justifyContent: 'center', alignItems: 'center'}} padding={24}>\n    No runs or upcoming runs found for this time window.\n  </Box>\n);\n\nconst Timeline = styled.div<{$height: number}>`\n  ${({$height}) => `height: ${$height}px;`}\n  position: relative;\n`;\n\nconst Row = styled.div<{$top: number}>`\n  align-items: center;\n  box-shadow: inset 0 -1px 0 ${Colors.KeylineGray};\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: ${ROW_HEIGHT + 1}px;\n  padding: 1px 0;\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  ${({$top}) => `transform: translateY(${$top}px);`}\n\n  :first-child, :hover {\n    box-shadow: inset 0 1px 0 ${Colors.KeylineGray}, inset 0 -1px 0 ${Colors.KeylineGray};\n  }\n\n  :hover {\n    background-color: ${Colors.Gray10};\n  }\n`;\n\nconst JobName = styled.div`\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 16px;\n  overflow: hidden;\n  padding: 0 12px 0 24px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: ${LABEL_WIDTH}px;\n`;\n\nconst RunChunks = styled.div`\n  flex: 1;\n  position: relative;\n  height: ${ROW_HEIGHT}px;\n`;\n\ninterface ChunkProps {\n  $color: string;\n  $multiple: boolean;\n}\n\nconst RunChunk = styled.div<ChunkProps>`\n  align-items: center;\n  background-color: ${({$color}) => $color};\n  border-radius: 2px;\n  height: ${ROW_HEIGHT - 4}px;\n  position: absolute;\n  top: 2px;\n  ${({$multiple}) => ($multiple ? `min-width: ${MIN_WIDTH_FOR_MULTIPLE}px` : null)};\n\n  transition: background-color 300ms linear, width 300ms ease-in-out;\n\n  .chunk-popover-target {\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst BatchCount = styled.div`\n  color: ${Colors.White};\n  cursor: default;\n  font-size: 12px;\n  user-select: none;\n`;\n\ninterface RunHoverContentProps {\n  jobKey: string;\n  batch: RunBatch<TimelineRun>;\n}\n\nconst RunHoverContent = (props: RunHoverContentProps) => {\n  const {jobKey, batch} = props;\n  return (\n    <Box style={{width: '260px'}}>\n      <Box padding={12} border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}>\n        <HoverContentJobName>{jobKey}</HoverContentJobName>\n      </Box>\n      <div style={{maxHeight: '240px', overflowY: 'auto'}}>\n        {batch.runs.map((run, ii) => (\n          <Box\n            key={run.id}\n            border={ii > 0 ? {side: 'top', width: 1, color: Colors.KeylineGray} : null}\n            flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n            padding={{vertical: 8, horizontal: 12}}\n          >\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <RunStatusDot status={run.status} size={8} />\n              {run.status === 'SCHEDULED' ? (\n                'Scheduled'\n              ) : (\n                <Link to={`/instance/runs/${run.id}`}>\n                  <Mono>{run.id.slice(0, 8)}</Mono>\n                </Link>\n              )}\n            </Box>\n            <Mono>\n              {run.status === 'SCHEDULED' ? (\n                <TimestampDisplay timestamp={run.startTime / 1000} />\n              ) : (\n                <TimeElapsed startUnix={run.startTime / 1000} endUnix={run.endTime / 1000} />\n              )}\n            </Mono>\n          </Box>\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nconst HoverContentJobName = styled.strong`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n`;\n\nconst RUN_TIMELINE_QUERY = gql`\n  query RunTimelineQuery($inProgressFilter: RunsFilter!, $terminatedFilter: RunsFilter!) {\n    unterminated: runsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        results {\n          id\n          pipelineName\n          ...RunTimeFragment\n        }\n      }\n    }\n    terminated: runsOrError(filter: $terminatedFilter) {\n      ... on Runs {\n        results {\n          id\n          pipelineName\n          ...RunTimeFragment\n        }\n      }\n    }\n    workspaceOrError {\n      ... on Workspace {\n        locationEntries {\n          id\n          name\n          loadStatus\n          displayMetadata {\n            key\n            value\n          }\n          locationOrLoadError {\n            ... on RepositoryLocation {\n              id\n              name\n              repositories {\n                id\n                name\n                pipelines {\n                  id\n                  name\n                  isJob\n                }\n                schedules {\n                  id\n                  name\n                  pipelineName\n                  scheduleState {\n                    id\n                    status\n                  }\n                  ...ScheduleFutureTicksFragment\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ${RUN_TIME_FRAGMENT}\n  ${SCHEDULE_FUTURE_TICKS_FRAGMENT}\n`;\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {Button, Icon, Menu, MenuItem, Popover, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {canRunAllSteps, canRunFromFailure} from '../runs/RunActionButtons';\nimport {RunFragments} from '../runs/RunFragments';\nimport {useJobReExecution} from '../runs/useJobReExecution';\nimport {MenuLink} from '../ui/MenuLink';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {OverviewJobFragment} from './types/OverviewJobFragment';\nimport {RunReExecutionQuery} from './types/RunReExecutionQuery';\n\ninterface Props {\n  job: OverviewJobFragment;\n  repoAddress: RepoAddress;\n}\n\n/**\n * Lazily load more information about the last run for this job, then use that data to inform\n * whether re-execution is possible.\n */\nexport const JobMenu = (props: Props) => {\n  const {job, repoAddress} = props;\n  const lastRun = job.runs[0];\n  const {canLaunchPipelineReexecution} = usePermissions();\n  const [fetchHasExecutionPlan, {data}] = useLazyQuery<RunReExecutionQuery>(RUN_RE_EXECUTION_QUERY);\n\n  const run = data?.pipelineRunOrError.__typename === 'Run' ? data?.pipelineRunOrError : null;\n\n  const fetchIfPossible = React.useCallback(() => {\n    if (lastRun.id) {\n      fetchHasExecutionPlan({variables: {runId: lastRun.id}});\n    }\n  }, [lastRun, fetchHasExecutionPlan]);\n\n  const onLaunch = useJobReExecution(run);\n\n  const reExecuteAllItem = (\n    <MenuItem\n      icon=\"replay\"\n      text=\"Re-execute latest run\"\n      onClick={() => onLaunch({type: 'all'})}\n      disabled={!canLaunchPipelineReexecution || !run || !canRunAllSteps(run)}\n    />\n  );\n\n  const reExecuteFromFailureItem = (\n    <MenuItem\n      icon=\"sync_problem\"\n      text=\"Re-execute latest run from failure\"\n      onClick={() => onLaunch({type: 'from-failure'})}\n      disabled={!canLaunchPipelineReexecution || !run || !canRunFromFailure(run)}\n    />\n  );\n\n  return (\n    <Popover\n      onOpened={() => fetchIfPossible()}\n      content={\n        <Menu>\n          <MenuLink\n            to={workspacePipelinePath({\n              repoName: repoAddress.name,\n              repoLocation: repoAddress.location,\n              pipelineName: job.name,\n              isJob: job.isJob,\n            })}\n            icon=\"job\"\n            text=\"View job\"\n          />\n          <MenuLink\n            to={workspacePipelinePath({\n              repoName: repoAddress.name,\n              repoLocation: repoAddress.location,\n              pipelineName: job.name,\n              isJob: job.isJob,\n              path: '/runs',\n            })}\n            icon=\"checklist\"\n            text=\"View all recent runs\"\n          />\n          {canLaunchPipelineReexecution ? (\n            reExecuteAllItem\n          ) : (\n            <Tooltip content={DISABLED_MESSAGE} display=\"block\">\n              {reExecuteAllItem}\n            </Tooltip>\n          )}\n          {canLaunchPipelineReexecution ? (\n            reExecuteFromFailureItem\n          ) : (\n            <Tooltip content={DISABLED_MESSAGE} display=\"block\">\n              {reExecuteFromFailureItem}\n            </Tooltip>\n          )}\n        </Menu>\n      }\n      position=\"bottom-right\"\n    >\n      <Button icon={<Icon name=\"expand_more\" />} />\n    </Popover>\n  );\n};\n\nconst RUN_RE_EXECUTION_QUERY = gql`\n  query RunReExecutionQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        ...RunFragment\n      }\n    }\n  }\n\n  ${RunFragments.RunFragment}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Colors,\n  Icon,\n  PageHeader,\n  Spinner,\n  Table,\n  Body,\n  Heading,\n  TextInput,\n  FontFamily,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useMergedRefresh, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {ScheduleOrSensorTag} from '../nav/ScheduleOrSensorTag';\nimport {LegacyPipelineTag} from '../pipelines/LegacyPipelineTag';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunStatusPezList} from '../runs/RunStatusPez';\nimport {\n  failedStatuses,\n  inProgressStatuses,\n  queuedStatuses,\n  successStatuses,\n} from '../runs/RunStatuses';\nimport {RunTimelineContainer, TimelineJob, makeJobKey, HourWindow} from '../runs/RunTimeline';\nimport {RUN_TIME_FRAGMENT} from '../runs/RunUtils';\nimport {RunTimeFragment} from '../runs/types/RunTimeFragment';\nimport {SCHEDULE_SWITCH_FRAGMENT} from '../schedules/ScheduleSwitch';\nimport {SENSOR_SWITCH_FRAGMENT} from '../sensors/SensorSwitch';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {repoAddressAsString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {InstanceTabs} from './InstanceTabs';\nimport {JobMenu} from './JobMenu';\nimport {LastRunSummary} from './LastRunSummary';\nimport {NextTick, SCHEDULE_FUTURE_TICKS_FRAGMENT} from './NextTick';\nimport {RepoFilterButton} from './RepoFilterButton';\nimport {\n  InstanceOverviewInitialQuery,\n  InstanceOverviewInitialQuery_workspaceOrError_Workspace_locationEntries_locationOrLoadError_RepositoryLocation_repositories_schedules as Schedule,\n  InstanceOverviewInitialQuery_workspaceOrError_Workspace_locationEntries_locationOrLoadError_RepositoryLocation_repositories_sensors as Sensor,\n} from './types/InstanceOverviewInitialQuery';\nimport {LastTenRunsPerJobQuery} from './types/LastTenRunsPerJobQuery';\nimport {OverviewJobFragment} from './types/OverviewJobFragment';\n\ntype JobItem = {\n  job: OverviewJobFragment;\n  repoAddress: RepoAddress;\n  schedules: Schedule[];\n  sensors: Sensor[];\n};\n\ntype JobItemWithRuns = JobItem & {\n  runs: RunTimeFragment[];\n};\n\ntype State = {\n  searchValue: string;\n};\n\ntype Action = {type: 'search'; value: string};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'search': {\n      return {...state, searchValue: action.value};\n    }\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  searchValue: '',\n};\n\nexport const InstanceOverviewPage = () => {\n  useTrackPageView();\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const {searchValue} = state;\n\n  const queryResultOverview = useQuery<InstanceOverviewInitialQuery>(\n    INSTANCE_OVERVIEW_INITIAL_QUERY,\n    {\n      fetchPolicy: 'network-only',\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const {data, loading} = queryResultOverview;\n\n  const queryResultLastRuns = useQuery<LastTenRunsPerJobQuery>(LAST_TEN_RUNS_PER_JOB_QUERY, {\n    fetchPolicy: 'network-only',\n    notifyOnNetworkStatusChange: true,\n  });\n  const {data: lastTenRunsData} = queryResultLastRuns;\n\n  const refreshState = useMergedRefresh(\n    useQueryRefreshAtInterval(queryResultLastRuns, FIFTEEN_SECONDS),\n    useQueryRefreshAtInterval(queryResultOverview, FIFTEEN_SECONDS),\n  );\n\n  const bucketed = React.useMemo(() => {\n    const failed = [];\n    const inProgress = [];\n    const succeeded = [];\n    const queued = [];\n    const neverRan = [];\n\n    const sortFn = (a: JobItem, b: JobItem) => {\n      const aRun = a.job.runs[0] || null;\n      const bRun = b.job.runs[0] || null;\n\n      if (aRun.startTime) {\n        return bRun.startTime ? bRun.startTime - aRun.startTime : -1;\n      } else if (bRun.startTime) {\n        return -1;\n      }\n\n      return a.job.name.toLocaleLowerCase().localeCompare(b.job.name.toLocaleLowerCase());\n    };\n\n    if (data && Object.keys(data).length && data?.workspaceOrError.__typename === 'Workspace') {\n      for (const locationEntry of data.workspaceOrError.locationEntries) {\n        if (\n          locationEntry.__typename === 'WorkspaceLocationEntry' &&\n          locationEntry.locationOrLoadError?.__typename === 'RepositoryLocation'\n        ) {\n          for (const repository of locationEntry.locationOrLoadError.repositories) {\n            for (const pipeline of repository.pipelines) {\n              const {runs} = pipeline;\n              const schedules: Schedule[] = (repository.schedules || []).filter(\n                (schedule) => schedule.pipelineName === pipeline.name,\n              );\n              const sensors: Sensor[] = (repository.sensors || []).filter((sensor) =>\n                sensor.targets?.map((t) => t.pipelineName).includes(pipeline.name),\n              );\n              const repoAddress = buildRepoAddress(\n                repository.name,\n                locationEntry.locationOrLoadError.name,\n              );\n\n              if (runs.length) {\n                const {status} = runs[0];\n                const item: JobItem = {\n                  job: pipeline,\n                  schedules,\n                  sensors,\n                  repoAddress,\n                };\n                if (failedStatuses.has(status)) {\n                  failed.push(item);\n                } else if (inProgressStatuses.has(status)) {\n                  inProgress.push(item);\n                } else if (successStatuses.has(status)) {\n                  succeeded.push(item);\n                } else if (queuedStatuses.has(status)) {\n                  queued.push(item);\n                } else {\n                  neverRan.push(item);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    failed.sort(sortFn);\n    inProgress.sort(sortFn);\n    queued.sort(sortFn);\n    succeeded.sort(sortFn);\n    neverRan.sort(sortFn);\n\n    return {failed, inProgress, queued, succeeded, neverRan};\n  }, [data]);\n\n  const filteredJobs = React.useMemo(() => {\n    const searchToLower = searchValue.toLocaleLowerCase();\n    const filterJobs = ({job, repoAddress}: JobItem) =>\n      visibleRepos.some(\n        (r) =>\n          r.repository.name === repoAddress.name &&\n          r.repositoryLocation.name === repoAddress.location,\n      ) &&\n      job.name.toLocaleLowerCase().includes(searchToLower) &&\n      !isHiddenAssetGroupJob(job.name);\n\n    const {failed, inProgress, queued, succeeded, neverRan} = bucketed;\n    return {\n      failed: failed.filter(filterJobs),\n      inProgress: inProgress.filter(filterJobs),\n      queued: queued.filter(filterJobs),\n      succeeded: succeeded.filter(filterJobs),\n      neverRan: neverRan.filter(filterJobs),\n    };\n  }, [bucketed, visibleRepos, searchValue]);\n\n  const lastTenRunsFlattened = React.useMemo(() => {\n    if (!lastTenRunsData || Object.keys(lastTenRunsData).length === 0) {\n      return null;\n    }\n\n    const flattened: {[key: string]: RunTimeFragment[]} = {};\n    if (lastTenRunsData.workspaceOrError.__typename === 'Workspace') {\n      for (const locationEntry of lastTenRunsData.workspaceOrError.locationEntries) {\n        if (\n          locationEntry.__typename === 'WorkspaceLocationEntry' &&\n          locationEntry.locationOrLoadError?.__typename === 'RepositoryLocation'\n        ) {\n          for (const repository of locationEntry.locationOrLoadError.repositories) {\n            for (const pipeline of repository.pipelines) {\n              const jobKey = makeJobKey(\n                buildRepoAddress(repository.name, locationEntry.locationOrLoadError.name),\n                pipeline.name,\n              );\n              flattened[jobKey] = pipeline.runs;\n            }\n          }\n        }\n      }\n    }\n\n    return flattened;\n  }, [lastTenRunsData]);\n\n  const filteredJobsFlattened: JobItem[] = React.useMemo(() => {\n    return Object.values(filteredJobs).reduce((accum, jobList) => {\n      return [...accum, ...jobList];\n    }, []);\n  }, [filteredJobs]);\n\n  const filteredJobsWithRuns = React.useMemo(() => {\n    const appendRuns = (jobItem: JobItem) => {\n      const {job, repoAddress} = jobItem;\n      const jobKey = makeJobKey(repoAddress, job.name);\n      const matchingRuns = lastTenRunsFlattened ? lastTenRunsFlattened[jobKey] || [] : [];\n      return {...jobItem, runs: [...matchingRuns].reverse()};\n    };\n\n    const {failed, inProgress, queued, succeeded, neverRan} = filteredJobs;\n    return {\n      failed: failed.map(appendRuns),\n      inProgress: inProgress.map(appendRuns),\n      queued: queued.map(appendRuns),\n      succeeded: succeeded.map(appendRuns),\n      neverRan: neverRan.map(appendRuns),\n    };\n  }, [lastTenRunsFlattened, filteredJobs]);\n\n  if (!data || Object.keys(data).length === 0) {\n    return (\n      <>\n        <PageHeader\n          title={<Heading>Instance status</Heading>}\n          tabs={<InstanceTabs tab=\"overview\" refreshState={refreshState} />}\n        />\n        <Box padding={64}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </>\n    );\n  }\n\n  const {failed, inProgress, queued, succeeded, neverRan} = filteredJobsWithRuns;\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>Instance status</Heading>}\n        tabs={<InstanceTabs tab=\"overview\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{horizontal: 24, top: 16}}\n        flex={{direction: 'row', alignItems: 'center', gap: 12, grow: 0}}\n      >\n        {allRepos.length > 1 && <RepoFilterButton />}\n        <TextInput\n          icon=\"search\"\n          value={searchValue}\n          onChange={(e) => dispatch({type: 'search', value: e.target.value})}\n          placeholder=\"Filter by job name…\"\n          style={{width: '340px'}}\n        />\n      </Box>\n      <RunTimelineSection jobs={filteredJobsFlattened} loading={loading} />\n      {inProgress.length ? (\n        <JobSection\n          icon={<Icon name=\"hourglass_bottom\" color={Colors.Blue500} size={24} />}\n          heading={\n            inProgress.length === 1 ? '1 job in progress' : `${inProgress.length} jobs in progress`\n          }\n          jobs={inProgress}\n        />\n      ) : null}\n      {failed.length ? (\n        <JobSection\n          icon={<Icon name=\"error_outline\" color={Colors.Red500} size={24} />}\n          heading={failed.length === 1 ? '1 job failed' : `${failed.length} jobs failed`}\n          jobs={failed}\n        />\n      ) : null}\n      {queued.length ? (\n        <JobSection\n          icon={<Icon name=\"checklist\" color={Colors.Gray500} size={24} />}\n          heading={queued.length === 1 ? '1 job queued' : `${queued.length} jobs queued`}\n          jobs={queued}\n        />\n      ) : null}\n      {succeeded.length ? (\n        <JobSection\n          icon={<Icon name=\"check_circle\" color={Colors.Green500} size={24} />}\n          heading={\n            succeeded.length === 1 ? '1 job succeeded' : `${succeeded.length} jobs succeeded`\n          }\n          jobs={succeeded}\n        />\n      ) : null}\n      {neverRan.length ? (\n        <JobSection\n          icon={<Icon name=\"history_toggle_off\" color={Colors.Gray900} size={24} />}\n          heading={neverRan.length === 1 ? '1 job never ran' : `${neverRan.length} jobs never ran`}\n          jobs={neverRan}\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst LOOKAHEAD_HOURS = 1;\nconst ONE_HOUR = 60 * 60 * 1000;\n\nconst RunTimelineSection = ({jobs, loading}: {jobs: JobItem[]; loading: boolean}) => {\n  const [shown, setShown] = React.useState(true);\n  const [hourWindow, setHourWindow] = React.useState<HourWindow>('6');\n  const nowRef = React.useRef(Date.now());\n\n  React.useEffect(() => {\n    if (!loading) {\n      nowRef.current = Date.now();\n    }\n  }, [loading]);\n\n  const nowSecs = Math.floor(nowRef.current / 1000);\n  const range: [number, number] = React.useMemo(() => {\n    return [\n      nowSecs * 1000 - Number(hourWindow) * ONE_HOUR,\n      nowSecs * 1000 + LOOKAHEAD_HOURS * ONE_HOUR,\n    ];\n  }, [hourWindow, nowSecs]);\n\n  const [start, end] = React.useMemo(() => {\n    const [unvalidatedStart, unvalidatedEnd] = range;\n    return unvalidatedEnd < unvalidatedStart\n      ? [unvalidatedEnd, unvalidatedStart]\n      : [unvalidatedStart, unvalidatedEnd];\n  }, [range]);\n\n  const timelineJobs: TimelineJob[] = jobs.map((job) => ({\n    key: makeJobKey(job.repoAddress, job.job.name),\n    jobName: job.job.name,\n    path: workspacePipelinePath({\n      repoName: job.repoAddress.name,\n      repoLocation: job.repoAddress.location,\n      pipelineName: job.job.name,\n      isJob: job.job.isJob,\n    }),\n    runs: [],\n  }));\n\n  return (\n    <>\n      <Box\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n        margin={{top: 16}}\n        padding={{bottom: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          <Icon name=\"waterfall_chart\" color={Colors.Gray900} size={20} />\n          <Heading>Timeline</Heading>\n        </Box>\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {shown ? (\n            <ButtonGroup<HourWindow>\n              activeItems={new Set([hourWindow])}\n              buttons={[\n                {id: '1', label: '1hr'},\n                {id: '6', label: '6hr'},\n                {id: '12', label: '12hr'},\n                {id: '24', label: '24hr'},\n              ]}\n              onClick={(hrWindow: HourWindow) => setHourWindow(hrWindow)}\n            />\n          ) : null}\n          <Button\n            icon={<Icon name={shown ? 'unfold_less' : 'unfold_more'} />}\n            onClick={() => setShown((current) => !current)}\n          >\n            {shown ? 'Hide' : 'Show'}\n          </Button>\n        </Box>\n      </Box>\n      {shown ? (\n        <RunTimelineContainer range={[start, end]} jobs={timelineJobs} hourWindow={hourWindow} />\n      ) : null}\n    </>\n  );\n};\n\ninterface JobSectionProps {\n  icon: React.ReactNode;\n  heading: React.ReactNode;\n  jobs: JobItemWithRuns[];\n}\n\nconst JobSection = (props: JobSectionProps) => {\n  const {icon, heading, jobs} = props;\n  return (\n    <>\n      <Box\n        flex={{direction: 'row', gap: 8, alignItems: 'center'}}\n        margin={{top: 16}}\n        padding={{vertical: 16, horizontal: 24}}\n      >\n        {icon}\n        <Heading>{heading}</Heading>\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th style={{width: '40%'}}>Job</th>\n            <th style={{width: '25%'}}>Trigger</th>\n            <th style={{width: '35%'}}>Latest run</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {jobs.map(({job, repoAddress, runs, schedules, sensors}) => {\n            const jobKey = makeJobKey(repoAddress, job.name);\n            const repoAddressString = repoAddressAsString(repoAddress);\n            return (\n              <tr key={jobKey}>\n                <td>\n                  <Box\n                    flex={{\n                      direction: 'row',\n                      justifyContent: 'space-between',\n                      alignItems: 'flex-start',\n                    }}\n                  >\n                    <Box flex={{direction: 'column', gap: 4}}>\n                      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                        <PipelineReference\n                          pipelineName={job.name}\n                          isJob={job.isJob}\n                          pipelineHrefContext={repoAddress}\n                        />\n                        {!job.isJob ? <LegacyPipelineTag /> : null}\n                      </Box>\n                      <Body color={Colors.Gray400} style={{fontFamily: FontFamily.monospace}}>\n                        {repoAddressString}\n                      </Body>\n                    </Box>\n                    {runs ? (\n                      <Box margin={{top: 4}}>\n                        <RunStatusPezList fade runs={runs} repoAddress={repoAddressString} />\n                      </Box>\n                    ) : null}\n                  </Box>\n                </td>\n                <td>\n                  {schedules.length || sensors.length ? (\n                    <Box flex={{direction: 'column', alignItems: 'flex-start', gap: 8}}>\n                      <ScheduleOrSensorTag\n                        schedules={schedules}\n                        sensors={sensors}\n                        repoAddress={repoAddress}\n                      />\n                      {schedules.length ? <NextTick schedules={schedules} /> : null}\n                    </Box>\n                  ) : (\n                    <div style={{color: Colors.Gray500}}>None</div>\n                  )}\n                </td>\n                <td>\n                  <LastRunSummary run={job.runs[0]} />\n                </td>\n                <td>\n                  <JobMenu job={job} repoAddress={repoAddress} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst OVERVIEW_JOB_FRAGMENT = gql`\n  fragment OverviewJobFragment on Pipeline {\n    id\n    name\n    isJob\n    runs(limit: 1) {\n      id\n      mode\n      runId\n      status\n      ...RunTimeFragment\n    }\n    modes {\n      id\n      name\n    }\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst INSTANCE_OVERVIEW_INITIAL_QUERY = gql`\n  query InstanceOverviewInitialQuery {\n    workspaceOrError {\n      ... on Workspace {\n        locationEntries {\n          id\n          name\n          loadStatus\n          displayMetadata {\n            key\n            value\n          }\n          locationOrLoadError {\n            ... on RepositoryLocation {\n              id\n              name\n              repositories {\n                id\n                name\n                pipelines {\n                  id\n                  ...OverviewJobFragment\n                }\n                ...RepositoryInfoFragment\n                schedules {\n                  id\n                  name\n                  pipelineName\n                  scheduleState {\n                    id\n                    status\n                  }\n                  ...ScheduleFutureTicksFragment\n                  ...ScheduleSwitchFragment\n                }\n                sensors {\n                  id\n                  name\n                  targets {\n                    pipelineName\n                  }\n                  sensorState {\n                    id\n                    status\n                  }\n                  ...SensorSwitchFragment\n                }\n              }\n            }\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${OVERVIEW_JOB_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FUTURE_TICKS_FRAGMENT}\n  ${SCHEDULE_SWITCH_FRAGMENT}\n  ${SENSOR_SWITCH_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst LAST_TEN_RUNS_PER_JOB_QUERY = gql`\n  query LastTenRunsPerJobQuery {\n    workspaceOrError {\n      ... on Workspace {\n        locationEntries {\n          id\n          locationOrLoadError {\n            ... on RepositoryLocation {\n              id\n              name\n              repositories {\n                id\n                name\n                pipelines {\n                  id\n                  name\n                  isJob\n                  runs(limit: 10) {\n                    id\n                    ...RunTimeFragment\n                  }\n                }\n              }\n            }\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Group, NonIdealState, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {UnloadableSchedules} from '../instigation/Unloadable';\nimport {SCHEDULE_FRAGMENT} from '../schedules/ScheduleUtils';\nimport {SchedulerInfo} from '../schedules/SchedulerInfo';\nimport {SchedulesTable} from '../schedules/SchedulesTable';\nimport {InstigationType} from '../types/globalTypes';\nimport {Loading} from '../ui/Loading';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {buildRepoPath, buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceSchedulesQuery} from './types/InstanceSchedulesQuery';\n\nexport const InstanceSchedules = React.memo(() => {\n  useTrackPageView();\n\n  const queryData = useQuery<InstanceSchedulesQuery>(INSTANCE_SCHEDULES_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>Instance status</Heading>}\n        tabs={<InstanceTabs tab=\"schedules\" refreshState={refreshState} />}\n      />\n      <Loading queryResult={queryData} allowStaleData={true}>\n        {(data) => <AllSchedules data={data} />}\n      </Loading>\n    </>\n  );\n});\n\nconst AllSchedules: React.FC<{data: InstanceSchedulesQuery}> = ({data}) => {\n  const {instance, repositoriesOrError, unloadableInstigationStatesOrError} = data;\n\n  if (repositoriesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={repositoriesOrError} />;\n  }\n  if (unloadableInstigationStatesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={unloadableInstigationStatesOrError} />;\n  }\n\n  const unloadable = unloadableInstigationStatesOrError.results;\n  const withSchedules = repositoriesOrError.nodes.filter(\n    (repository) => repository.schedules.length,\n  );\n\n  const loadedSchedulesSection = withSchedules.length ? (\n    <>\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SchedulerInfo daemonHealth={instance.daemonHealth} />\n      </Box>\n      {withSchedules.map((repository) => (\n        <React.Fragment key={repository.name}>\n          <Box\n            padding={{vertical: 16, horizontal: 24}}\n            border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          >\n            <Subheading>{`${buildRepoPath(repository.name, repository.location.name)}`}</Subheading>\n          </Box>\n          <Box padding={{bottom: 16}}>\n            <SchedulesTable\n              repoAddress={buildRepoAddress(repository.name, repository.location.name)}\n              schedules={repository.schedules}\n            />\n          </Box>\n        </React.Fragment>\n      ))}\n    </>\n  ) : null;\n\n  const unloadableSchedules = unloadable.filter(\n    (state) => state.instigationType === InstigationType.SCHEDULE,\n  );\n\n  const unloadableSchedulesSection = unloadableSchedules.length ? (\n    <UnloadableSchedules scheduleStates={unloadableSchedules} />\n  ) : null;\n\n  if (!loadedSchedulesSection && !unloadableSchedulesSection) {\n    return (\n      <Box margin={{top: 32}}>\n        <NonIdealState\n          icon=\"schedule\"\n          title=\"No schedules found\"\n          description={\n            <div>\n              This instance does not have any schedules defined. Visit the{' '}\n              <a\n                href=\"https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                scheduler documentation\n              </a>{' '}\n              for more information about scheduling runs in Dagster.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Group direction=\"column\" spacing={32}>\n      {loadedSchedulesSection}\n      {unloadableSchedulesSection}\n    </Group>\n  );\n};\n\nconst INSTANCE_SCHEDULES_QUERY = gql`\n  query InstanceSchedulesQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          ...RepositoryInfoFragment\n          schedules {\n            id\n            ...ScheduleFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n    unloadableInstigationStatesOrError {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, NonIdealState, PageHeader, Heading, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {UnloadableSensors} from '../instigation/Unloadable';\nimport {SENSOR_FRAGMENT} from '../sensors/SensorFragment';\nimport {SensorInfo} from '../sensors/SensorInfo';\nimport {SensorsTable} from '../sensors/SensorsTable';\nimport {InstigationType} from '../types/globalTypes';\nimport {Loading} from '../ui/Loading';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\nimport {buildRepoPath, buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceSensorsQuery} from './types/InstanceSensorsQuery';\n\nexport const InstanceSensors = React.memo(() => {\n  useTrackPageView();\n\n  const queryData = useQuery<InstanceSensorsQuery>(INSTANCE_SENSORS_QUERY, {\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>Instance status</Heading>}\n        tabs={<InstanceTabs tab=\"sensors\" refreshState={refreshState} />}\n      />\n      <Loading queryResult={queryData} allowStaleData={true}>\n        {(data) => <AllSensors data={data} />}\n      </Loading>\n    </>\n  );\n});\n\nconst AllSensors: React.FC<{data: InstanceSensorsQuery}> = ({data}) => {\n  const {instance, repositoriesOrError, unloadableInstigationStatesOrError} = data;\n\n  if (repositoriesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={repositoriesOrError} />;\n  }\n  if (unloadableInstigationStatesOrError.__typename === 'PythonError') {\n    return <PythonErrorInfo error={unloadableInstigationStatesOrError} />;\n  }\n\n  const unloadable = unloadableInstigationStatesOrError.results;\n  const withSensors = repositoriesOrError.nodes.filter((repository) => repository.sensors.length);\n\n  const sensorDefinitionsSection = withSensors.length ? (\n    <>\n      <Box padding={{horizontal: 24, vertical: 16}}>\n        <SensorInfo daemonHealth={instance.daemonHealth} />\n      </Box>\n      {withSensors.map((repository) =>\n        repository.sensors.length ? (\n          <React.Fragment key={repository.name}>\n            <Box\n              padding={{horizontal: 24, vertical: 16}}\n              border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n            >\n              <Subheading>{`${buildRepoPath(\n                repository.name,\n                repository.location.name,\n              )}`}</Subheading>\n            </Box>\n            <Box padding={{bottom: 16}}>\n              <SensorsTable\n                repoAddress={buildRepoAddress(repository.name, repository.location.name)}\n                sensors={repository.sensors}\n              />\n            </Box>\n          </React.Fragment>\n        ) : null,\n      )}\n    </>\n  ) : null;\n\n  const unloadableSensors = unloadable.filter(\n    (state) => state.instigationType === InstigationType.SENSOR,\n  );\n  const unloadableSensorsSection = unloadableSensors.length ? (\n    <UnloadableSensors sensorStates={unloadableSensors} />\n  ) : null;\n\n  if (!sensorDefinitionsSection && !unloadableSensorsSection) {\n    return (\n      <Box padding={{vertical: 64}} border={{side: 'top', width: 1, color: Colors.KeylineGray}}>\n        <NonIdealState\n          icon=\"sensors\"\n          title=\"No sensors found\"\n          description={\n            <p>\n              This instance does not have any sensors defined. Visit the{' '}\n              <a\n                href=\"https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                sensor documentation\n              </a>{' '}\n              for more information about setting up sensors in Dagster.\n            </p>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      {sensorDefinitionsSection}\n      {unloadableSensorsSection}\n    </>\n  );\n};\n\nconst INSTANCE_SENSORS_QUERY = gql`\n  query InstanceSensorsQuery {\n    instance {\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      __typename\n      ... on RepositoryConnection {\n        nodes {\n          id\n          name\n          ...RepositoryInfoFragment\n          sensors {\n            id\n            ...SensorFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n    unloadableInstigationStatesOrError {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${SENSOR_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {Page} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport {InstanceBackfills} from './InstanceBackfills';\nimport {InstanceConfig} from './InstanceConfig';\nimport {InstanceHealthPage} from './InstanceHealthPage';\nimport {InstanceOverviewPage} from './InstanceOverviewPage';\nimport {InstanceSchedules} from './InstanceSchedules';\nimport {InstanceSensors} from './InstanceSensors';\n\nexport const InstanceStatusRoot = () => (\n  <Page>\n    <Switch>\n      <Route path=\"/instance/overview\">\n        <InstanceOverviewPage />\n      </Route>\n      <Route path=\"/instance/health\">\n        <InstanceHealthPage />\n      </Route>\n      <Route path=\"/instance/schedules\">\n        <InstanceSchedules />\n      </Route>\n      <Route path=\"/instance/sensors\">\n        <InstanceSensors />\n      </Route>\n      <Route path=\"/instance/backfills\">\n        <InstanceBackfills />\n      </Route>\n      <Route path=\"/instance/config\">\n        <InstanceConfig />\n      </Route>\n      <Route path=\"*\" render={() => <Redirect to=\"/instance\" />} />\n    </Switch>\n  </Page>\n);\n","import {MainContent} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, Route, Switch, useLocation} from 'react-router-dom';\n\nimport {AssetsCatalogRoot} from '../assets/AssetsCatalogRoot';\nimport {AssetsGroupsGlobalGraphRoot} from '../assets/AssetsGroupsGlobalGraphRoot';\nimport {RunRoot} from '../runs/RunRoot';\nimport {RunsRoot} from '../runs/RunsRoot';\nimport {SnapshotRoot} from '../snapshots/SnapshotRoot';\n\nimport {InstanceStatusRoot} from './InstanceStatusRoot';\n\nexport const InstanceRoot = () => {\n  const {pathname} = useLocation();\n  const main = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    main.current?.scrollTo({top: 0});\n  }, [pathname]);\n\n  return (\n    <MainContent ref={main}>\n      <Switch>\n        <Route path=\"/instance/asset-groups(/?.*)\">\n          <AssetsGroupsGlobalGraphRoot />\n        </Route>\n        <Route path=\"/instance/assets(/?.*)\">\n          <AssetsCatalogRoot />\n        </Route>\n        <Route path=\"/instance/runs\" exact>\n          <RunsRoot />\n        </Route>\n        <Route path=\"/instance/runs/:runId\" exact>\n          <RunRoot />\n        </Route>\n        <Route path=\"/instance/snapshots/:pipelinePath/:tab?\">\n          <SnapshotRoot />\n        </Route>\n        <Route path=\"/instance/:tab\">\n          <InstanceStatusRoot />\n        </Route>\n        <Route path=\"*\" render={() => <Redirect to=\"/instance/overview\" />} />\n      </Switch>\n    </MainContent>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceRoot;\n","\"use strict\";\n\n// This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANSI_COLORS = [[{ color: \"0, 0, 0\", \"class\": \"ansi-black\" }, { color: \"187, 0, 0\", \"class\": \"ansi-red\" }, { color: \"0, 187, 0\", \"class\": \"ansi-green\" }, { color: \"187, 187, 0\", \"class\": \"ansi-yellow\" }, { color: \"0, 0, 187\", \"class\": \"ansi-blue\" }, { color: \"187, 0, 187\", \"class\": \"ansi-magenta\" }, { color: \"0, 187, 187\", \"class\": \"ansi-cyan\" }, { color: \"255,255,255\", \"class\": \"ansi-white\" }], [{ color: \"85, 85, 85\", \"class\": \"ansi-bright-black\" }, { color: \"255, 85, 85\", \"class\": \"ansi-bright-red\" }, { color: \"0, 255, 0\", \"class\": \"ansi-bright-green\" }, { color: \"255, 255, 85\", \"class\": \"ansi-bright-yellow\" }, { color: \"85, 85, 255\", \"class\": \"ansi-bright-blue\" }, { color: \"255, 85, 255\", \"class\": \"ansi-bright-magenta\" }, { color: \"85, 255, 255\", \"class\": \"ansi-bright-cyan\" }, { color: \"255, 255, 255\", \"class\": \"ansi-bright-white\" }]];\n\nvar Anser = function () {\n    _createClass(Anser, null, [{\n        key: \"escapeForHtml\",\n\n\n        /**\n         * Anser.escapeForHtml\n         * Escape the input HTML.\n         *\n         * This does the minimum escaping of text to make it compliant with HTML.\n         * In particular, the '&','<', and '>' characters are escaped. This should\n         * be run prior to `ansiToHtml`.\n         *\n         * @name Anser.escapeForHtml\n         * @function\n         * @param {String} txt The input text (containing the ANSI snippets).\n         * @returns {String} The escaped html.\n         */\n        value: function escapeForHtml(txt) {\n            return new Anser().escapeForHtml(txt);\n        }\n\n        /**\n         * Anser.linkify\n         * Adds the links in the HTML.\n         *\n         * This replaces any links in the text with anchor tags that display the\n         * link. The links should have at least one whitespace character\n         * surrounding it. Also, you should apply this after you have run\n         * `ansiToHtml` on the text.\n         *\n         * @name Anser.linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML containing the <a> tags (unescaped).\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return new Anser().linkify(txt);\n        }\n\n        /**\n         * Anser.ansiToHtml\n         * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n         * content.\n         *\n         * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n         * that can be represented in HTML.\n         * For example, cursor movement codes are ignored and hidden from output.\n         * The default style uses colors that are very close to the prescribed\n         * standard. The standard assumes that the text will have a black\n         * background. These colors are set as inline styles on the SPAN tags.\n         *\n         * Another option is to set `use_classes: true` in the options argument.\n         * This will instead set classes on the spans so the colors can be set via\n         * CSS. The class names used are of the format `ansi-*-fg/bg` and\n         * `ansi-bright-*-fg/bg` where `*` is the color name,\n         * i.e black/red/green/yellow/blue/magenta/cyan/white.\n         *\n         * @name Anser.ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return new Anser().ansiToHtml(txt, options);\n        }\n\n        /**\n         * Anser.ansiToJson\n         * Converts ANSI input into JSON output.\n         *\n         * @name Anser.ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            return new Anser().ansiToJson(txt, options);\n        }\n\n        /**\n         * Anser.ansiToText\n         * Converts ANSI input into text output.\n         *\n         * @name Anser.ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return new Anser().ansiToText(txt);\n        }\n\n        /**\n         * Anser\n         * The `Anser` class.\n         *\n         * @name Anser\n         * @function\n         * @returns {Anser}\n         */\n\n    }]);\n\n    function Anser() {\n        _classCallCheck(this, Anser);\n\n        this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n        this.bright = 0;\n    }\n\n    /**\n     * setupPalette\n     * Sets up the palette.\n     *\n     * @name setupPalette\n     * @function\n     */\n\n\n    _createClass(Anser, [{\n        key: \"setupPalette\",\n        value: function setupPalette() {\n            this.PALETTE_COLORS = [];\n\n            // Index 0..15 : System color\n            for (var i = 0; i < 2; ++i) {\n                for (var j = 0; j < 8; ++j) {\n                    this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n                }\n            }\n\n            // Index 16..231 : RGB 6x6x6\n            // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n            var levels = [0, 95, 135, 175, 215, 255];\n            var format = function format(r, g, b) {\n                return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n            };\n            var r = void 0,\n                g = void 0,\n                b = void 0;\n            for (var _r = 0; _r < 6; ++_r) {\n                for (var _g = 0; _g < 6; ++_g) {\n                    for (var _b = 0; _b < 6; ++_b) {\n                        this.PALETTE_COLORS.push(format(_r, _g, _b));\n                    }\n                }\n            }\n\n            // Index 232..255 : Grayscale\n            var level = 8;\n            for (var _i = 0; _i < 24; ++_i, level += 10) {\n                this.PALETTE_COLORS.push(format(level, level, level));\n            }\n        }\n\n        /**\n         * escapeForHtml\n         * Escapes the input text.\n         *\n         * @name escapeForHtml\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The escpaed HTML output.\n         */\n\n    }, {\n        key: \"escapeForHtml\",\n        value: function escapeForHtml(txt) {\n            return txt.replace(/[&<>]/gm, function (str) {\n                return str == \"&\" ? \"&amp;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n            });\n        }\n\n        /**\n         * linkify\n         * Adds HTML link elements.\n         *\n         * @name linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML output containing link elements.\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n                return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n            });\n        }\n\n        /**\n         * ansiToHtml\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToJson\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The JSON output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            options = options || {};\n            options.json = true;\n            options.clearLine = false;\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToText\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return this.process(txt, {}, false);\n        }\n\n        /**\n         * process\n         * Processes the input.\n         *\n         * @name process\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options An object passed to `processChunk` method, extended with:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup\n         */\n\n    }, {\n        key: \"process\",\n        value: function process(txt, options, markup) {\n            var _this = this;\n\n            var self = this;\n            var raw_text_chunks = txt.split(/\\033\\[/);\n            var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n            if (options === undefined || options === null) {\n                options = {};\n            }\n            options.clearLine = /\\r/.test(txt); // check for Carriage Return\n            var color_chunks = raw_text_chunks.map(function (chunk) {\n                return _this.processChunk(chunk, options, markup);\n            });\n\n            if (options && options.json) {\n                var first = self.processChunkJson(\"\");\n                first.content = first_chunk;\n                first.clearLine = options.clearLine;\n                color_chunks.unshift(first);\n                if (options.remove_empty) {\n                    color_chunks = color_chunks.filter(function (c) {\n                        return !c.isEmpty();\n                    });\n                }\n                return color_chunks;\n            } else {\n                color_chunks.unshift(first_chunk);\n            }\n\n            return color_chunks.join(\"\");\n        }\n\n        /**\n         * processChunkJson\n         * Processes the current chunk into json output.\n         *\n         * @name processChunkJson\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object} The result object:\n         *\n         *  - `content` (String): The text.\n         *  - `fg` (String|null): The foreground color.\n         *  - `bg` (String|null): The background color.\n         *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n         *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n         *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n         *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n         *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n         *\n         */\n\n    }, {\n        key: \"processChunkJson\",\n        value: function processChunkJson(text, options, markup) {\n\n            // Are we using classes or styles?\n            options = typeof options == \"undefined\" ? {} : options;\n            var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n            var key = options.key = use_classes ? \"class\" : \"color\";\n\n            var result = {\n                content: text,\n                fg: null,\n                bg: null,\n                fg_truecolor: null,\n                bg_truecolor: null,\n                clearLine: options.clearLine,\n                decoration: null,\n                was_processed: false,\n                isEmpty: function isEmpty() {\n                    return !result.content;\n                }\n            };\n\n            // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n            //\n            // This regex matches four groups within a chunk.\n            //\n            // The first and third groups match code type.\n            // We supported only SGR command. It has empty first group and \"m\" in third.\n            //\n            // The second group matches all of the number+semicolon command sequences\n            // before the \"m\" (or other trailing) character.\n            // These are the graphics or SGR commands.\n            //\n            // The last group is the text (including newlines) that is colored by\n            // the other group\"s commands.\n            var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n\n            if (!matches) return result;\n\n            var orig_txt = result.content = matches[4];\n            var nums = matches[2].split(\";\");\n\n            // We currently support only \"SGR\" (Select Graphic Rendition)\n            // Simply ignore if not a SGR command.\n            if (matches[1] !== \"\" || matches[3] !== \"m\") {\n                return result;\n            }\n\n            if (!markup) {\n                return result;\n            }\n\n            var self = this;\n\n            self.decoration = null;\n\n            while (nums.length > 0) {\n                var num_str = nums.shift();\n                var num = parseInt(num_str);\n\n                if (isNaN(num) || num === 0) {\n                    self.fg = self.bg = self.decoration = null;\n                } else if (num === 1) {\n                    self.decoration = \"bold\";\n                } else if (num === 2) {\n                    self.decoration = \"dim\";\n                    // Enable code 2 to get string\n                } else if (num == 3) {\n                    self.decoration = \"italic\";\n                } else if (num == 4) {\n                    self.decoration = \"underline\";\n                } else if (num == 5) {\n                    self.decoration = \"blink\";\n                } else if (num === 7) {\n                    self.decoration = \"reverse\";\n                } else if (num === 8) {\n                    self.decoration = \"hidden\";\n                    // Enable code 9 to get strikethrough\n                } else if (num === 9) {\n                    self.decoration = \"strikethrough\";\n                } else if (num == 39) {\n                    self.fg = null;\n                } else if (num == 49) {\n                    self.bg = null;\n                    // Foreground color\n                } else if (num >= 30 && num < 38) {\n                    self.fg = ANSI_COLORS[0][num % 10][key];\n                    // Foreground bright color\n                } else if (num >= 90 && num < 98) {\n                    self.fg = ANSI_COLORS[1][num % 10][key];\n                    // Background color\n                } else if (num >= 40 && num < 48) {\n                    self.bg = ANSI_COLORS[0][num % 10][key];\n                    // Background bright color\n                } else if (num >= 100 && num < 108) {\n                    self.bg = ANSI_COLORS[1][num % 10][key];\n                } else if (num === 38 || num === 48) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = num === 38;\n                    if (nums.length >= 1) {\n                        var mode = nums.shift();\n                        if (mode === \"5\" && nums.length >= 1) {\n                            // palette color\n                            var palette_index = parseInt(nums.shift());\n                            if (palette_index >= 0 && palette_index <= 255) {\n                                if (!use_classes) {\n                                    if (!this.PALETTE_COLORS) {\n                                        self.setupPalette();\n                                    }\n                                    if (is_foreground) {\n                                        self.fg = this.PALETTE_COLORS[palette_index];\n                                    } else {\n                                        self.bg = this.PALETTE_COLORS[palette_index];\n                                    }\n                                } else {\n                                    var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n                                    if (is_foreground) {\n                                        self.fg = klass;\n                                    } else {\n                                        self.bg = klass;\n                                    }\n                                }\n                            }\n                        } else if (mode === \"2\" && nums.length >= 3) {\n                            // true color\n                            var r = parseInt(nums.shift());\n                            var g = parseInt(nums.shift());\n                            var b = parseInt(nums.shift());\n                            if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                                var color = r + \", \" + g + \", \" + b;\n                                if (!use_classes) {\n                                    if (is_foreground) {\n                                        self.fg = color;\n                                    } else {\n                                        self.bg = color;\n                                    }\n                                } else {\n                                    if (is_foreground) {\n                                        self.fg = \"ansi-truecolor\";\n                                        self.fg_truecolor = color;\n                                    } else {\n                                        self.bg = \"ansi-truecolor\";\n                                        self.bg_truecolor = color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (self.fg === null && self.bg === null && self.decoration === null) {\n                return result;\n            } else {\n                var styles = [];\n                var classes = [];\n                var data = {};\n\n                result.fg = self.fg;\n                result.bg = self.bg;\n                result.fg_truecolor = self.fg_truecolor;\n                result.bg_truecolor = self.bg_truecolor;\n                result.decoration = self.decoration;\n                result.was_processed = true;\n\n                return result;\n            }\n        }\n\n        /**\n         * processChunk\n         * Processes the current chunk of text.\n         *\n         * @name processChunk\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n         */\n\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(text, options, markup) {\n            var _this2 = this;\n\n            var self = this;\n            options = options || {};\n            var jsonChunk = this.processChunkJson(text, options, markup);\n\n            if (options.json) {\n                return jsonChunk;\n            }\n            if (jsonChunk.isEmpty()) {\n                return \"\";\n            }\n            if (!jsonChunk.was_processed) {\n                return jsonChunk.content;\n            }\n\n            var use_classes = options.use_classes;\n\n            var styles = [];\n            var classes = [];\n            var data = {};\n            var render_data = function render_data(data) {\n                var fragments = [];\n                var key = void 0;\n                for (key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n                    }\n                }\n                return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n            };\n\n            if (jsonChunk.fg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.fg + \"-fg\");\n                    if (jsonChunk.fg_truecolor !== null) {\n                        data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n                        jsonChunk.fg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n                }\n            }\n\n            if (jsonChunk.bg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.bg + \"-bg\");\n                    if (jsonChunk.bg_truecolor !== null) {\n                        data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n                        jsonChunk.bg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n                }\n            }\n\n            if (jsonChunk.decoration) {\n                if (use_classes) {\n                    classes.push(\"ansi-\" + jsonChunk.decoration);\n                } else if (jsonChunk.decoration === \"bold\") {\n                    styles.push(\"font-weight:bold\");\n                } else if (jsonChunk.decoration === \"dim\") {\n                    styles.push(\"opacity:0.5\");\n                } else if (jsonChunk.decoration === \"italic\") {\n                    styles.push(\"font-style:italic\");\n                    // underline and blink are treated bellow\n                } else if (jsonChunk.decoration === \"reverse\") {\n                    styles.push(\"filter:invert(100%)\");\n                } else if (jsonChunk.decoration === \"hidden\") {\n                    styles.push(\"visibility:hidden\");\n                } else if (jsonChunk.decoration === \"strikethrough\") {\n                    styles.push(\"text-decoration:line-through\");\n                } else {\n                    styles.push(\"text-decoration:\" + jsonChunk.decoration);\n                }\n            }\n\n            if (use_classes) {\n                return \"<span class=\\\"\" + classes.join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            } else {\n                return \"<span style=\\\"\" + styles.join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            }\n        }\n    }]);\n\n    return Anser;\n}();\n\n;\n\nmodule.exports = Anser;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst anser_1 = __importDefault(require(\"anser\"));\nconst escape_carriage_1 = require(\"escape-carriage\");\nconst React = __importStar(require(\"react\"));\nconst LINK_REGEX = /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/;\n/**\n * Converts ANSI strings into JSON output.\n * @name ansiToJSON\n * @function\n * @param {String} input The input string.\n * @return {Array} The parsed input.\n */\nfunction ansiToJSON(input, use_classes = false) {\n    input = escape_carriage_1.escapeCarriageReturn(input);\n    return anser_1.default.ansiToJson(input, {\n        json: true,\n        remove_empty: true,\n        use_classes\n    });\n}\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry}.\n * @return {String} class name(s)\n */\nfunction createClass(bundle) {\n    let classNames = \"\";\n    if (!bundle.bg && !bundle.fg) {\n        return null;\n    }\n    if (bundle.bg) {\n        classNames += bundle.bg + \" \";\n    }\n    if (bundle.fg) {\n        classNames += bundle.fg + \" \";\n    }\n    classNames = classNames.substring(0, classNames.length - 1);\n    return classNames;\n}\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry}.\n * @return {Object} returns the style object\n */\nfunction createStyle(bundle) {\n    const style = {};\n    if (bundle.bg) {\n        style.backgroundColor = `rgb(${bundle.bg})`;\n    }\n    if (bundle.fg) {\n        style.color = `rgb(${bundle.fg})`;\n    }\n    return style;\n}\n/**\n * Converts an Anser bundle into a React Node.\n * @param linkify whether links should be converting into clickable anchor tags.\n * @param useClasses should render the span with a class instead of style.\n * @param bundle Anser output.\n */\nfunction convertBundleIntoReact(linkify, useClasses, bundle, key) {\n    const style = useClasses ? null : createStyle(bundle);\n    const className = useClasses ? createClass(bundle) : null;\n    if (!linkify) {\n        return React.createElement(\"span\", { style, key, className }, bundle.content);\n    }\n    const words = bundle.content.split(/(\\s+)/).reduce((words, word, index) => {\n        // If this is a separator, re-add the space removed from split.\n        if (index % 2 === 1) {\n            words.push(word);\n            return words;\n        }\n        // If  this isn't a link, just return the word as-is.\n        if (!LINK_REGEX.test(word)) {\n            words.push(word);\n            return words;\n        }\n        words.push(React.createElement(\"a\", {\n            key: index,\n            href: word,\n            target: \"_blank\"\n        }, `${word}`));\n        return words;\n    }, []);\n    return React.createElement(\"span\", { style, key, className }, words);\n}\nfunction Ansi(props) {\n    const { className, useClasses, children, linkify } = props;\n    return React.createElement(\"code\", { className }, ansiToJSON(children, !!useClasses).map(convertBundleIntoReact.bind(null, linkify, !!useClasses)));\n}\nexports.default = Ansi;\n","/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r[^$]/.test(txt)) {\n    var base = /^(.*)\\r+/m.exec(txt)[1];\n    var insert = /\\r+(.*)$/m.exec(txt)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, \"\\r\").replace(/^.*\\r/m, insert);\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n"],"names":["AssetDefinedInMultipleReposNotice","assetId","loadedFromRepo","data","useQuery","ASSET_ID_SCAN_QUERY","otherReposWithAsset","repositoriesOrError","__typename","nodes","filter","r","name","location","assetNodes","some","a","id","opNames","length","Box","padding","vertical","left","right","border","side","width","color","Colors","Alert","intent","title","buildRepoPath","map","o","join","gql","AssetNodeList","items","liveDataByNode","history","useHistory","Container","flex","alignItems","justifyContent","Spinner","purpose","gap","horizontal","asset","AssetNodeWrapper","onClick","e","stopPropagation","push","assetDetailsPathForKey","assetKey","view","AssetNode","definition","inAssetCatalog","selected","liveData","toGraphId","styled","AssetNodeDefinition","assetNode","upstream","downstream","partitionHealthData","usePartitionHealthData","metadataForAssetNode","assetMetadata","assetType","assetConfigSchema","configSchemaForAssetNode","repoAddress","buildRepoAddress","repository","direction","style","minWidth","DefinitionLocation","flexBasis","flexGrow","minHeight","Description","description","maxHeight","partitionDefinition","top","bottom","PartitionHealthSummary","to","Icon","ConfigTypeSchema","type","typesInScope","recursiveConfigTypes","DagsterType","AssetMetadata","wrap","lineHeight","jobNames","jobName","isHiddenAssetGroupJob","PipelineReference","isJob","showIcon","pipelineName","pipelineHrefContext","OpNamesDisplay","isSourceAsset","marginTop","props","graphName","opCount","firstOp","displayNameForAssetKey","opPath","workspacePathFromAddress","size","ASSET_NODE_DEFINITION_FRAGMENT","ASSET_NODE_CONFIG_FRAGMENT","ASSET_NODE_FRAGMENT","ASSET_NODE_OP_METADATA_FRAGMENT","AssetNodeInstigatorTag","schedules","flatMap","jobs","j","sensors","ScheduleOrSensorTag","showSwitch","ASSET_NODE_INSTIGATORS_FRAGMENT","SCHEDULE_SWITCH_FRAGMENT","SENSOR_SWITCH_FRAGMENT","LINEAGE_GRAPH_ZOOM_LEVEL","AssetNodeLineageGraph","assetGraphData","params","assetGraphId","React","highlighted","setHighlighted","useAssetLayout","layout","loading","viewportEl","current","lastZoomLevel","Number","getJSONForKey","autocenter","focus","SVGViewport","ref","undefined","interactor","graphWidth","graphHeight","height","onDoubleClick","maxZoom","maxAutocenterZoom","scale","SVGContainer","SVGSaveZoomLevel","edges","Object","values","bounds","graphNode","path","JSON","parse","key","overflow","onMouseEnter","onMouseLeave","lineageScope","zoomToSVGBox","MINIMAL_SCALE","ForeignNode","window","localStorage","setItem","stringify","err","AssetNodeLineage","setParams","graphQueryItems","requestedDepth","maxDistances","calculateGraphDistances","maxDepth","Math","max","ButtonGroup","activeItems","Set","buttons","label","icon","lineageDepth","LineageDepthControl","value","min","onChange","depth","Checkbox","format","checked","lineageShowSecondaryEdges","LaunchAssetExecutionButton","assetKeys","n","context","Button","disabled","text","setText","commitText","next","TextInput","inputMode","marginLeft","textAlign","borderRadius","boxShadow","target","onKeyDown","onBlur","AssetView","useQueryPersistedState","queryResult","ASSET_QUERY","variables","notifyOnNetworkStatusChange","assetOrError","previousData","lastMaterializedAt","assetMaterializations","timestamp","viewingMostRecent","asOf","token","tokenForAssetKey","defaultDepth","depthStr","repeat","useAssetGraphData","hideEdgesToNodesOutsideQuery","graphAssetKeys","graphData","graphId","useNeighborsFromGraph","useLiveDataForAssetKeys","liveResult","refreshState","useMergedRefresh","useQueryRefreshAtInterval","FIFTEEN_SECONDS","useDidLaunchEvent","refetch","isDefinitionLoaded","isUpstreamChanged","computeStatus","AssetComputeStatus","overflowY","AssetPageHeader","tags","Tag","RepositoryLink","groupName","BaseTag","fillColor","textColor","interactive","tabs","Tabs","selectedTabId","margin","QueryRefresh","HistoricalViewAlert","time","hasDefinition","AssetNoDefinitionState","AssetEvents","assetLastMaterializedAt","assetHasDefinedPartitions","paramsTimeWindowOnly","NonIdealState","LogType","fontWeight","Timestamp","ms","timeFormat","showSeconds","showTimezone","ButtonLink","underline","AssetsCatalogRoot","useTrackPageView","useParams","currentPath","split","x","decodeURIComponent","ASSETS_CATALOG_ROOT_QUERY","skip","useDocumentTitle","Page","ReloadAllButton","AssetsCatalogTable","prefixPath","setPrefixPath","RepoFilterButton","WorkspaceContext","allRepos","visibleRepos","toggleVisible","open","setOpen","Dialog","canOutsideClickClose","canEscapeKeyClose","isOpen","onClose","RepoSelector","options","onBrowse","onToggle","rightIcon","__GLOBAL__","AssetsGroupsGlobalGraphRoot","onChangeExplorerPath","mode","explorerPathToString","replace","onNavigateToForeignNode","node","fetchOptions","hideNodesMatching","repo","repositoryLocation","display","flexDirection","paddingBottom","PageHeader","marginBottom","AssetGraphExplorer","fetchOptionFilters","preferAssetRendering","explodeComposites","explorerPath","explorerPathFromString","MAX_STREAMING_LOG_BYTES","ComputeLogContent","timeout","contentContainer","state","showScrollToTop","hideWarning","setState","clearTimeout","scheduleHideWarning","setTimeout","cancelHideWarning","onScrollUp","position","onScrollDown","_position","scrollToTop","this","ScrollToast","ScrollToTop","onMouseOver","onMouseOut","Group","spacing","logData","isLoading","isVisible","downloadUrl","content","isTruncated","TextEncoder","encode","shouldTruncate","nextLine","indexOf","truncated","slice","warning","FileWarning","href","download","FileContainer","renderScrollToTop","FileContent","RelativeContainer","LogContent","isSelected","LoadingContainer","FileFooter","COMPUTE_LOG_CONTENT_FRAGMENT","ScrollContainer","container","lastScroll","onScroll","scrollHeight","scrollTop","offsetHeight","scrollToBottom","addEventListener","_props","_state","shouldScroll","className","outline","tabIndex","ContentContainer","LineNumbers","Content","SolarizedColors","linkify","useClasses","matches","match","count","LineNumberContainer","Array","from","_","i","String","createGlobalStyle","FontFamily","s","merge","b","cursor","reducer","action","stdout","stepKey","log","stderr","initialState","COMPUTE_LOGS_SUBSCRIPTION_FRAGMENT","COMPUTE_LOGS_SUBSCRIPTION","ComputeLogPanel","runId","stepKeys","computeLogKey","ioType","setComputeLogUrl","rootServerURI","AppContext","dispatch","useSubscription","fetchPolicy","ComputeIOType","onSubscriptionData","subscriptionData","computeLogs","useComputeLogs","startsWith","resolveDownloadUrl","ContentWrapper","emptyCounts","DEBUG","INFO","WARNING","ERROR","CRITICAL","EVENT","queuedNodes","queued","ii","clientsideKey","counts","forEach","level","logNodeLevel","hasMore","useLogsProviderWithSubscription","client","useApolloClient","queue","syncPipelineStatusToApolloCache","status","local","readFragment","fragmentName","fragment","PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT","toWrite","RunStatus","canTerminate","writeFragment","throttledSetNodes","throttle","queuedLogs","queuedMessages","messages","lastLog","hasMorePastEvents","nextPipelineStatus","reversed","reverse","pipelineStatusFromMessages","PIPELINE_RUN_LOGS_SUBSCRIPTION","logs","pipelineRunLogs","requestAnimationFrame","allNodes","LogsProviderWithSubscription","children","LogsProviderWithQuery","RUN_LOGS_QUERY","limit","pollInterval","onCompleted","stopPolling","pipelineRunOrError","logsForRun","run","events","startPolling","LogsProvider","WebSocketContext","availability","RunFragments","compactFormatter","memoize","Intl","NumberFormat","navigator","language","compactDisplay","notation","ExecutionStateDot","IStepState","shown","highlight","fuseOptions","threshold","LogsFilterInput","suggestionProviders","inputRef","perProvider","reduce","accum","provider","fuse","Fuse","all","providerKeys","empty","buildSuggestions","queryString","keys","results","search","result","item","toLowerCase","includes","tokens","toLocaleLowerCase","trim","suggestions","onSelectSuggestion","suggestion","lastIndex","lastIndexOf","keep","useSuggestionsForString","numResults","highlightedResult","onInputChange","onSelect","onClear","Popover","Results","ResultItem","isHighlight","FilterInput","placeholder","spellCheck","autoCorrect","onFocus","lastResult","preventDefault","rightElement","ClearButton","C","element","scrollIntoView","block","Item","onMouseDown","LogsToolbar","steps","metadata","onSetFilter","logType","onSetLogType","onSetComputeLogKey","computeLogUrl","structured","tooltip","StructuredLogToolbar","ComputeLogToolbar","resolveState","logCapture","every","logCaptureSteps","extractLogCaptureStepsFromLegacySteps","isValidStepSelection","logKeyText","logKey","captureInfo","pid","Select","itemRenderer","Menu","handleClick","active","modifiers","activeItem","filterable","onItemSelect","Tooltip","placement","DownloadLink","IconWrapper","copyIcon","setCopyIcon","logQueryString","logQuery","setQueryString","copyToClipboard","useCopyToClipboard","selectedStep","find","v","filterText","getRunFilterProviders","segments","NonMatchCheckbox","hideNonMatches","event","currentTarget","LogLevel","num","enabled","levels","FilterLabel","$enabled","LogLabel","LogCount","useJobReExecution","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","launchPipelineReexecution","repoMatch","useRepositoryForRun","pipelineSnapshotId","getReexecutionVariables","repositoryLocationName","repositoryName","handleLaunchResult","preserveQuerystring","behavior","showLaunchError","DELIMITER","levelsToQuery","sort","DefaultQuerystring","DefaultLogLevels","focusedTime","decodeRunPageFilters","qs","logValues","providers","sinceTime","tokenizedValueFromString","toUpperCase","encodeRunPageFilters","logQueryTokenStrings","Run","decode","defaults","logsFilter","setLogsFilter","queryKey","selection","selectionQuery","setSelectionQuery","runStatusFavicon","el","document","querySelector","previousHref","getAttribute","setAttribute","onShowStateDetails","errorNode","showCustomAlert","body","PythonErrorInfo","error","onSetSelectionQuery","query","RunContext","RunMetadataProvider","RunWithData","onSetLogsFilter","onLaunch","splitPanelContainer","queryLogType","setQueryLogType","setComputeLogKey","logTypeFromQuery","stepKeysJSON","runtimeGraph","executionPlan","toGraphQueryItems","selectionStepKeys","filterByQuery","logKeys","selectedLogKey","logsFilterStepKeys","onClickStep","evt","newSelected","index","filterForExactStep","shiftKey","k","splice","SplitPanelContainer","axis","identifier","firstInitialPercent","firstMinSize","first","GanttChart","GanttChartMode","toolbarActions","RunActionButtons","graph","onSetSelection","gantt","second","LogsContainer","lt","LogsScrollingTable","filterStepKeys","filterKey","RunRoot","RUN_ROOT_QUERY","partialRefetch","snapshotID","isThisThingAJob","zIndex","fontFamily","fontSize","RunStatusTag","RunAssetKeyTags","assetKeysForRun","clickableTags","snapshotId","assets","startTime","interactionKind","RunDetails","TimestampDisplay","updateTime","endTime","fontVariantNumeric","formatElapsedTime","Date","now","RunById","useCanSeeConfig","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","AllScheduledTicks","SCHEDULER_INFO_QUERY","Loading","message","SchedulerInfo","daemonHealth","SchedulesNextTicks","repos","INSTANCE_HEALTH_FRAGMENT","REPOSITORY_SCHEDULES_FRAGMENT","PYTHON_ERROR_FRAGMENT","RunsRoot","useQueryPersistedRunFilters","filterTokens","setFilterTokens","runsFilterForSearchTokens","showScheduled","setShowScheduled","canSeeConfig","useCursorPaginatedQuery","nextCursorForResult","runs","pipelineRunsOrError","PAGE_SIZE","getResultArray","queuedFilter","statuses","queuedStatuses","inProgressFilter","inProgressStatuses","RUNS_ROOT_QUERY","pageSize","paginationProps","selectedTab","statusTokens","isEqual","doneStatuses","staticStatusTags","setStatusFilter","tokensMinusStatus","setFilterTokensWithStatus","onAddTag","tokenAsString","tokenToString","enabledFilters","filters","mutableTokens","queuedCount","inProgressCount","QueueDaemonAlert","allowStaleData","renderError","badRequest","networkError","statusCode","RunsFilterInput","StickyTableContainer","$top","RunTable","actionBarComponents","COUNT_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","QUEUE_DAEMON_STATUS_QUERY","daemonStatus","required","healthy","SNAPSHOT_PARENT_QUERY","SnapshotNav","activeTab","explorerPathString","currentPipelineState","useActivePipelineForName","currentSnapshotID","pathComponent","workspacePipelinePathGuessRepo","minimal","pipelineSnapshotOrError","parentSnapshotId","tag","tab","TabLink","SnapshotRoot","pipelinePath","PipelineRunsRoot","InstanceTabContext","healthTitle","InstanceTabs","InstanceBackfills","queryData","INSTANCE_HEALTH_FOR_BACKFILLS_QUERY","BACKFILLS_QUERY","partitionBackfillsOrError","backfillId","backfillHealths","allDaemonStatuses","daemon","daemonType","isBackfillHealthy","rel","BackfillTable","backfills","BACKFILL_TABLE_FRAGMENT","InstanceConfigStyle","InstanceConfig","INSTANCE_CONFIG_QUERY","config","info","version","editorDidMount","editor","documentHash","hash","RegExp","getSearchCursor","findNext","markText","lineNumbers","theme","InstanceHealthPage","INSTANCE_HEALTH_QUERY","DaemonList","daemonStatuses","RUN_STATUS_COLORS","QUEUED","NOT_STARTED","STARTING","MANAGED","STARTED","SUCCESS","FAILURE","CANCELING","CANCELED","RunStatusPez","opacity","Pez","$color","$opacity","RunStatusPezList","fade","step","RunStatusOverlay","repoAddr","hoverOpenDelay","OverlayContainer","OverlayTitle","RunRow","titleForRun","HorizontalSpace","SectionHeader","TIME_FORMAT","NextTick","nextTick","schedule","executionTimezone","futureTicks","scheduleState","InstigationStatus","earliest","earliestOverall","timezone","SCHEDULE_FUTURE_TICKS_FRAGMENT","overlap","end","start","makeJobKey","repoAddressAsString","RunTimelineContainer","range","hourWindow","jobsWithRuns","setJobsWithRuns","loadedWindow","setLoadedWindow","RUN_TIMELINE_QUERY","createdBefore","terminatedFilter","updatedAfter","jobsByKey","job","unterminated","terminated","workspaceOrError","runsByJob","locationEntries","locationEntry","locationOrLoadError","repositories","pipelines","pipeline","jobKey","jobTicks","jobRuns","workspacePipelinePath","repoName","repoLocation","startTimes","RunTimeline","setWidth","observer","containerRef","ResizeObserver","entries","entry","contentRect","observe","disconnect","Timeline","$height","TimeDividers","interval","RunTimelineRow","NoRunsTimeline","locale","TimezoneContext","timeMarkers","totalTime","firstMarker","markerCount","ceil","date","toLocaleString","hour","timeZone","browserTimezone","toString","marker","nowLeft","toPrecision","DividerContainer","DividerLabels","DividerLabel","DividerLines","DividerLine","backgroundColor","mergeStatusToColor","anyInProgress","anyQueued","anyFailed","anySucceeded","anyScheduled","failedStatuses","successStatuses","containerWidth","batched","batches","minChunkWidth","minMultipleWidth","rangeLength","floor","consolidated","shift","minLeft","unshift","batchRunsForTimeline","Row","JobName","RunChunks","batch","runCount","RunChunk","$multiple","RunHoverContent","BatchCount","ROW_HEIGHT","HoverContentJobName","TimeElapsed","startUnix","endUnix","RUN_TIME_FRAGMENT","JobMenu","lastRun","canLaunchPipelineReexecution","usePermissions","useLazyQuery","RUN_RE_EXECUTION_QUERY","fetchHasExecutionPlan","fetchIfPossible","reExecuteAllItem","canRunAllSteps","reExecuteFromFailureItem","canRunFromFailure","onOpened","MenuLink","DISABLED_MESSAGE","searchValue","InstanceOverviewPage","queryResultOverview","INSTANCE_OVERVIEW_INITIAL_QUERY","queryResultLastRuns","LAST_TEN_RUNS_PER_JOB_QUERY","lastTenRunsData","bucketed","failed","inProgress","succeeded","neverRan","sortFn","aRun","bRun","localeCompare","sensor","targets","t","filteredJobs","searchToLower","filterJobs","lastTenRunsFlattened","flattened","filteredJobsFlattened","jobList","filteredJobsWithRuns","appendRuns","jobItem","matchingRuns","grow","RunTimelineSection","JobSection","heading","ONE_HOUR","setShown","setHourWindow","nowRef","nowSecs","LOOKAHEAD_HOURS","unvalidatedStart","unvalidatedEnd","timelineJobs","hrWindow","Table","repoAddressString","LegacyPipelineTag","LastRunSummary","OVERVIEW_JOB_FRAGMENT","REPOSITORY_INFO_FRAGMENT","InstanceSchedules","INSTANCE_SCHEDULES_QUERY","AllSchedules","unloadableInstigationStatesOrError","unloadable","withSchedules","loadedSchedulesSection","SchedulesTable","unloadableSchedules","instigationType","InstigationType","unloadableSchedulesSection","Unloadable","scheduleStates","SCHEDULE_FRAGMENT","INSTIGATION_STATE_FRAGMENT","InstanceSensors","INSTANCE_SENSORS_QUERY","AllSensors","withSensors","sensorDefinitionsSection","SensorInfo","SensorsTable","unloadableSensors","unloadableSensorsSection","sensorStates","SENSOR_FRAGMENT","InstanceStatusRoot","render","InstanceRoot","pathname","useLocation","main","scrollTo","MainContent","M","exact","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","prototype","ANSI_COLORS","Anser","TypeError","_classCallCheck","fg","bg","fg_truecolor","bg_truecolor","bright","txt","escapeForHtml","ansiToHtml","ansiToJson","ansiToText","PALETTE_COLORS","g","_r","_g","_b","_i","str","process","json","clearLine","markup","_this","raw_text_chunks","first_chunk","test","color_chunks","chunk","processChunk","processChunkJson","remove_empty","c","isEmpty","use_classes","decoration","was_processed","nums","self","num_str","parseInt","isNaN","is_foreground","palette_index","klass","setupPalette","_this2","jsonChunk","styles","classes","render_data","fragments","hasOwnProperty","module","exports","__importDefault","mod","__esModule","__importStar","call","anser_1","require","escape_carriage_1","LINK_REGEX","convertBundleIntoReact","bundle","createStyle","classNames","substring","createClass","createElement","words","word","input","escapeCarriageReturn","default","ansiToJSON","bind","base","exec","insert","findLongestString","arr","longest","escapeSingleLineSafe","res","escapeCarriageReturnSafe","idx","debounce","isObject","func","wait","leading","trailing"],"sourceRoot":""}